{"version":3,"sources":["reducers/errorReducer.js","validation/is-empty.js","reducers/authReducer.js","reducers/usersReducer.js","reducers/profileReducer.js","reducers/adminExamsReducer.js","reducers/examsReducer.js","reducers/index.js","actions/types.js","actions/actions.js","sagas/usersSagas.js","sagas/profileSagas.js","sagas/examsSagas.js","sagas/adminExamsSagas.js","sagas/index.js","store.js","setAuthToken.js","actions/authentication.js","components/Register.js","components/Users.js","components/Profile.js","components/Exams.js","components/AdminExams.js","components/Dropzone.js","components/Progress.js","components/Upload.js","components/AddAdminExams.js","components/Drawer.js","components/Navbar.js","components/ForgotPassword.js","components/Login.js","components/Home.js","components/ResetPassword.js","App.js","registerServiceWorker.js","index.js"],"names":["initialState","isEmpty","value","undefined","Object","keys","length","trim","isAuthenticated","user","INITIAL_STATE","data","isFetching","error","users","state","arguments","action","type","profile","adminExams","exams","combineReducers","errors","payload","auth","objectSpread","usersReducer","profileReducer","adminExamsReducer","examsReducer","loadUsersSuccess","loadProfileSuccess","loadAdminExamsSuccess","loadExamsSuccess","getUsers","axios","actions","dados","regenerator_default","a","wrap","_context","prev","next","console","log","get","sent","put","stop","_marked","getProfile","profileSagas_marked","getExams","examsSagas_marked","getAdminExams","adminExamsSagas_marked","index","takeLatest","sagas_marked","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","run","indexSaga","setAuthToken","token","defaults","headers","common","require","config","setCurrentUser","decoded","logoutUser","history","dispatch","localStorage","removeItem","push","Register","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","username","completename","cpf","address","handleInputChange","bind","assertThisInitialized","handleSubmit","handleSelectTypeChange","e","setState","defineProperty","target","name","preventDefault","password","confirmPassword","props","registerUser","nextProps","errorsToSend","i","param","msg","admin","_React$createElement","_React$createElement2","_React$createElement3","_React$createElement4","classes","styles","react_default","createElement","Grid","container","spacing","direction","alignItems","justify","style","minHeight","marginTop","item","xs","Card","className","card","CardContent","Typography","variant","component","onSubmit","FormControl","formControl","fullWidth","InputLabel","htmlFor","Select","onChange","MenuItem","FormHelperText","id","margin","PropTypes","Input","aria-describedby","CardActions","Button","color","CircularProgress","Component","theme","button","input","display","connect","getItem","post","then","res","catch","err","JSON","stringify","response","withRouter","withStyles","Users","loadUsers","marginLeft","width","height","flex","justifyContent","alignContent","Grow","assign","in","transformOrigin","timeout","dist_default","title","columns","editable","onRowUpdate","newData","oldData","Promise","resolve","reject","patch","_id","onRowDelete","setTimeout","alert","options","actionsColumnIndex","exportButton","exportFileName","localization","header","body","emptyDataSourceMessage","editRow","deleteText","toolbar","searchTooltip","searchPlaceholder","exportTitle","exportAriaLabel","exportName","pagination","labelRowsSelect","labelDisplayedRows","firstTooltip","previousTooltip","nextTooltip","lastTooltip","field","render","rowData","Tooltip","placement","substring","date","lastActivity","Moment","format","convertDateMin","lookup","1","2","3","4","Profile","isEditing","tab","message","isSaving","handleTabsChange","changeToEditProfile","saveProfile","postPassword","handleInputPasswordChange","loadProfile","_this2","_this3","varName","event","newValue","Paper","Tabs","aria-label","Tab","label","a11yProps","TabPanel","handleSubmitProfile","disabled","onClick","children","other","objectWithoutProperties","role","hidden","concat","aria-labelledby","Box","p","aria-controls","Exams","loadExams","icon","tooltip","method","responseType","file","Blob","fileURL","URL","createObjectURL","open","convertDateMax","AdminExams","loadAdminExams","delete","lastRead","Dropzone","hightlight","fileInputRef","React","createRef","openFileDialog","onFilesAdded","onDragOver","onDragLeave","onDrop","current","click","evt","files","array","fileListToArray","disabed","dataTransfer","list","cursor","ref","accept","CloudUpload_default","Progress","progress","Upload","uploading","uploadProgress","successfullUploaded","uploadFiles","sendRequest","renderActions","prevState","promises","forEach","all","FormData","append","userId","displayName","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","Symbol","iterator","done","key","return","ttthis","url","Content-Type","onUploadProgress","ProgressEvent","loaded","total","copy","percentage","triggerUploadedFinished","components_Progress","float","CheckCircle_default","opacity","_this4","_this5","padding","components_Dropzone","List","ListItem","Person_default","marginRight","Edit_default","map","PictureAsPdf_default","renderProgress","AddAdminExams","activeStep","skipped","Set","steps","getSteps","showStepper","handleSelectedUser","handleNext","handleBack","handleSkip","handleReset","getStepContent","handledisplayName","userOk","userNameSelected","step","renderSelectUser","renderdisplayName","renderUploadFile","alignitems","isFetchingUsers","native","TextField","placeholder","helpertext","components_Upload","has","newSkipped","isStepSkipped","values","isStepOptional","Error","add","uploadFinished","Stepper","stepProps","labelProps","optional","completed","Step","StepLabel","marginBottom","useStyles","makeStyles","root","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","mixins","content","flexGrow","MiniDrawer","_clsx3","_clsx4","useTheme","_React$useState","useState","_React$useState2","slicedToArray","setOpen","onLogout","CssBaseline","react_router_dom","AppBar","position","clsx","Toolbar","IconButton","edge","Menu_default","noWrap","sectionDesktop","right","top","fontSize","Drawer","paper","ChevronRight_default","ChevronLeft_default","Divider","Link","to","ListItemIcon","PersonAdd_default","ListItemText","primary","Group_default","NoteAdd_default","ContactMail_default","ExitToApp_default","react_router","exact","path","_sectionDesktop","unit","Navbar","_this$props$auth","guestLinks","ForgotPassword","emailSent","indexOf","gutterBottom","Login","loginUser","AdapterLink","forwardRef","innerRef","flexWrap","minWidth","maxWidth","setItem","jwt_decode","Home","backgroundColor","ResetPassword","passwordReseted","erros","location","search","split","jwtToken","currentTime","Date","now","exp","href","App","_useState","palette","main","secondary","accent","background","default","_useState2","muiTheme","createMuiTheme","es","ThemeProvider","components_Navbar","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","src_App","document","getElementById","process","origin","addEventListener","fetch","status","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.237d3703.chunk.js","sourcesContent":["import { GET_ERRORS } from '../actions/types';\n\nconst initialState = {};\n\nexport default function(state = initialState, action ) {\n    switch(action.type) {\n        case GET_ERRORS:\n            return action.payload;\n        default: \n            return state;\n    }\n}","const isEmpty = (value) => {\n    return (\n        value === undefined ||\n        value === null ||\n        (typeof value === 'object' && Object.keys(value).length === 0) ||\n        (typeof value === 'string' && value.trim().length === 0)\n    );\n}\nexport default isEmpty;","import { SET_CURRENT_USER } from '../actions/types';\nimport isEmpty from '../validation/is-empty';\n\nconst initialState = {\n    isAuthenticated: false,\n    user: {}\n}\n\nexport default function(state = initialState, action ) {\n    switch(action.type) {\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                isAuthenticated: !isEmpty(action.payload),\n                user: action.payload\n            }\n        default: \n            return state;\n    }\n}","const INITIAL_STATE = {\n    data: [],\n    isFetching: false,\n    error:false\n}\n\nconst users = ( state = INITIAL_STATE, action) => {\n    if(action.type === 'LOAD_USERS_REQUEST' ){\n        return {\n            isFetching: true,\n            data: [],\n            error: false\n        }\n    }\n    if(action.type === 'LOAD_USERS_SUCCESS' ){\n        return {\n            isFetching: false,\n            data: action.data,\n            error: false,\n        }\n    }\n    if(action.type === 'LOAD_USERS_ERROR' ){\n        return {\n            isFetching: false,\n            data: [],\n            error: true\n        }\n    }\n    return state\n}\n\nexport default users","const INITIAL_STATE = {\n    data: [],\n    isFetching: false,\n    error:false\n}\n\nconst profile = ( state = INITIAL_STATE, action) => {\n    if(action.type === 'LOAD_PROFILE_REQUEST' ){\n        return {\n            isFetching: true,\n            data: [],\n            error: false\n        }\n    }\n    if(action.type === 'LOAD_PROFILE_SUCCESS' ){\n        return {\n            isFetching: false,\n            data: action.data,\n            error: false,\n        }\n    }\n    if(action.type === 'LOAD_PROFILE_ERROR' ){\n        return {\n            isFetching: false,\n            data: [],\n            error: true\n        }\n    }\n    return state\n}\n\nexport default profile","const INITIAL_STATE = {\n    data: [],\n    isFetching: false,\n    error:false\n}\n\nconst adminExams = ( state = INITIAL_STATE, action) => {\n    if(action.type === 'LOAD_ADMIN_EXAMS_REQUEST' ){\n        return {\n            isFetching: true,\n            data: [],\n            error: false\n        }\n    }\n    if(action.type === 'LOAD_ADMIN_EXAMS_SUCCESS' ){\n        return {\n            isFetching: false,\n            data: action.data,\n            error: false,\n        }\n    }\n    if(action.type === 'LOAD_ADMIN_EXAMS_ERROR' ){\n        return {\n            isFetching: false,\n            data: [],\n            error: true\n        }\n    }\n    return state\n}\n\nexport default adminExams","const INITIAL_STATE = {\n    data: [],\n    isFetching: false,\n    error:false\n}\n\nconst exams = ( state = INITIAL_STATE, action) => {\n    if(action.type === 'LOAD_EXAMS_REQUEST' ){\n        return {\n            isFetching: true,\n            data: [],\n            error: false\n        }\n    }\n    if(action.type === 'LOAD_EXAMS_SUCCESS' ){\n        return {\n            isFetching: false,\n            data: action.data,\n            error: false,\n        }\n    }\n    if(action.type === 'LOAD_EXAMS_ERROR' ){\n        return {\n            isFetching: false,\n            data: [],\n            error: true\n        }\n    }\n    return state\n}\n\nexport default exams","import { combineReducers } from 'redux';\nimport errorReducer from './errorReducer';\nimport authReducer from './authReducer';\nimport usersReducer from './usersReducer'\nimport profileReducer from './profileReducer'\nimport adminExamsReducer from  './adminExamsReducer'\nimport examsReducer from  './examsReducer'\n\nexport default combineReducers({\n    errors: errorReducer,\n    auth: authReducer,\n    users: usersReducer,\n    profile: profileReducer,\n    adminExams: adminExamsReducer,\n    exams: examsReducer\n});","export const GET_ERRORS = 'GET_ERRORS';\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';","\nexport const loadUsersRequest = () => {\n    return {\n        type : 'LOAD_USERS_REQUEST'\n    }\n}\nexport const loadUsersSuccess = (data) => {\n    return {\n        type : 'LOAD_USERS_SUCCESS',\n        data\n    }   \n}\n\nexport const loadProfileRequest = () => {\n    return {\n        type : 'LOAD_PROFILE_REQUEST'\n    }\n}\nexport const loadProfileSuccess = (data) => {\n    return {\n        type : 'LOAD_PROFILE_SUCCESS',\n        data\n    }   \n}\n\nexport const loadAdminExamsRequest = () => {\n    return {\n        type : 'LOAD_ADMIN_EXAMS_REQUEST'\n    }\n}\nexport const loadAdminExamsSuccess = (data) => {\n    return {\n        type : 'LOAD_ADMIN_EXAMS_SUCCESS',\n        data\n    }   \n}\nexport const loadExamsRequest = () => {\n    return {\n        type : 'LOAD_EXAMS_REQUEST'\n    }\n}\nexport const loadExamsSuccess = (data) => {\n    return {\n        type : 'LOAD_EXAMS_SUCCESS',\n        data\n    }   \n}","import { put } from 'redux-saga/effects'\nimport  { loadUsersSuccess } from './../actions/actions'\n\nfunction *getUsers(axios, actions){\n    console.log('usersSagas')    \n    const dados = yield axios.get('/api/users/')\n        console.log(dados.data)\n        yield put(loadUsersSuccess(dados.data))\n    \n}\nexport default getUsers","import { put } from 'redux-saga/effects'\nimport  { loadProfileSuccess } from './../actions/actions'\n\nfunction *getProfile(axios, actions){\n    console.log('profileSagas')    \n    const dados = yield axios.get('/api/users/me')\n        console.log('eeeee', dados.data)\n        yield put(loadProfileSuccess(dados.data))\n    \n}\nexport default getProfile","import { put } from 'redux-saga/effects'\nimport  { loadExamsSuccess } from './../actions/actions'\n\nfunction *getExams(axios, actions){\n    \n    const dados = yield axios.get('/api/files/')\n        console.log(dados.data)\n        yield put(loadExamsSuccess(dados.data))\n    \n}\nexport default getExams","import { put } from 'redux-saga/effects'\nimport  { loadAdminExamsSuccess } from './../actions/actions'\n\nfunction *getAdminExams(axios){\n\n    const dados = yield axios.get('/api/files/')\n        console.log(dados.data)\n        yield put(loadAdminExamsSuccess(dados.data))\n    \n}\nexport default getAdminExams\n","import { takeLatest } from 'redux-saga/effects'\nimport getUsers from './usersSagas'\nimport getProfile from './profileSagas'\nimport getExams from './examsSagas'\nimport getAdminExams from './adminExamsSagas'\n\nimport axios from 'axios'\n\nfunction *index(){\n    \n    yield takeLatest('LOAD_USERS_REQUEST', getUsers, axios)\n    yield takeLatest('LOAD_PROFILE_REQUEST', getProfile, axios)\n    yield takeLatest('LOAD_ADMIN_EXAMS_REQUEST', getAdminExams, axios)\n    yield takeLatest('LOAD_EXAMS_REQUEST', getExams, axios)\n}\n\nexport default index","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport  createSagaMiddleware from 'redux-saga' \nimport indexSaga from './sagas/index'\n\nconst inititalState = {};\n\nconst sagaMiddleware = createSagaMiddleware()\n\n\nconst store = createStore(\n        rootReducer, \n        inititalState, \n        compose(applyMiddleware(thunk,sagaMiddleware), \n                window.__REDUX_DEVTOOLS_EXTENSION__&& window.__REDUX_DEVTOOLS_EXTENSION__()));\n\nsagaMiddleware.run(indexSaga)\n\nexport default store;","import axios from 'axios';\n\nconst setAuthToken = token => {\n   \n    if(token) {\n        axios.defaults.headers.common['Authorization'] = token;\n    }\n    else {\n        delete axios.defaults.headers.common['Authorization'];\n    }\n}\n\nexport default setAuthToken;","import axios from 'axios';\nimport { GET_ERRORS, SET_CURRENT_USER } from './types';\nimport setAuthToken from '../setAuthToken';\nimport jwt_decode from 'jwt-decode';\nrequire('dotenv').config()\n\nexport const registerUser = (user, history) => dispatch => {\n    \n    if(localStorage.getItem('jwtToken')){\n        axios.defaults.headers.common['Authorization'] = localStorage.getItem('jwtToken')\n        console.log(axios.defaults.headers.common['Authorization'])\n        axios.post('/api/users/register', user)\n                .then(res => history.push('/users?registrationSucessfull=true'))\n                .catch(err => {\n                    console.log(JSON.stringify(err.response))\n                    dispatch({\n                        type: GET_ERRORS,\n                        payload: err.response.data\n                    });\n                });\n    }else{\n        history.push('/login')\n    }\n    \n}\n\nexport const loginUser = (user) => dispatch => {\n    \n    axios.post('http://localhost:4444/api/users/login', user)\n            .then(res => {\n                console.log('res', res.data)\n                const { token } = res.data;\n                localStorage.setItem('jwtToken', token);\n                setAuthToken(token);\n                const decoded = jwt_decode(token);\n                dispatch(setCurrentUser(decoded));\n            })\n            .catch((err) => {\n                console.log(err)\n                console.log(err.response)\n                if(err && err.response){\n                    dispatch({\n                        type: GET_ERRORS,\n                        payload: err.response.data\n                    })\n                }else{\n                    console.log(err)\n                }\n                \n            });\n}\n\nexport const setCurrentUser = decoded => {\n    return {\n        type: SET_CURRENT_USER,\n        payload: decoded\n    }\n}\n\nexport const logoutUser = (history) => dispatch => {\n    localStorage.removeItem('jwtToken');\n    setAuthToken(false);\n    dispatch(setCurrentUser({}));\n    history.push('/login');\n}","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { withRouter } from 'react-router-dom'\nimport { registerUser } from '../actions/authentication'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { withStyles } from '@material-ui/styles'\nimport MenuItem   from '@material-ui/core/MenuItem'\nimport Select   from '@material-ui/core/Select'\nimport FormControl   from '@material-ui/core/FormControl'\nimport InputLabel   from '@material-ui/core/InputLabel'\nimport Input   from '@material-ui/core/Input'\nimport FormHelperText   from '@material-ui/core/FormHelperText'\nimport Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport CircularProgress from '@material-ui/core/CircularProgress' \n\nclass Register extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            username: '',\n            type: 0,\n            completename: '',\n            cpf: '',\n            address: '',\n    //        password: '',\n    //        confirmPassword: '',\n            errors: {},\n            isFetching: false\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleSelectTypeChange = this.handleSelectTypeChange.bind(this)\n    }\n    \n    handleInputChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    handleSelectTypeChange(e){\n        console.log('e ', e)\n        this.setState({\n            type: e.target.value\n        })\n    }\n    handleSubmit(e) {\n        e.preventDefault();\n        const user = {\n            username: this.state.username,\n            type: this.state.type,\n            completename: this.state.completename,\n            cpf: this.state.cpf,\n            address: this.state.address,\n            password: this.state.password,\n            confirmPassword: this.state.confirmPassword\n        }\n        this.setState({\n            isFetching: true\n        })\n        this.props.registerUser(user, this.props.history);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.auth.isAuthenticated) {\n    //        this.props.history.push('/')\n        }\n        this.setState({\n            isFetching: false\n        })\n        if(nextProps.errors) {\n            var errors = nextProps.errors.errors\n            console.log(errors)\n            var errorsToSend = {\n\n            }\n            if(errors && errors.length){\n                for(var i=0;i<errors.length;i++){\n                    console.log(errors[i].param)\n                    if(errors[i].param === 'username'){\n                        errorsToSend.username = errors[i].msg\n                    }else if(errors[i].param === 'password'){\n                        errorsToSend.password = errors[i].msg\n                    }\n                    else if(errors[i].param === 'confirmPassword'){\n                        errorsToSend.confirmPassword = errors[i].msg\n                    }\n                    else if(errors[i].param === 'type'){\n                        errorsToSend.type = errors[i].msg\n                    }\n                }\n                console.log(errorsToSend)\n                this.setState({\n                    errors: errorsToSend\n                })\n            }\n        }\n    }\n\n    componentDidMount() {\n        if(this.props.auth.isAuthenticated && !this.props.auth.user.admin) {\n            this.props.history.push('/');\n        }\n    }\n    \n    render() {\n        \n        \n        const { errors } = this.state\n        const classes = styles()\n  //      React.useEffect(() => {\n  //          setLabelWidth(labelRef.current.offsetWidth)\n  //        }, [])\n\n\n        return(\n            <Grid\n            container\n            spacing={0}\n            direction=\"column\"\n            alignItems=\"center\"\n            justify=\"center\"\n            style={{ minHeight: '100vh', marginTop: 50 }}\n           >\n          \n            <Grid item xs={5}>\n                    <Card className={classes.card}>\n                    <CardContent>\n                    <Typography \n                            variant=\"h5\" component=\"h2\">\n                        Casdastrar novo usuário\n\n                    </Typography>\n                    <form onSubmit={ this.handleSubmit }>\n                    <FormControl className={classes.formControl} fullWidth={true} >\n                        <InputLabel htmlFor=\"type-error\">Tipo de Usuário</InputLabel>\n                        <Select\n                        value={this.state.type}\n                        onChange={this.handleSelectTypeChange}\n                        name=\"type\"\n                        \n                        >\n                        <MenuItem value={0}>\n                            <em>Escolha tipo de usuário</em>\n                        </MenuItem>\n                        <MenuItem value={1}>Cliente</MenuItem>\n                        <MenuItem value={2}>Clínica</MenuItem>\n                        <MenuItem value={3}>Veterinário</MenuItem>\n                        <MenuItem value={4}>Administrador</MenuItem>\n                        </Select>\n                        {errors.type && (<FormHelperText id=\"type-text\">{errors.type}</FormHelperText>)}\n                    </FormControl>\n                        <FormControl className={classes.formControl} fullWidth={true} margin={PropTypes.margin}>\n                            <InputLabel htmlFor=\"username\">E-mail</InputLabel>\n                            <Input\n                            type=\"text\"\n                            id=\"username\"\n                            value={ this.state.username }\n                            name=\"username\"\n                            onChange={this.handleInputChange}\n                            aria-describedby=\"username-text\"\n                            onChange={ this.handleInputChange }\n                            value={ this.state.username }\n                            />\n                            {errors.username && (<FormHelperText id=\"username-text\">{errors.username}</FormHelperText>)}\n                        </FormControl>\n                        <FormControl className={classes.formControl} fullWidth={true} >\n                            <InputLabel htmlFor=\"completename\">Nome Completo</InputLabel>\n                            <Input\n                            type=\"text\"\n                            id=\"completename\"\n                            value={ this.state.completename }\n                            name=\"completename\"\n                            onChange={this.handleInputChange}\n                            aria-describedby=\"completename-text\"\n                            onChange={ this.handleInputChange }\n                            value={ this.state.completename }\n                            />\n                            {errors.completename && (<FormHelperText id=\"completename-text\">{errors.completename}</FormHelperText>)}\n                        </FormControl>\n                        <FormControl className={classes.formControl} fullWidth={true} >\n                            <InputLabel htmlFor=\"cpf\">CPF/CNPJ</InputLabel>\n                            <Input\n                            type=\"text\"\n                            id=\"cpf\"\n                            value={ this.state.cpf }\n                            name=\"cpf\"\n                            onChange={this.handleInputChange}\n                            aria-describedby=\"cpf-text\"\n                            onChange={ this.handleInputChange }\n                            value={ this.state.cpf }\n                            />\n                            {errors.cpf && (<FormHelperText id=\"cpf-text\">{errors.cpf}</FormHelperText>)}\n                        </FormControl>\n                        <FormControl className={classes.formControl} fullWidth={true} >\n                            <InputLabel htmlFor=\"address\">Endereço</InputLabel>\n                            <Input\n                            type=\"text\"\n                            id=\"address\"\n                            value={ this.state.address }\n                            name=\"address\"\n                            onChange={this.handleInputChange}\n                            aria-describedby=\"address-text\"\n                            onChange={ this.handleInputChange }\n                            value={ this.state.address }\n                            />\n                            {errors.address && (<FormHelperText id=\"address-text\">{errors.address}</FormHelperText>)}\n                        </FormControl>\n                       \n                    <CardActions>\n                        {!this.state.isFetching && (<Button fullWidth={true} variant=\"contained\" color=\"primary\" type=\"submit\" >\n                            Cadastrar\n                        </Button> )}\n                        {this.state.isFetching && (\n                            <Grid\n                            container\n                            spacing={0}\n                            direction=\"column\"\n                            alignItems=\"center\"\n                            justify=\"center\"\n                            style={{marginTop: 30}}\n                          >\n                                <CircularProgress />\n                            </Grid>\n                        )}\n                    </CardActions>\n                    </form>\n                    </CardContent>\n                </Card>\n            </Grid>      \n          </Grid>\n        )\n    }\n}\n\nconst styles = theme => ({\n    button: {\n    //  margin: theme.spacing(1),\n    },\n    input: {\n      display: 'none',\n    },\n    formControl:{\n        marginTop:200\n    }\n  })\nRegister.propTypes = {\n    registerUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(mapStateToProps,{ registerUser })(withRouter(Register), withStyles(styles))","import React, { Component } from 'react';\nimport { loadUsersRequest } from '../actions/actions'\nimport { connect } from 'react-redux'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Card from '@material-ui/core/Grid'\nimport CardContent from '@material-ui/core/Grid'\nimport MaterialTable from 'material-table'\nimport Moment from 'moment'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport axios from 'axios'\nimport Grow from '@material-ui/core/Grow'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nclass Users extends Component {\n    \n    constructor(props){\n        super(props)\n    \n    }\n    \n    componentDidMount(){\n        this.props.loadUsers()\n    }\n\n    render() {\n        return (\n            <div style={{marginLeft:10, marginTop: 40, width:'100%', height:'100%'}}>\n            {this.props.isFetching && (\n                            <Grid\n                            container\n                            spacing={0}\n                            direction=\"column\"\n                            alignItems=\"center\"\n                            justify=\"center\"\n                            style={{flex:1, marginTop:100,justifyContent: 'center', alignContent: 'center', alignItems: 'center'}}\n                          >\n                                <CircularProgress />\n                            </Grid>\n                        )}\n               {!this.props.isFetching && (\n               <Grow\n                in={!this.props.isFetching}\n                style={{ transformOrigin: '0 0 0' }}\n                {...(!this.props.isFetching ? { timeout: 1000 } : {})}\n                >\n               <Grid\n                    container\n                    spacing={0}\n                    direction=\"column\"\n                    alignItems=\"center\"\n                    justify=\"center\"\n                    style={{ minHeight: '100vh',  }}\n                >\n                \n                    <Grid item xs={12}>\n                    <MaterialTable\n                        title=\"Usuários\"\n                        columns={columns}\n                        data={this.props.users}\n                        editable={{\n\n                            onRowUpdate: (newData, oldData) =>\n                                new Promise((resolve, reject) => {\n                                    axios.patch('api/users/' + oldData._id, newData)\n                                        .then(res => {\n                                            this.props.loadUsers()\n                                            resolve()\n                                        })\n                                       .catch(err => {\n                                            reject()\n                                       })\n                                }),\n                            onRowDelete: oldData =>\n                                new Promise((resolve, reject) => {\n                                    setTimeout(() => {\n                                        {\n                                            alert('opção não habilitada')\n                                        }\n                                        resolve();\n                                    }, 1000);\n                                })\n                        }}\n                        options={{\n                            actionsColumnIndex: -1,\n                            exportButton: true,\n                            exportFileName: 'Usuarios'\n                          }}\n                          localization={{\n                            header: {\n                                actions: 'Ações'\n                            },\n                            body: {\n                              emptyDataSourceMessage: 'Sem dados para mostrar',\n                              editRow: {\n                                deleteText: 'Tem certeza que quer deletar o usuário?'\n                              }\n                            },\n                            toolbar: {\n                              searchTooltip: 'Procurar',\n                              searchPlaceholder: 'Procurar',\n                              exportTitle: 'Exportar CSV',\n                              exportAriaLabel: 'Exportar CSV',\n                              exportName: 'Exportar CSV'\n\n                            },\n                            pagination: {\n                              labelRowsSelect: 'Filas',\n                              labelDisplayedRows: '{count} de {from}-{to} ',\n                              firstTooltip: 'Primeira',\n                              previousTooltip: 'Anterior',\n                              nextTooltip: 'Seguinte',\n                              lastTooltip: 'Última Página'\n                            }\n                          }}\n                        />\n                    </Grid>\n             </Grid>\n             </Grow>\n             )}\n            \n            </div>\n        );\n    }\n}\nfunction convertDateMin(date){\n    return  Moment(date).format('DD/MM/YY')\n }\n function convertDateMax(date){\n    return  Moment(date).format('DD/MM/YYYY hh:mm A')\n }\nconst columns = [\n{ title: 'E-mail', field: 'username' },\n{ title: 'Nome', field: 'completename' },\n{ title: 'CPF/CNPJ', field: 'cpf' },\n{ title: 'Endereço',\n  field: 'address',\n  render: rowData => <Tooltip title={rowData.address ? rowData.address : 'Sem Endereço definido'} placement=\"top\"><div> {( rowData.address && rowData.address.length > 5) ? (rowData.address.substring(0,5) + '...') : rowData.address} </div></Tooltip>  },\n{ title: 'Atividade', \n  field: 'lastActivity',\n  type: 'datetime', \n  render: rowData => <Tooltip title={convertDateMax(rowData.lastActivity)}><div> {convertDateMin(rowData.lastActivity) }</div></Tooltip> },\n{\n  title: 'Tipo',\n  field: 'type',\n  lookup: { 1: 'Cliente', 2: 'Clínica', 3: 'Veterinário', 4: 'Admin' },\n},]\nconst mapStateToProps = (state) => {\n    return {\n        isFetching: state.users.isFetching,\n        users: state.users.data,\n        error: state.users.error\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        loadUsers: () => dispatch(loadUsersRequest())\n    }\n} \n\nexport default connect(mapStateToProps, mapDispatchToProps)(Users)","import React, { Component } from 'react';\nimport { loadProfileRequest } from '../actions/actions'\nimport { connect } from 'react-redux'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Box from '@material-ui/core/Box'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport PropTypes from 'prop-types'\nimport Paper from '@material-ui/core/Paper'\nimport MenuItem   from '@material-ui/core/MenuItem'\nimport Select   from '@material-ui/core/Select'\nimport FormControl   from '@material-ui/core/FormControl'\nimport InputLabel   from '@material-ui/core/InputLabel'\nimport Input   from '@material-ui/core/Input'\nimport FormHelperText   from '@material-ui/core/FormHelperText'\nimport Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport CircularProgress from '@material-ui/core/CircularProgress' \nimport AppBar from  '@material-ui/core/AppBar' \nimport { minWidth } from '@material-ui/system';\nimport axios from 'axios'\n\nclass Profile extends Component {\n    \n    constructor(props){\n        \n        super(props)\n        this.state = {\n            isEditing: false,\n            tab: 0,\n            errors: false,\n            message: false,\n            isSaving: false,\n            password: '',\n            confirmPassword: ''\n        }\n        \n        this.handleTabsChange = this.handleTabsChange.bind(this)\n        this.changeToEditProfile = this.changeToEditProfile.bind(this)\n        this.handleInputChange = this.handleInputChange.bind(this)\n        this.saveProfile = this.saveProfile.bind(this)\n        this.postPassword = this.postPassword.bind(this)\n        this.handleInputPasswordChange = this.handleInputPasswordChange.bind(this)\n    }\n    \n    componentDidMount(){\n        this.props.loadProfile()\n    }\n    postPassword(){\n        if(!this.state.password || !this.state.confirmPassword){\n            this.setState({\n                errors: 'Por favor, escrever senha e confirmar a mesma'\n            })\n        }else if(this.state.password.length < 6){\n            this.setState({\n                errors: 'A senha deve ter minimo 6 carateres'\n            })\n        }else if(this.state.password != this.state.confirmPassword){\n            this.setState({\n                errors: 'A senhas não coincidem'\n            })\n        }else{\n            this.setState({\n                isSaving: true\n            })\n            axios.post('/api/users/reset_password', {password: this.state.password,\n                                                     confirmPassword: this.state.confirmPassword})\n                  .then(res => {\n                        this.setState({\n                            password: '',\n                            confirmPassword: '',\n                            isSaving: false,\n                            message: 'Sua senha foi redefinida com sucesso'\n                        })\n                  })\n                  .catch(err => {\n                      if(err && err.response){\n                          this.setState({\n                              errors: JSON.stringify(err.response),\n                              isSaving: false\n                          })\n                      }\n                  })\n        }\n        \n    }\n    saveProfile(){\n        this.setState({\n            isSaving: true\n        })\n        axios.post('/api/users/me', this.props.profile)\n            .then(res => {\n                \n                this.props.profile.address = res.data.address\n                this.props.profile.cpf = res.data.cpf\n                this.props.profile.completename = res.data.completename\n                \n                this.setState({\n                    isSaving: false,\n                    isEditing: false\n                })\n            })\n            .catch(err => {\n                this.setState({\n                    errors: JSON.stringify(err.response)\n                })\n            })\n    }\n    handleInputChange(e) {\n        const varName = e.target.name\n        this.props.profile[varName] = e.target.value\n        this.setState({})\n    }\n    handleInputPasswordChange(e){\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    handleSelectTypeChange(e){\n        this.setState({\n            type: e.target.value\n        })\n    }\n    handleSubmitProfile(e) {\n        e.preventDefault();\n    }\n    handleTabsChange(event, newValue){\n        this.setState({\n            tab: newValue\n        })\n    }\n    changeToEditProfile(){\n        this.setState({\n            isEditing : true\n        })\n    }\n    render() {\n        return (\n            <div style={{marginTop: 80, marginLeft: 30, width: '100%', height: '100%', flex: 1, justifyContent: 'center', alignContent:'center'}}>\n               <Typography>\n                   Meu Perfil\n               </Typography>\n               \n               <Paper style={{marginTop:10, width: '70%'}}>\n                    <Tabs \n                    value={this.state.tab} onChange={this.handleTabsChange} aria-label=\"Meu Perfil\">\n                    <Tab label=\"Detalhes Conta\" {...a11yProps(0)} />\n                    <Tab label=\"Modificar Senha\" {...a11yProps(1)} />\n                    </Tabs>\n                <TabPanel value={this.state.tab} index={0}>\n                {!this.props.isFetching &&(\n                        <form onSubmit={ this.handleSubmitProfile }>\n                            <FormControl className={classes.formControl} fullWidth={true} >\n                                <InputLabel htmlFor=\"type-error\">Tipo de Usuário</InputLabel>\n                                <Select\n                                value={this.props.profile.type}\n                                onChange={this.handleSelectTypeChange}\n                                name=\"type\"\n                                disabled={true}\n                                >\n                                    <MenuItem value={0}>\n                                        <em>Escolha tipo de usuário</em>\n                                    </MenuItem>\n                                    <MenuItem value={1}>Cliente</MenuItem>\n                                    <MenuItem value={2}>Clínica</MenuItem>\n                                    <MenuItem value={3}>Veterinário</MenuItem>\n                                    <MenuItem value={4}>Administrador</MenuItem>\n                                </Select>\n                                \n                            </FormControl>\n                                <FormControl className={classes.formControl} fullWidth={true} margin={PropTypes.margin}>\n                                    <InputLabel htmlFor=\"username\">E-mail</InputLabel>\n                                    <Input\n                                    type=\"text\"\n                                    id=\"username\"\n                                    name=\"username\"\n                                    onChange={this.handleInputChange}\n                                    aria-describedby=\"username-text\"\n                                    onChange={ this.handleInputChange }\n                                    value={ this.props.profile.username }\n                                    disabled={true}\n                                    />\n                                    \n                                </FormControl>\n                                <FormControl className={classes.formControl} fullWidth={true} >\n                                    <InputLabel htmlFor=\"completename\">Nome Completo</InputLabel>\n                                    <Input\n                                    type=\"text\"\n                                    id=\"completename\"\n                                    name=\"completename\"\n                                    onChange={this.handleInputChange}\n                                    aria-describedby=\"completename-text\"\n                                    value={ this.props.profile.completename }\n                                    disabled={!this.state.isEditing}\n                                    />\n                                    {this.props.error.completename && (<FormHelperText id=\"completename-text\">{this.props.error.completename}</FormHelperText>)}\n                                </FormControl>\n                                <FormControl className={classes.formControl} fullWidth={true} >\n                                    <InputLabel htmlFor=\"cpf\">CPF/CNPJ</InputLabel>\n                                    <Input\n                                    type=\"text\"\n                                    id=\"cpf\"\n                                    name=\"cpf\"\n                                    aria-describedby=\"cpf-text\"\n                                    onChange={ this.handleInputChange }\n                                    value={ this.props.profile.cpf }\n                                    disabled={!this.state.isEditing}\n                                    />\n                                    {this.props.error.cpf && (<FormHelperText id=\"cpf-text\">{this.props.error.cpf}</FormHelperText>)}\n                                </FormControl>\n                                <FormControl className={classes.formControl} fullWidth={true} >\n                                    <InputLabel htmlFor=\"address\">Endereço</InputLabel>\n                                    <Input\n                                    type=\"text\"\n                                    id=\"address\"\n                                    name=\"address\"\n                                    aria-describedby=\"address-text\"\n                                    onChange={ this.handleInputChange }\n                                    value={ this.props.profile.address }\n                                    disabled={!this.state.isEditing}\n                                    />\n                                    {this.props.error.address && (<FormHelperText id=\"address-text\">{this.props.error.address}</FormHelperText>)}\n                                </FormControl>\n                            \n                            <CardActions>\n                                {!this.state.isSaving && !this.state.isEditing && \n                                    (<Button \n                                        onClick={this.changeToEditProfile}\n                                        fullWidth={true} variant=\"outlined\" color=\"primary\" type=\"submit\" >\n                                        Modificar Perfil\n                                </Button> )}\n                                {!this.state.isSaving && this.state.isEditing &&\n                                    (<Button \n                                        onClick={this.saveProfile}\n                                        fullWidth={true} variant=\"contained\" color=\"primary\" type=\"submit\" >\n                                        Salvar\n                                </Button> )}\n                                \n                                {this.state.isSaving && (\n                                    <Grid\n                                    container\n                                    spacing={0}\n                                    direction=\"column\"\n                                    alignItems=\"center\"\n                                    justify=\"center\"\n                                    style={{marginTop: 30}}\n                                >\n                                        <CircularProgress />\n                                    </Grid>\n                                )}\n                            </CardActions>\n                            </form>\n                            )}\n                </TabPanel>\n                <TabPanel value={this.state.tab} index={1}>\n                {!this.props.isFetching &&(\n                        <form onSubmit={ this.handleSubmitProfile }>\n                            \n                                <FormControl className={classes.formControl} fullWidth={true} margin={PropTypes.margin}>\n                                    <InputLabel htmlFor=\"password\">Nova senha</InputLabel>\n                                    <Input\n                                    type=\"password\"\n                                    id=\"password\"\n                                    name=\"password\"\n                                    onChange={this.handleInputPasswordChange}\n                                    aria-describedby=\"password-text\"\n                                    value={ this.state.password }\n                                    />\n                                </FormControl>\n                                <FormControl className={classes.formControl} fullWidth={true} margin={PropTypes.margin}>\n                                    <InputLabel htmlFor=\"confirmPassword\">Confirmar Nova senha</InputLabel>\n                                    <Input\n                                    type=\"password\"\n                                    id=\"confirmPassword\"\n                                    name=\"confirmPassword\"\n                                    onChange={this.handleInputPasswordChange}\n                                    aria-describedby=\"confirmPassword-text\"\n                                    value={ this.state.confirmPassword }\n                                    />\n                                </FormControl>\n                                {this.state.errors && (<FormHelperText id=\"password-text\" style={{color: 'red'}}>{this.state.errors}</FormHelperText>)}\n                                {this.state.message && (<FormHelperText id=\"password-text\" style={{color: 'green'}}>{this.state.message}</FormHelperText>)}\n                            <CardActions>\n                                {!this.state.isSaving &&\n                                    (<Button \n                                        onClick={this.postPassword}\n                                        fullWidth={true} variant=\"contained\" color=\"primary\" type=\"submit\" >\n                                        Redefinir Senha\n                                </Button> )}\n                                \n                                {this.state.isSaving && (\n                                    <Grid\n                                    container\n                                    spacing={0}\n                                    direction=\"column\"\n                                    alignItems=\"center\"\n                                    justify=\"center\"\n                                    style={{marginTop: 30}}\n                                >\n                                        <CircularProgress />\n                                    </Grid>\n                                )}\n                            </CardActions>\n                            </form>\n                            )}\n                </TabPanel>\n                </Paper>\n            </div>\n        );\n    }\n}\nconst classes = {}\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <Typography\n        component=\"div\"\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        <Box p={3}>{children}</Box>\n      </Typography>\n    );\n  }\n  \n  TabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n  };\n  \n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n\n  \n  \n\nconst mapStateToProps = (state) => {\n    return {\n        isFetching: state.profile.isFetching,\n        profile: state.profile.data,\n        error: state.profile.error\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        loadProfile: () => dispatch(loadProfileRequest())\n    }\n} \n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile)","import React, { Component } from 'react';\nimport { loadExamsRequest } from '../actions/actions'\nimport { connect } from 'react-redux'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Card from '@material-ui/core/Grid'\nimport CardContent from '@material-ui/core/Grid'\nimport MaterialTable from 'material-table'\nimport Moment from 'moment'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport axios from 'axios'\nimport Grow from '@material-ui/core/Grow'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nclass Exams extends Component {\n    \n    constructor(props){\n        super(props)\n    \n    }\n    \n    componentDidMount(){\n        this.props.loadExams()\n    }\n\n    render() {\n        return (\n            <div style={{marginLeft:10, marginTop: 40, width:'100%', height:'100%'}}>\n            {this.props.isFetching && (\n                            <Grid\n                            container\n                            spacing={0}\n                            direction=\"column\"\n                            alignItems=\"center\"\n                            justify=\"center\"\n                            style={{flex:1, marginTop:100,justifyContent: 'center', alignContent: 'center', alignItems: 'center'}}\n                          >\n                                <CircularProgress />\n                            </Grid>\n                        )}\n               {!this.props.isFetching && (\n               <Grow\n                in={!this.props.isFetching}\n                style={{ transformOrigin: '0 0 0' }}\n                {...(!this.props.isFetching ? { timeout: 1000 } : {})}\n                >\n                    <Grid\n                            container\n                            spacing={0}\n                            direction=\"column\"\n                            alignItems=\"center\"\n                            justify=\"center\"\n                            style={{ minHeight: '100vh',  }}\n                        >\n                        \n                            <Grid item xs={12}>\n                            <MaterialTable\n                                title=\"Exames\"\n                                columns={columns}\n                                data={this.props.exams}\n                                actions={[\n                                    {\n                                    icon: 'remove_red_eye',\n                                    tooltip: 'Visualizar Arquivo',\n                                    onClick: (event, rowData) => {\n                                    axios('/api/files/' + rowData._id, {\n                                            method: 'GET',\n                                            responseType: 'blob' //Force to receive data in a Blob Format\n                                        })\n                                        .then(response => {\n                                        //Create a Blob from the PDF Stream\n                                        console.log('response!', response.data)\n                                            const file = new Blob(\n                                            [response.data], \n                                            {type: 'application/pdf'});\n                                        //Build a URL from the file\n                                            const fileURL = URL.createObjectURL(file);\n                                        //Open the URL on new Window\n                                            window.open(fileURL);\n                                        })\n                                        .catch(error => {\n                                            console.log(error);\n                                        });\n                                    }\n                                    }\n                                ]}\n                                \n                                options={{\n                                    actionsColumnIndex: -1,\n                                    exportButton: true,\n                                    exportFileName: 'Lista de Exames'\n                                }}\n                                localization={{\n                                    header: {\n                                        actions: 'Ações'\n                                    },\n                                    body: {\n                                    emptyDataSourceMessage: 'Sem dados para mostrar',\n                                    editRow: {\n                                        deleteText: 'Tem certeza que quer deletar o exame?'\n                                    }\n                                    },\n                                    toolbar: {\n                                    searchTooltip: 'Procurar',\n                                    searchPlaceholder: 'Procurar',\n                                    exportTitle: 'Exportar CSV',\n                                    exportAriaLabel: 'Exportar CSV',\n                                    exportName: 'Exportar CSV'\n\n                                    },\n                                    pagination: {\n                                    labelRowsSelect: 'Filas',\n                                    labelDisplayedRows: '{count} de {from}-{to} ',\n                                    firstTooltip: 'Primeira',\n                                    previousTooltip: 'Anterior',\n                                    nextTooltip: 'Seguinte',\n                                    lastTooltip: 'Última Página'\n                                    }\n                                }}\n                                />\n                            </Grid>\n                    </Grid>\n             </Grow>\n             )}\n            </div>\n        );\n    }\n}\nfunction convertDateMin(date){\n    return  Moment(date).format('DD/MM/YY')\n }\n function convertDateMax(date){\n    return  Moment(date).format('DD/MM/YYYY hh:mm A')\n }\nconst columns = [\n{ title: 'Nome', field: 'displayName' },\n{ title: 'Tipo', field: 'type' },\n{ title: 'Usuário', field: 'user.completename' },\n{ title: 'Lido', field: 'read', type: 'boolean' },\n{ title: 'Data subida', \n  field: 'lastActivity',\n  type: 'datetime', \n  render: rowData => <Tooltip title={convertDateMax(rowData.lastActivity)}><div> {convertDateMax(rowData.lastActivity) }</div></Tooltip> },\n]\nconst mapStateToProps = (state) => {\n    return {\n        isFetching: state.exams.isFetching,\n        exams: state.exams.data,\n        error: state.exams.error\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        loadExams: () => dispatch(loadExamsRequest())\n    }\n} \n\nexport default connect(mapStateToProps, mapDispatchToProps)(Exams)","import React, { Component } from 'react';\nimport { loadAdminExamsRequest } from '../actions/actions'\nimport { connect } from 'react-redux'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Card from '@material-ui/core/Grid'\nimport CardContent from '@material-ui/core/Grid'\nimport MaterialTable from 'material-table'\nimport Moment from 'moment'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport axios from 'axios'\nimport Grow from '@material-ui/core/Grow'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nclass AdminExams extends Component {\n    \n    constructor(props){\n        super(props)\n    \n    }\n    \n    componentDidMount(){\n        this.props.loadAdminExams()\n    }\n\n    render() {\n        return (\n            <div style={{marginLeft:10, marginTop: 40, width:'100%', height:'100%'}}>\n            {this.props.isFetching && (\n                            <Grid\n                            container\n                            spacing={0}\n                            direction=\"column\"\n                            alignItems=\"center\"\n                            justify=\"center\"\n                            style={{flex:1, marginTop:100,justifyContent: 'center', alignContent: 'center', alignItems: 'center'}}\n                          >\n                                <CircularProgress />\n                            </Grid>\n                        )}\n               {!this.props.isFetching && (\n               <Grow\n                in={!this.props.isFetching}\n                style={{ transformOrigin: '0 0 0' }}\n                {...(!this.props.isFetching ? { timeout: 1000 } : {})}\n                >\n               <Grid\n                    container\n                    spacing={0}\n                    direction=\"column\"\n                    alignItems=\"center\"\n                    justify=\"center\"\n                    style={{ minHeight: '100vh',  }}\n                >\n                \n                    <Grid item xs={12}>\n                    <MaterialTable\n                        title=\"Exames\"\n                        columns={columns}\n                        data={this.props.adminExams}\n                        actions={[\n                            {\n                              icon: 'remove_red_eye',\n                              tooltip: 'Visualizar Arquivo',\n                              onClick: (event, rowData) => {\n                               axios('/api/files/' + rowData._id, {\n                                    method: 'GET',\n                                    responseType: 'blob' //Force to receive data in a Blob Format\n                                })\n                                .then(response => {\n                                //Create a Blob from the PDF Stream\n                                console.log('response!', response.data)\n                                    const file = new Blob(\n                                      [response.data], \n                                      {type: 'application/pdf'});\n                                //Build a URL from the file\n                                    const fileURL = URL.createObjectURL(file);\n                                //Open the URL on new Window\n                                    window.open(fileURL);\n                                })\n                                .catch(error => {\n                                    console.log(error);\n                                });\n                              }\n                            }\n                          ]}\n                        editable={{\n\n                            onRowDelete: oldData =>\n                                new Promise((resolve, reject) => {\n                                    axios.delete('/api/files/' + oldData._id)\n                                        .then(res => {\n                                            this.props.loadAdminExams()\n                                            resolve(res)\n                                        })\n                                        .catch(err => {\n                                            reject(err)\n                                        })\n                                })\n                        }}\n                        options={{\n                            actionsColumnIndex: -1,\n                            exportButton: true,\n                            exportFileName: 'Lista de Exames'\n                          }}\n                          localization={{\n                            header: {\n                                actions: 'Ações'\n                            },\n                            body: {\n                              emptyDataSourceMessage: 'Sem dados para mostrar',\n                              editRow: {\n                                deleteText: 'Tem certeza que quer deletar o exame?'\n                              }\n                            },\n                            toolbar: {\n                              searchTooltip: 'Procurar',\n                              searchPlaceholder: 'Procurar',\n                              exportTitle: 'Exportar CSV',\n                              exportAriaLabel: 'Exportar CSV',\n                              exportName: 'Exportar CSV'\n\n                            },\n                            pagination: {\n                              labelRowsSelect: 'Filas',\n                              labelDisplayedRows: '{count} de {from}-{to} ',\n                              firstTooltip: 'Primeira',\n                              previousTooltip: 'Anterior',\n                              nextTooltip: 'Seguinte',\n                              lastTooltip: 'Última Página'\n                            }\n                          }}\n                        />\n                    </Grid>\n             </Grid>\n             </Grow>\n             )}\n            </div>\n        );\n    }\n}\nfunction convertDateMin(date){\n    return  Moment(date).format('DD/MM/YY')\n }\n function convertDateMax(date){\n    return  Moment(date).format('DD/MM/YYYY hh:mm A')\n }\nconst columns = [\n{ title: 'Nome', field: 'displayName' },\n{ title: 'Tipo', field: 'type' },\n{ title: 'Lido', field: 'read', type: 'boolean' },\n{ title: 'Última vez lida', \n  field: 'lastRead',\n  type: 'datetime', \n  render: rowData => <Tooltip title={convertDateMax(rowData.lastRead)}><div> {convertDateMin(rowData.lastRead) }</div></Tooltip> },\n{ title: 'Data subida', \n  field: 'lastActivity',\n  type: 'datetime', \n  render: rowData => <Tooltip title={convertDateMax(rowData.lastActivity)}><div> {convertDateMax(rowData.lastActivity) }</div></Tooltip> },\n]\nconst mapStateToProps = (state) => {\n    return {\n        isFetching: state.adminExams.isFetching,\n        adminExams: state.adminExams.data,\n        error: state.adminExams.error\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        loadAdminExams: () => dispatch(loadAdminExamsRequest())\n    }\n} \n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminExams)","import React, { Component } from \"react\";\nimport \"./css/Dropzone.css\";\nimport CloudUpload from '@material-ui/icons/CloudUpload'\n\nclass Dropzone extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { hightlight: false };\n    this.fileInputRef = React.createRef();\n\n    this.openFileDialog = this.openFileDialog.bind(this);\n    this.onFilesAdded = this.onFilesAdded.bind(this);\n    this.onDragOver = this.onDragOver.bind(this);\n    this.onDragLeave = this.onDragLeave.bind(this);\n    this.onDrop = this.onDrop.bind(this);\n  }\n\n  openFileDialog() {\n    if (this.props.disabled) return;\n    this.fileInputRef.current.click();\n  }\n\n  onFilesAdded(evt) {\n    if (this.props.disabled) return;\n    const files = evt.target.files;\n    if (this.props.onFilesAdded) {\n      const array = this.fileListToArray(files);\n      this.props.onFilesAdded(array);\n    }\n  }\n\n  onDragOver(event) {\n    event.preventDefault();\n    if (this.props.disabed) return;\n    this.setState({ hightlight: true });\n  }\n\n  onDragLeave(event) {\n    this.setState({ hightlight: false });\n  }\n\n  onDrop(event) {\n    event.preventDefault();\n    if (this.props.disabed) return;\n    const files = event.dataTransfer.files;\n    if (this.props.onFilesAdded) {\n      const array = this.fileListToArray(files);\n      this.props.onFilesAdded(array);\n    }\n    this.setState({ hightlight: false });\n  }\n\n  fileListToArray(list) {\n    const array = [];\n    for (var i = 0; i < list.length; i++) {\n      array.push(list.item(i));\n    }\n    return array;\n  }\n\n  render() {\n    return (\n      <div\n        className={`Dropzone ${this.state.hightlight ? \"Highlight\" : \"\"}`}\n        onDragOver={this.onDragOver}\n        onDragLeave={this.onDragLeave}\n        onDrop={this.onDrop}\n        onClick={this.openFileDialog}\n        style={{ cursor: this.props.disabled ? \"default\" : \"pointer\" }}\n      >\n        <input\n          ref={this.fileInputRef}\n          className=\"FileInput\"\n          type=\"file\"\n          accept=\"application/pdf\"\n          onChange={this.onFilesAdded}\n        />\n        <CloudUpload\n          \n        />\n        <span>Upload Exames </span>\n      </div>\n    );\n  }\n}\n\nexport default Dropzone;","import React, { Component } from \"react\";\nimport \"./css/Progress.css\";\n\nclass Progress extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <div className=\"ProgressBar\">\n        <div\n          className=\"Progress\"\n          style={{ width: this.props.progress + \"%\" }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Progress;","import React, { Component } from 'react'\nimport './css/Upload.css'\nimport Dropzone from './Dropzone'\nimport Progress from \"./Progress\";\nimport CheckCircle from '@material-ui/icons/CheckCircle'\nimport Button from '@material-ui/core/Button'\nimport axios from 'axios'\nimport Typography from '@material-ui/core/Typography'\nimport PersonIcon from '@material-ui/icons/Person'\nimport PdfIcon from '@material-ui/icons/PictureAsPdf'\nimport EditIcon from '@material-ui/icons/Edit'\nimport { ListItem, List } from '@material-ui/core';\n\nclass Upload extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        files: [],\n        uploading: false,\n        uploadProgress: {},\n        successfullUploaded: false\n      };\n  \n      this.onFilesAdded = this.onFilesAdded.bind(this);\n      this.uploadFiles = this.uploadFiles.bind(this);\n      this.sendRequest = this.sendRequest.bind(this);\n      this.renderActions = this.renderActions.bind(this);\n      this.sendRequest = this.sendRequest.bind(this)\n    }\n    componentDidMount(){\n      console.log(this.props)\n    }\n    onFilesAdded(files) {\n      this.setState(prevState => ({\n        files: prevState.files.concat(files)\n      }));\n    }\n  \n    async uploadFiles() {\n      this.setState({ uploadProgress: {}, uploading: true });\n      const promises = [];\n      this.state.files.forEach(file => {\n        promises.push(this.sendRequest(file));\n      });\n      try {\n        await Promise.all(promises);\n  \n        this.setState({ successfullUploaded: true, uploading: false });\n      } catch (e) {\n        // Not Production ready! Do some error handling here instead...\n        this.setState({ successfullUploaded: true, uploading: false });\n      }\n    }\n  \n    sendRequest(file) {\n      return new Promise((resolve, reject) => {\n        \n  \n        const data = new FormData()\n        data.append('userId', this.props.data.userId)\n        data.append('displayName', this.props.data.displayName)\n        data.append('file', file)\n   //     data.append('size', file.size)\n   console.log('fileee', JSON.stringify(file))\n        for (var key of data.entries()) {\n          console.log(key[0] + ', ' + key[1]);\n      }\n        const ttthis = this\n        axios({\n            method: 'post',\n            url: '/api/files',\n            data: data,\n            config: { headers: {'Content-Type': 'multipart/form-data' }},\n            onUploadProgress: ProgressEvent => {\n                  if(ProgressEvent.loaded === ProgressEvent.total*100){\n                    const copy = { ...this.state.uploadProgress };\n                    copy[file.name] = { state: \"done\", percentage: 100 };\n                    this.setState({ uploadProgress: copy })\n                  }else{\n                    const copy = { ...this.state.uploadProgress };\n                    copy[file.name] = {\n                      state: \"pending\",\n                      percentage: (ProgressEvent.loaded / ProgressEvent.total) * 100\n                    };\n                    this.setState({ uploadProgress: copy });\n                  }\n              }\n            })\n            .then(function (response) {\n                const copy = { ...ttthis.state.uploadProgress };\n                copy[file.name] = { state: \"done\", percentage: 100 };\n                ttthis.setState({ uploadProgress: copy })\n                ttthis.props.triggerUploadedFinished()\n                console.log(response);\n            })\n            .catch(function (response) {\n                //handle error\n                console.log(JSON.stringify(response.response))\n            });\n\n\n      });\n    }\n  \n    renderProgress(file) {\n      const uploadProgress = this.state.uploadProgress[file.name];\n      console.log('renderProgress', uploadProgress)\n      if (this.state.uploading || this.state.successfullUploaded) {\n        return (\n          <div className=\"ProgressWrapper\">\n            <Progress progress={uploadProgress ? uploadProgress.percentage : 0} style={{float: 'right'}}/>\n            <CheckCircle\n              \n              style={{\n                opacity: uploadProgress && uploadProgress.state === \"done\" ? 0.5 : 0,\n                float: 'left',\n                marginLeft: 10\n\n              }}\n            />\n          </div>\n        );\n      }\n    }\n  \n    renderActions() {\n      if (this.state.successfullUploaded) {\n        return (\n          <Button\n            onClick={() =>\n              this.setState({ files: [], successfullUploaded: false })\n            }\n          >\n            Limpar\n          </Button>\n        );\n      } else {\n        return (\n          <Button\n            disabled={this.state.files.length < 0 || this.state.uploading}\n            onClick={this.uploadFiles}\n          >\n            Fazer Upload\n          </Button>\n        );\n      }\n    }\n  \n    render() {\n      return (\n        <div className=\"Upload\" style={{padding: 20}}>\n          <div className=\"Content\">\n            <div>\n              <Dropzone\n                onFilesAdded={this.onFilesAdded}\n                disabled={this.state.uploading || this.state.successfullUploaded}\n              />\n            </div>\n            <div className=\"Files\">\n              <List>\n                    <ListItem >\n                    <PersonIcon style={{float: 'left', color: '#2a2a2a', marginRight: 5}}/>\n                    <Typography \n                        variant=\"subtitle1\" style={{float: 'left', color: '#2a2a2a'}}>\n                        Arquivo para: {this.props.data.user.completename}\n                    </Typography>\n                      </ListItem>\n                    <ListItem >\n                    <EditIcon style={{float: 'left', color: '#2a2a2a', marginRight: 5}}/>\n                    <Typography \n                        variant=\"subtitle1\" style={{float: 'left', color: '#2a2a2a'}}>\n                        Nome do Arquivo: {this.props.data.displayName.length > 0 ? this.props.data.displayName : 'Manter nome original do Arquivo'} \n                    </Typography>\n                      </ListItem>\n                  </List>\n              {this.state.files.map(file => {\n                return (\n                  <div key={file.name} className=\"Row\">\n                  <List>\n                    <ListItem >\n                    <PdfIcon style={{float: 'left', color: '#2a2a2a', marginRight: 5}}/>\n                    <Typography \n                        variant=\"subtitle1\" style={{float: 'left', color: '#2a2a2a'}}>\n                        {file.name}\n                    </Typography>\n                      </ListItem>\n                  </List>\n                   \n                    < br/>\n                    {this.renderProgress(file)}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n          <div className=\"Actions\">{this.renderActions()}</div>\n        </div>\n      );\n    }\n  }\n  \n  export default Upload;","import React, { Component } from 'react';\nimport Upload from './Upload'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport Grid from '@material-ui/core/Grid'\nimport \"./css/AdminExams.css\"\nimport Button from '@material-ui/core/Button'\nimport FormControl  from '@material-ui/core/FormControl'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Select from  '@material-ui/core/Select'\nimport CircularProgress from  '@material-ui/core/CircularProgress'\nimport MenuItem from  '@material-ui/core/MenuItem'\nimport { connect } from 'react-redux'\nimport { loadUsersRequest } from '../actions/actions'\nimport TextField from '@material-ui/core/TextField'\nimport ListSubheader from '@material-ui/core/ListSubheader'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Collapse from '@material-ui/core/Collapse'\nimport InboxIcon from '@material-ui/icons/MoveToInbox'\nimport DraftsIcon from '@material-ui/icons/Drafts'\nimport SendIcon from '@material-ui/icons/Send'\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf'\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Typography from '@material-ui/core/Typography'\nimport FormHelperText from '@material-ui/core/FormHelperText'\n\nclass AddAdminExams extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            user: false,\n            displayName : '',\n            userId: 0,\n            activeStep: 0,\n            skipped: new Set(),\n            steps : this.getSteps(),\n            showStepper: true\n        }\n        \n        this.handleSelectedUser = this.handleSelectedUser.bind(this)\n        this.handleNext = this.handleNext.bind(this)\n        this.handleBack = this.handleBack.bind(this)\n        this.handleSkip = this.handleSkip.bind(this)\n        this.handleReset = this.handleReset.bind(this)\n        this.getStepContent = this.getStepContent.bind(this)\n        this.handledisplayName = this.handledisplayName.bind(this)\n        this.triggerUploadedFinished = this.triggerUploadedFinished.bind(this)\n    }\n    componentDidMount(){\n        this.props.loadUsers()\n        \n    }\n    handledisplayName(e){\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    \n    handleSelectedUser(e){\n        if(e && e.target.value != 0){\n            var userOk = ''\n            this.props.users.map((user, index)=>{\n                if(user._id === e.target.value) userOk = user\n            })\n            this.setState({\n                userId: e.target.value,\n                user: userOk\n            })\n        }else{\n            this.setState({\n                userNameSelected: false,\n                userId: 0\n            })\n        }\n        \n    }\n    \n    getSteps() {\n        return ['Seleciona Usuário', 'Nome para o arquivo', 'Upload arquivo'];\n      }\n    getStepContent(step) {\n        switch (step) {\n            case 0:\n            return this.renderSelectUser();\n            case 1:\n            return this.renderdisplayName();\n            case 2:\n            return this.renderUploadFile();\n            default:\n            return 'Passo desconhecido, reiniciar pagina';\n        }\n    }\n    renderSelectUser(){\n        return (\n            <Card style={{minHeight: 300}}\n            alignitems=\"center\"\n                        justify=\"center\">\n                         {this.props.isFetchingUsers && (\n                     <Grid\n                        container\n                        spacing={0}\n                        direction=\"column\"\n                        alignItems=\"center\"\n                        justify=\"center\"\n                        style={{marginTop: 30}}\n                    >\n                            <CircularProgress />\n                        </Grid>\n            )}\n            { !this.props.isFetchingUsers && (\n            <FormControl fullWidth={true} style={{padding: 50}}>\n                    <Select\n                    native\n                    value={this.state.userId}\n                    onChange={this.handleSelectedUser}\n                    >\n                    <option value={0} > Escolher Usuário </option>\n                        {this.props.users.map( (user, index) => {\n                            return (\n                                <option key={user._id} value={user._id}>{user.completename} \n                                </option>\n                            )\n                        })}\n                    </Select>\n                    {this.state.errors && (<FormHelperText id=\"username-text\" style={{color: 'red'}}>{this.state.errors}</FormHelperText>)}\n                </FormControl>\n                )} \n            </Card>\n        )\n    }\n    renderdisplayName(){\n        return (\n            <Card style={{minHeight: 300}}>\n            <FormControl fullWidth={true} style={{padding: 50}}>\n                        <TextField\n                            label=\"Nome para o Arquivo\"\n                            placeholder=\"Nome para o Arquivo\"\n                            helpertext=\"Se quiser manter o nome do arquivo original, pode clicar em Pular\"\n                            margin=\"normal\"\n                            name=\"displayName\"\n                            variant=\"outlined\"\n                            onChange={this.handledisplayName}\n                        />\n                        {this.state.errors && (<FormHelperText id=\"username-text\" style={{color: 'red'}}>{this.state.errors}</FormHelperText>)}\n                    </FormControl>\n            </Card>\n        )\n    }\n    renderUploadFile(){\n        return (\n            <Card >\n                <Upload data={this.state} triggerUploadedFinished={this.triggerUploadedFinished}/>\n            </Card>\n        )\n    }\n    isStepOptional(step) {\n        return step === 1;\n    }\n    isStepSkipped(step) {\n        return this.state.skipped.has(step);\n    }\n    handleNext() {\n        let newSkipped = this.state.skipped;\n        if (this.isStepSkipped(this.state.activeStep)) {\n            newSkipped = new Set(newSkipped.values());\n            newSkipped.delete(this.state.activeStep);\n        }\n        \n        if(this.state.activeStep === 0 && this.state.userId === 0){\n            this.setState({\n                errors: 'Por favor, escolha um usuário da lista'    \n            })\n        }\n        else if(this.state.activeStep === 1 && this.state.displayName.length === 0){\n            this.setState({\n                errors: 'Por favor, se quiser manter o nome original clique em Pular'    \n            })\n        }\n        else{\n            this.setState({\n                activeStep: this.state.activeStep + 1,\n                errors: false,\n                newSkipped\n            })\n        }\n        \n    }\n    handleBack() {\n        this.setState({\n            activeStep: this.state.activeStep - 1\n        })\n    }\n    handleSkip() {\n        if (!this.isStepOptional(this.state.activeStep)) {\n          // You probably want to guard against something like this,\n          // it should never occur unless someone's actively trying to break something.\n          throw new Error(\"Não pode pular este passo porque não é opcional.\");\n        }\n    \n        this.setState({\n            activeStep: this.state.activeStep + 1,\n            displayName: ''\n        })\n    \n        const newSkipped = new Set( this.state.skipped.values());\n        newSkipped.add(this.state.activeStep)\n        this.setState({\n            skipped: newSkipped\n        })\n\n      }\n      handleReset() {\n        this.setState({\n            activeStep: 0\n        })\n      }\n      triggerUploadedFinished(){\n          this.setState({\n              uploadFinished : true\n          })\n      }\n    render() {\n        return (\n            <div style={{width: '80%',margin: 40, marginTop:100}}>\n                { this.state.showStepper && \n                ( \n                    <div>\n                    <Stepper activeStep={this.state.activeStep}>\n                        {this.state.steps.map((label, index) => {\n                        const stepProps = {};\n                        const labelProps = {};\n                        if (this.isStepOptional(index)) {\n                            labelProps.optional = <Typography variant=\"caption\" component=\"span\">Opcional</Typography>;\n                        }\n                        if (this.isStepSkipped(index)) {\n                            stepProps.completed = false;\n                        }\n                        return (\n                            <Step key={label} {...stepProps}>\n                            <StepLabel {...labelProps}>{label}</StepLabel>\n                            </Step>\n                        );\n                        })}\n                    </Stepper>\n                    <div>\n                        {this.state.activeStep === this.state.steps.length ? (\n                        <div>\n                            <Typography style={{marginTop: 3, marginBottom: 3,}}  component=\"span\">\n                            Upload realizado com sucesso!\n                            </Typography>\n                            <Button onClick={this.handleReset} style={{marginRight: 3}}  component=\"span\">\n                            Adicionar mais\n                            </Button>\n                        </div>\n                        ) : (\n                        <div>\n                            <Typography  component=\"span\" style={{marginTop: 3, marginBottom: 3,}}>{this.getStepContent(this.state.activeStep)}</Typography>\n                            <div>\n                            <Button disabled={this.state.activeStep === 0} onClick={this.handleBack} style={{marginRight: 3}}>\n                                Voltar\n                            </Button>\n                            {this.isStepOptional(this.state.activeStep) && (\n                                <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={this.handleSkip}\n                                style={{marginRight: 3}}\n                                >\n                                Pular\n                                </Button>\n                            )}\n\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={this.handleNext}\n                                style={{marginRight: 3}}\n                                disabled={this.state.activeStep === this.state.steps.length - 1 && !this.state.uploadFinished}\n                            >\n                                {this.state.activeStep === this.state.steps.length - 1 ? 'Finalizar' : 'Seguinte'}\n                            </Button>\n                            </div>\n                        </div>\n                    )}\n                </div>\n                </div>\n          )}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isFetchingUsers: state.users.isFetching,\n        users: state.users.data,\n        error: state.users.error\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        loadUsers: () => dispatch(loadUsersRequest())\n    }\n} \n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddAdminExams)","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText'\nimport GroupIcon from '@material-ui/icons/Group'\nimport ContactMailIcon from '@material-ui/icons/ContactMail'\nimport ExistToAppIcon from '@material-ui/icons/ExitToApp'\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf'\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd'\n\nimport Register from './Register'\nimport Users from './Users'\nimport Profile from './Profile'\nimport Exams from './Exams'\nimport AdminExams from './AdminExams'\nimport AddAdminExams from './AddAdminExams'\nimport { Link } from 'react-router-dom';\nimport AddNoteIcon from '@material-ui/icons/NoteAdd'\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default function MiniDrawer(props) {\n \n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  function handleDrawerOpen() {\n    setOpen(true);\n  }\n\n  function handleDrawerClose() {\n    setOpen(false);\n  }\n  function onLogout() {\n    props.logoutUser(props.history)\n  }\n  return (\n    <div className={classes.root}>\n    \n      <CssBaseline />\n      <Router>\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Vets\n          </Typography>\n          <div className={classes.sectionDesktop} style={{ position: 'absolute', right: '0', top: 15, marginRight:50}}>\n            {props.user.completename}\n            </div>\n            <div className={classes.sectionDesktop} style={{ fontSize: 10, position: 'absolute', right: '0',top:38, marginRight:50}}>\n            {props.user.username}\n            </div>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        {props.user.admin && ( \n            <div>\n                <List>\n                    <ListItem button component={ Link } color=\"inherit\" to=\"/register\" >\n                        <ListItemIcon><PersonAddIcon /></ListItemIcon>\n                        <ListItemText primary='Adicionar Usuário'/>\n                    </ListItem>\n                    <ListItem button component={ Link } color=\"inherit\" to=\"/users\" >\n                        <ListItemIcon><GroupIcon /></ListItemIcon>\n                        <ListItemText primary='Usuários'/>\n                    </ListItem>\n                    \n                </List>\n                <Divider />\n                <List>\n                    <ListItem button component={ Link } color=\"inherit\" to=\"/add_admin_exams\" >\n                        <ListItemIcon><AddNoteIcon /></ListItemIcon>\n                        <ListItemText primary='Adicionar Exame'/>\n                    </ListItem>\n                    <ListItem button component={ Link } color=\"inherit\" to=\"/admin_exams\" >\n                        <ListItemIcon><PictureAsPdfIcon /></ListItemIcon>\n                        <ListItemText primary='Exames'/>\n                    </ListItem>\n                </List>\n                <Divider />\n                <List>\n                    <ListItem button component={ Link } color=\"inherit\" to=\"/profile\" >\n                        <ListItemIcon><ContactMailIcon /></ListItemIcon>\n                        <ListItemText primary='Perfil'/>\n                    </ListItem>\n                </List>\n                <Divider />\n                <List>\n                    <ListItem button  onClick={onLogout} color=\"inherit\"  >\n                        <ListItemIcon><ExistToAppIcon /></ListItemIcon>\n                        <ListItemText primary='Sair'/>\n                    </ListItem>\n                </List>\n            </div>\n        )}\n        {!props.user.admin && ( \n            <div>\n                <List>\n                    <ListItem button component={ Link } color=\"inherit\" to=\"/exams\" >\n                        <ListItemIcon><PictureAsPdfIcon /></ListItemIcon>\n                        <ListItemText primary='Exames'/>\n                    </ListItem>\n                </List>\n                <Divider />\n                <List>\n                    <ListItem button component={ Link } color=\"inherit\" to=\"/profile\" >\n                        <ListItemIcon><ContactMailIcon /></ListItemIcon>\n                        <ListItemText primary='Perfil'/>\n                    </ListItem>\n                </List>\n                <Divider />\n                <List>\n                    <ListItem button component={ Link } color=\"inherit\" onClick={onLogout}  >\n                        <ListItemIcon><ExistToAppIcon /></ListItemIcon>\n                        <ListItemText primary='Sair'/>\n                    </ListItem>\n                </List>\n            </div>\n        )}\n      </Drawer>\n      <Route exact path=\"/users\" component={ Users } />\n      <Route exact path=\"/profile\" component={ Profile } />\n      <Route exact path=\"/exams\" component={ Exams } />\n      <Route exact path=\"/add_admin_exams\" component = { AddAdminExams } />\n      <Route exact path=\"/admin_exams\" component={ AdminExams } />\n      <Route exact path=\"/register\" component={ Register } />\n    </Router>\n      </div>\n  );\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { logoutUser } from '../actions/authentication';\nimport { withRouter } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport clsx from 'clsx'\nimport Drawer from './Drawer'\n\nconst drawerWidth = 240;\n\nconst classes = makeStyles(theme => ({\n    root: {\n        display: \"flex\"\n      },\n      appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen\n        })\n      },\n      appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.enteringScreen\n        })\n      },\n      menuButton: {\n        marginLeft: 12,\n        marginRight: 36\n      },\n      hide: {\n        display: \"none\"\n      },\n      drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: \"nowrap\"\n      },\n      drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create(\"width\", {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.enteringScreen\n        })\n      },\n      drawerClose: {\n        transition: theme.transitions.create(\"width\", {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen\n        }),\n        overflowX: \"hidden\",\n        width: theme.spacing.unit * 7 + 1,\n        [theme.breakpoints.up(\"sm\")]: {\n          width: theme.spacing.unit * 9 + 1\n        }\n      },\n      toolbar: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-end\",\n        padding: \"0 8px\",\n        ...theme.mixins.toolbar\n      },\n      content: {\n        flexGrow: 1,\n        padding: theme.spacing.unit * 3\n      },\n    sectionDesktop: {\n        display: 'none',\n        [theme.breakpoints.up('md')]: {\n          display: 'flex',\n        },\n        float: 'right',\n        position: 'absolute',\n         right: '0'\n      },\n    title: {\n      flexGrow: 1,\n      marginLeft: 300\n    },\n  }))\n\nclass Navbar extends Component {\n    \n    render() {\n       \n        const {isAuthenticated, user} = this.props.auth;   \n        \n        const authLinks = (\n     //       <div className={classes.sectionDesktop} style={{ position: 'absolute', right: '0'}}>\n     //           <Button  onClick={this.onLogout.bind(this)} color=\"inherit\" style={{ marginRight:30}} >Sair</Button>\n     //       </div>\n     ''\n        )\n      const guestLinks = (\n        <div className={classes.sectionDesktop}  style={{ position: 'absolute', right: '0'}}>\n            <Button component={ Link } color=\"inherit\" to=\"/login\" style={{ marginRight:30}}>Login</Button>\n        </div>\n      )\n      \n        return(\n            <div className={classes.root}>\n            <CssBaseline />\n                <AppBar position=\"fixed\" className={clsx(classes.appBar, {\n                        [classes.appBarShift]: false,\n                        })}>\n                    <Toolbar>\n                    \n                    <Typography variant=\"h6\" className={classes.title} >\n                        Vets\n                    </Typography>\n                    <div />\n\n                        {isAuthenticated ? authLinks : guestLinks}\n                    </Toolbar>\n                </AppBar>\n                { isAuthenticated ? (\n                    <Drawer logoutUser={this.props.logoutUser} history={this.props.history} user={user}/>\n\n                ) : ''}\n            </div>\n          \n        )\n    }\n}\n\nNavbar.propTypes = {\n    logoutUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth\n})\n\n//ResponsiveDrawer.propTypes = {\n    /**\n     * Injected by the documentation to work in an iframe.\n     * You won't need it on your project.\n     */\n //   container: PropTypes.object,\n // };\nexport default connect(mapStateToProps, { logoutUser })(withRouter(Navbar));","import React, { Component } from 'react'\n\nimport FormControl   from '@material-ui/core/FormControl'\nimport InputLabel   from '@material-ui/core/InputLabel'\nimport Input   from '@material-ui/core/Input'\nimport FormHelperText   from '@material-ui/core/FormHelperText'\nimport Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport axios from  'axios'\n\nexport default class ForgotPassword extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            username: '',\n            message: false,\n            errors: false,\n            isFetching: false,\n            emailSent: false\n        }\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleInputChange = this.handleInputChange.bind(this)\n    }\n    handleSubmit(e){\n        e.preventDefault()\n        if(this.state.username && this.state.username.length > 4 \n            && this.state.username.indexOf('@') != -1 && this.state.username.indexOf('.') != -1 ){\n                this.setState({\n                    isFetching: true\n                })\n                axios.post('/api/users/forgot', {username: this.state.username })\n                        .then(res => {\n                            this.setState({\n                                message: res.data.msg,\n                                errors: false,\n                                isFetching: false,\n                                emailSent: true\n                            })\n                        })\n                        .catch(err => {\n                            this.setState({\n                                errors: err && err.response && err.response.data ? JSON.stringify(err.response.data.msg) : 'Erro desconhecido, tente mais tarde',\n                                isFetching: false\n                            })\n                        })\n\n        }else{\n            this.setState({\n                errors: 'email invalido',\n                isFetching: false\n            })\n        }\n    }\n    handleInputChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    render() {\n        return (\n                <Grid\n                container\n                spacing={0}\n                direction=\"column\"\n                alignItems=\"center\"\n                justify=\"center\"\n                style={{ minHeight: '100vh' }}\n            >\n            \n                <Grid item xs={6}>\n                        <Card  style={{width: '100%'}}>\n                        <CardContent>\n                        <Typography \n                               color=\"textSecondary\" gutterBottom>\n                            Vets\n                        </Typography>\n                        <Typography \n                                variant=\"h5\" component=\"h2\">\n                            Recuperar Senha\n                        </Typography>\n                        <form onSubmit={ this.handleSubmit }>\n                            <FormControl  fullWidth={true} >\n                                <InputLabel htmlFor=\"username\">E-mail</InputLabel>\n                                <Input\n                                type=\"username\"\n                                id=\"username\"\n                                value={ this.state.username }\n                                name=\"username\"\n                                onChange={this.handleInputChange}\n                                aria-describedby=\"username-text\"\n                                onChange={ this.handleInputChange }\n                                value={ this.state.username }\n                                />\n                                {this.state.errors && (<FormHelperText id=\"username-text\" style={{color: 'red'}}>{this.state.errors}</FormHelperText>)}\n                                {this.state.message && (<FormHelperText id=\"username-text\"  style={{color: 'green'}}>{this.state.message}</FormHelperText>)}\n                            </FormControl>\n                        <CardActions>\n                           {this.state.isFetching && (\n                            <Grid\n                                container\n                                spacing={0}\n                                direction=\"column\"\n                                alignItems=\"center\"\n                                justify=\"center\"\n                                style={{marginTop: 30}}\n                               fullWidth={true}\n                            >\n                                    <CircularProgress />\n                                </Grid>\n                           )}\n                           {!this.state.isFetching && (\n                            <Button \n                            disabled={this.state.emailSent}\n                            fullWidth={true} variant=\"contained\" color=\"primary\" type=\"submit\" >\n                                    Enviar E-mail de Recuperação de Senha\n                            </Button>\n                            )}\n                        </CardActions>\n                        </form>\n                        </CardContent>\n                        \n                    </Card>\n                </Grid>      \n            </Grid>\n        );\n    }\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../actions/authentication'\nimport { makeStyles } from '@material-ui/core/styles'\nimport FormControl   from '@material-ui/core/FormControl'\nimport InputLabel   from '@material-ui/core/InputLabel'\nimport Input   from '@material-ui/core/Input'\nimport FormHelperText   from '@material-ui/core/FormHelperText'\nimport Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Link from '@material-ui/core/Link'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport ResetPassword from './ForgotPassword'\n\nclass Login extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            username: '',\n            password: '',\n            errors: {}\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    \n    handleInputChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleSubmit(e) {\n        e.preventDefault()\n        console.log()\n        const user = {\n            username: this.state.username,\n            password: this.state.password,\n        }\n        this.props.loginUser(user);\n    }\n\n    componentDidMount() {\n        if(this.props.auth.isAuthenticated) {\n            this.props.history.push('/');\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.auth.isAuthenticated) {\n            this.props.history.push('/')\n        }\n        if(nextProps.errors) {\n            this.setState({\n                errors: nextProps.errors\n            });\n        }\n    }\n\n    render() {\n        \n\n        const {errors} = this.state\n\n    //    React.useEffect(() => {\n    //        setLabelWidth(labelRef.current.offsetWidth)\n    //      }, [])\n\n        return(\n            \n                <Grid\n                container\n                spacing={0}\n                direction=\"column\"\n                alignItems=\"center\"\n                justify=\"center\"\n                style={{ minHeight: '100vh' }}\n            >\n            \n                <Grid item xs={6}>\n                        <Card className={classes.card}>\n                        <CardContent>\n                        <Typography \n                                className={classes.title} color=\"textSecondary\" gutterBottom>\n                            Vets\n                        </Typography>\n                        <Typography \n                                variant=\"h5\" component=\"h2\">\n                            Login\n                        </Typography>\n                        <form onSubmit={ this.handleSubmit }>\n                            <FormControl className={classes.formControl} fullWidth={true} >\n                                <InputLabel htmlFor=\"username\">E-mail</InputLabel>\n                                <Input\n                                type=\"username\"\n                                id=\"username\"\n                                value={ this.state.username }\n                                name=\"username\"\n                                onChange={this.handleInputChange}\n                                aria-describedby=\"username-text\"\n                                onChange={ this.handleInputChange }\n                                value={ this.state.username }\n                                />\n                                {errors.username && (<FormHelperText id=\"username-text\" style={{color: 'red'}}>{errors.username}</FormHelperText>)}\n                            </FormControl>\n                            <FormControl  fullWidth={true} className={classes.formControl} >\n                                <InputLabel htmlFor=\"password\">Senha</InputLabel>\n                                <Input\n                                type=\"password\"\n                                id=\"password\"\n                                value={ this.state.password }\n                                name=\"password\"\n                                onChange={this.handleInputChange}\n                                aria-describedby=\"password-text\"\n                                onChange={ this.handleInputChange }\n                                value={ this.state.password }\n                                />\n                                {errors.password && (<FormHelperText id=\"password-text\" style={{color: 'red'}}>{errors.password}</FormHelperText>)}\n                            </FormControl>\n                            \n                            \n                        <CardActions>\n                            <Button fullWidth={true} variant=\"contained\" color=\"primary\" type=\"submit\" >\n                                Login\n                            </Button>\n                        </CardActions>\n                        </form>\n                        </CardContent>\n                        <CardActions>\n                                <Link component={ AdapterLink } to=\"/forgot_password\">\n                                    Esqueceu sua senha?\n                                </Link>\n                        </CardActions>\n\n                    </Card>\n                </Grid>      \n            </Grid>\n        )\n    }\n}\nconst AdapterLink = React.forwardRef((props, ref) => <RouterLink innerRef={ref} {...props} />);\n\nconst classes = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n      },\n      formControl: {\n        margin: theme.spacing(1),\n        width: '100%'\n      },\n    card: {\n        minWidth: 275,\n        maxWidth:400\n      },\n    button: {\n      margin: theme.spacing(1),\n      width: '100%'\n    },\n    input: {\n      display: 'none',\n      width: '100%'\n    },\n    title: {\n        alignItems: \"center\",\n        justify: \"center\"\n    }\n  }))\n\n//  const [labelWidth, setLabelWidth] = React.useState(0)\n//  const [name, setName] = React.useState('Composed TextField')\n// /  const labelRef = React.useRef(null)\n  \nLogin.propTypes = {\n    loginUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    errors: state.errors\n})\n\nexport  default connect(mapStateToProps, { loginUser })(Login)","import React, { Component } from 'react';\n\nexport default class Home extends Component {\n    render() {\n        return (\n            <div  style={{backgroundColor: 'red', marginTop:100}}>\n                Home Component 22222222\n            </div>\n        );\n    }\n}","import React, { Component } from 'react'\n\nimport FormControl   from '@material-ui/core/FormControl'\nimport InputLabel   from '@material-ui/core/InputLabel'\nimport Input   from '@material-ui/core/Input'\nimport FormHelperText   from '@material-ui/core/FormHelperText'\nimport Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport axios from  'axios'\n\nexport default class ResetPassword extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            password: '',\n            confirmPassword: '',\n            message: false,\n            errors: false,\n            isFetching: false,\n            passwordReseted: false\n        }\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleInputChange = this.handleInputChange.bind(this)\n    }\n    handleSubmit(e){\n        e.preventDefault()\n        if(this.state.password && this.state.password.length < 6){\n            this.setState({\n                errors: 'A senha deve ter mínimo 6 carateres'\n            })\n        }else if(this.state.password != this.state.confirmPassword){\n            this.setState({\n                erros: 'A senhas digitadas não coincidem'\n            })\n        }else{\n                this.setState({\n                    isFetching: true\n                })\n                var url = '/api/users/reset_password/'\n                if(this.props.location.search.split('=').length == 2){\n                    url += 'token/' + this.props.location.search.split('=')[1]\n                }\n                axios.post(url, {password: this.state.password, \n                                    confirmPassword : this.state.confirmPassword })\n                                    .then(res => {\n                                        this.setState({\n                                            message: res.data.msg,\n                                            errors: false,\n                                            isFetching: false,\n                                            passwordReseted: true\n                                        })\n                                    })\n                                    .catch(err => {\n                                        this.setState({\n                                            errors: JSON.stringify(err.response.data.msg),\n                                            isFetching: false\n                                        })\n                                    })\n\n        }\n    }\n    handleInputChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    render() {\n        return (\n                <Grid\n                container\n                spacing={0}\n                direction=\"column\"\n                alignItems=\"center\"\n                justify=\"center\"\n                style={{ minHeight: '100vh' }}\n            >\n            \n                <Grid item xs={6}>\n                        <Card  style={{width: '100%'}}>\n                        <CardContent>\n                        <Typography \n                               color=\"textSecondary\" gutterBottom>\n                            Vets\n                        </Typography>\n                        <Typography \n                                variant=\"h5\" component=\"h2\">\n                            Resetar Senha\n                        </Typography>\n                        <form onSubmit={ this.handleSubmit }>\n                            <FormControl  fullWidth={true} >\n                                <InputLabel htmlFor=\"password\">Senha</InputLabel>\n                                <Input\n                                type=\"password\"\n                                id=\"password\"\n                                value={ this.state.password }\n                                name=\"password\"\n                                onChange={this.handleInputChange}\n                                aria-describedby=\"password-text\"\n                                onChange={ this.handleInputChange }\n                                />\n                                \n                            </FormControl>\n                            <FormControl  fullWidth={true} >\n                                <InputLabel htmlFor=\"confirmPassword\">Confirmar Senha</InputLabel>\n                                <Input\n                                type=\"password\"\n                                id=\"confirmPassword\"\n                                value={ this.state.confirmPassword }\n                                name=\"confirmPassword\"\n                                onChange={this.handleInputChange}\n                                aria-describedby=\"confirmPassword-text\"\n                                onChange={ this.handleInputChange }\n                                />\n                                {this.state.errors && (<FormHelperText id=\"confirmPassword-text\" style={{color: 'red'}}>{this.state.errors}</FormHelperText>)}\n                                {this.state.message && (<FormHelperText id=\"confirmPassword-text\"  style={{color: 'green'}}>{this.state.message}</FormHelperText>)}\n                            </FormControl>\n                        <CardActions>\n                           {this.state.isFetching && (\n                            <Grid\n                                container\n                                spacing={0}\n                                direction=\"column\"\n                                alignItems=\"center\"\n                                justify=\"center\"\n                                style={{marginTop: 30}}\n                               fullWidth={true}\n                            >\n                                    <CircularProgress />\n                                </Grid>\n                           )}\n                           {!this.state.isFetching && (\n                            <Button fullWidth={true} \n                                    variant=\"contained\" color=\"primary\" type=\"submit\"\n                                     disabled={this.state.passwordReseted}>\n                                    Redefinir Senha\n                            </Button>\n                            )}\n                        </CardActions>\n                        </form>\n                        </CardContent>\n                        \n                    </Card>\n                </Grid>      \n            </Grid>\n        );\n    }\n}","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport jwt_decode from 'jwt-decode';\nimport setAuthToken from './setAuthToken'\nimport { setCurrentUser, logoutUser } from './actions/authentication';\n\nimport Navbar from './components/Navbar';\nimport Register from './components/Register';\nimport Login from './components/Login';\nimport Home from './components/Home';\nimport Users from './components/Users'\nimport Profile from './components/Profile'\nimport Exams from './components/Exams'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { makeStyles,createMuiTheme } from '@material-ui/core/styles'\nimport { ThemeProvider } from '@material-ui/styles'\nimport ForgotPassword from './components/ForgotPassword'\nimport ResetPassword from './components/ResetPassword'\n\nif(localStorage.jwtToken) {\n  setAuthToken(localStorage.jwtToken);\n  const decoded = jwt_decode(localStorage.jwtToken);\n  store.dispatch(setCurrentUser(decoded));\n\n  const currentTime = Date.now() / 1000;\n  if(decoded.exp < currentTime) {\n    store.dispatch(logoutUser());\n    window.location.href = '/login'\n  }\n}\n\nfunction App() {\n  const [theme, setTheme] = useState({\n    palette: {\n      type: \"light\",\n      primary: {\n        main: '#13aa52'\n      },\n      secondary: {\n        main: '#E33E7F'\n      },\n      accent: {\n        main: '#E33E7F'\n      },\n      background: {\n        default: \"#e6e6e6\"\n      }\n    }\n  })\n  const muiTheme = createMuiTheme(theme);\n\n    return (\n      <Provider store = { store }>\n        <ThemeProvider theme={muiTheme}>\n        <CssBaseline />\n        <Router>\n            <div>\n              <Navbar />\n                <Route exact path=\"/\" component={ Home } />\n                <div className=\"\">\n                  <Route exact path=\"/login\" component={ Login } />\n                  <Route exact path=\"/forgot_password\" component={ ForgotPassword } />\n                  <Route exact path=\"/reset_password\" component={ ResetPassword } />\n                </div>\n            </div>\n          </Router>\n          </ThemeProvider>\n        </Provider>\n    );\n  }\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}