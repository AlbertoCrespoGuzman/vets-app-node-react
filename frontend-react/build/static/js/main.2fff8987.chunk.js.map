{"version":3,"sources":["reducers/errorReducer.js","validation/is-empty.js","reducers/authReducer.js","reducers/usersReducer.js","reducers/profileReducer.js","reducers/adminExamsReducer.js","reducers/examsReducer.js","reducers/chatDialogReducer.js","reducers/index.js","actions/types.js","actions/actions.js","sagas/usersSagas.js","sagas/profileSagas.js","sagas/examsSagas.js","sagas/adminExamsSagas.js","sagas/chatDialogSagas.js","sagas/index.js","store.js","setAuthToken.js","actions/authentication.js","components/Register.js","components/Users.js","components/Profile.js","components/ChatDialog.js","components/Exams.js","components/AdminExams.js","components/Dropzone.js","components/Progress.js","components/Upload.js","components/AddAdminExams.js","components/Drawer.js","components/Navbar.js","components/ForgotPassword.js","components/Login.js","components/Home.js","components/ResetPassword.js","components/Partners.js","App.js","registerServiceWorker.js","index.js"],"names":["initialState","isEmpty","value","undefined","Object","keys","length","trim","isAuthenticated","user","INITIAL_STATE","data","isFetching","error","users","state","arguments","action","type","profile","adminExams","exams","file_id","chatDialog","combineReducers","errors","payload","auth","_objectSpread","usersReducer","profileReducer","adminExamsReducer","examsReducer","chatDialogReducer","loadUsersSuccess","loadProfileSuccess","loadAdminExamsSuccess","loadExamsSuccess","loadChatDialogSuccess","getUsers","axios","actions","dados","regenerator_default","a","wrap","_context","prev","next","console","log","get","process","sent","put","stop","_marked","dotenv","config","getProfile","profileSagas_marked","getExams","examsSagas_marked","getAdminExams","adminExamsSagas_marked","getChatDialog","chatDialogSagas_marked","index","takeLatest","sagas_marked","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","compose","applyMiddleware","thunk","run","indexSaga","setAuthToken","token","defaults","headers","common","setCurrentUser","decoded","logoutUser","history","dispatch","localStorage","removeItem","push","Register","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","username","completename","cpf","address","crmv","technicalSupport","phone","handleInputChange","bind","assertThisInitialized","handleSubmit","handleSelectTypeChange","e","setState","defineProperty","target","name","preventDefault","props","registerUser","nextProps","errorsToSend","i","param","msg","password","confirmPassword","admin","classes","styles","react_default","createElement","Grid","container","spacing","direction","alignItems","justify","style","minHeight","marginTop","item","xs","Card","className","card","CardContent","Typography","variant","component","onSubmit","FormControl","formControl","fullWidth","InputLabel","htmlFor","Select","onChange","MenuItem","FormHelperText","id","color","margin","PropTypes","Input","aria-describedby","CardActions","Button","CircularProgress","Component","theme","button","input","display","connect","getItem","post","then","res","catch","err","JSON","stringify","response","withRouter","withStyles","Users","collapse","isFetchingForDeleting","loadUsers","_this2","marginLeft","width","height","flex","justifyContent","alignContent","Grow","assign","in","transformOrigin","timeout","onClick","dist_default","title","columns","collapsedColumns","editable","onRowUpdate","newData","oldData","Promise","resolve","reject","alert","patch","_id","onRowDelete","setTimeout","prompt","delete","window","location","reload","detailPanel","tooltip","render","rowData","fontSize","textAlign","backgroundColor","padding","columnsFiles","files","icon","event","method","responseType","file","Blob","fileURL","URL","createObjectURL","anchor","document","download","displayName","href","click","loadAdminExams","options","actionsColumnIndex","exportButton","exportFileName","localization","header","body","emptyDataSourceMessage","editRow","deleteText","toolbar","searchTooltip","searchPlaceholder","exportTitle","exportAriaLabel","exportName","pagination","labelRowsSelect","labelDisplayedRows","firstTooltip","previousTooltip","nextTooltip","lastTooltip","convertDateMax","date","Moment","format","field","lookup","1","2","3","4","Tooltip","lastActivity","Profile","isEditing","tab","message","isSaving","handleTabsChange","changeToEditProfile","saveProfile","postPassword","handleInputPasswordChange","loadProfile","_this3","varName","newValue","Paper","Tabs","aria-label","Tab","label","a11yProps","TabPanel","handleSubmitProfile","disabled","vet","clinic","cmrv","children","other","objectWithoutProperties","role","hidden","concat","aria-labelledby","Box","p","aria-controls","ChatDialog","trackScrolling","wrappedElement","getElementById","isBottom","noReadMessageTag","noReadSendToServer","postMessagesRead","addEventListener","openDialog","scroll","maxChatRefresh","refreshIntervalTime","chatRefreshInterval","currentChatRefresh","renderMessage","handleClose","handleMessageChange","postMessage","getMessages","messagesEndRef","React","createRef","messagesNoReadRef","messagesList","loadChatDialogExams","current","scrollIntoView","behavior","comments","setInterval","commentsToAdd","forEach","comment","exists","commentProp","clearInterval","newProps","element","clientHeight","scrollHeight","scrollTop","Math","abs","removeEventListener","removeDialog","updateFile","_this4","key","read","sender","ListItem","ref","marginRight","background","blue","IconButton","float","Avatar","AssignmentInd_default","deepOrange","substring","sentTime","_this5","receiver","Dialog","fullScreen","maxWidth","open","onClose","DialogTitle","edge","Close_default","DialogContent","dividers","List","map","onBlur","DialogActions","paddingLeft","paddingRight","TextField","multiline","rowsMax","Send_default","loadChatDialogRequest","Exams","currentDialog","fileUpdated","loadExams","split","commentsEnabled","customerNoReadCommentsCount","badgeEmail1Messages","badgeEmail2Messages","badgeEmail3Messages","badgeEmailMoreThan3Messages","badgeEmailNoMessages","components_ChatDialog","rowStyle","Badge","Mail_default","badgeContent","AdminExams","adminNoReadCommentsCount","components","Action","textTransform","size","exportAllData","convertDateMin","lastRead","Dropzone","hightlight","fileInputRef","openFileDialog","onFilesAdded","onDragOver","onDragLeave","onDrop","evt","array","fileListToArray","disabed","dataTransfer","list","_ref","border","borderRadius","flexDirection","accept","multiple","CloudUpload_default","Progress","progress","Upload","uploading","uploadProgress","successfullUploaded","uploadFiles","sendRequest","renderActions","prevState","promises","all","FormData","append","userId","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","Symbol","iterator","done","return","ttthis","url","Content-Type","onUploadProgress","ProgressEvent","loaded","total","copy","Upload_objectSpread","percentage","triggerUploadedFinished","ProgressWrapper","components_Progress","CheckCircle_default","opacity","paddingTop","boxSizing","components_Dropzone","justifyItems","overflowY","Person_default","Edit_default","Row","PictureAsPdf_default","renderProgress","AddAdminExams","activeStep","skipped","Set","steps","getSteps","showStepper","userFilter","filteredUsers","firstTimeUpdated","handleSelectedUser","handleNext","handleBack","handleSkip","handleReset","getStepContent","handledisplayName","handleSelectedCommentsEnabled","handleUserFilterChange","userOk","userNameSelected","step","renderSelectUser","renderdisplayName","renderUploadFile","tempUsers","toLowerCase","includes","alignitems","isFetchingUsers","paddingBottom","native","placeholder","helpertext","minWidth","components_Upload","has","newSkipped","isStepSkipped","values","isStepOptional","Error","add","uploadFinished","Stepper","stepProps","labelProps","optional","completed","Step","StepLabel","marginBottom","useStyles","makeStyles","root","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","Drawer_objectSpread","mixins","content","flexGrow","MiniDrawer","_clsx3","_clsx4","useTheme","_React$useState","useState","_React$useState2","slicedToArray","setOpen","onLogout","CssBaseline","AppBar","position","clsx","Toolbar","Menu_default","src","sectionDesktop","right","top","Drawer","paper","ChevronRight_default","ChevronLeft_default","Divider","Link","to","ListItemIcon","PersonAdd_default","ListItemText","primary","Group_default","NoteAdd_default","ContactMail_default","ExitToApp_default","_sectionDesktop","unit","Navbar_objectSpread","Navbar","handleProfileMenuOpen","setAnchorEl","currentTarget","handleMobileMenuClose","setMobileMoreAnchorEl","handleMenuClose","handleMobileMenuOpen","mobileMoreAnchorEl","isMobileMenuOpen","anchorEl","isMenuOpen","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","mobileMenuId","_this$props$auth","guestLinks","aria-haspopup","MoreVert_default","renderMobileMenu","ForgotPassword","emailSent","indexOf","_React$createElement","gutterBottom","Login","loginUser","AdapterLink","forwardRef","react_router_dom","innerRef","flexWrap","setItem","jwt_decode","Home","aboutUsRef","examsRef","partnersRef","contactRef","sendEmail","scrollIfNecessary","isSending","email","block","ok","build_default","description","image","fontWeight","class","isMobile","maxHeight","FindReplace_default","Visibility_default","Pets_default","Done_default","borderWidth","borderColor","rows","ResetPassword","passwordReseted","erros","search","Partners","jwtToken","currentTime","Date","now","exp","App","_useState","typography","fontFamily","fontWeightLight","fontWeightRegular","fontWeightMedium","palette","main","secondary","accent","default","_useState2","muiTheme","createMuiTheme","es","ThemeProvider","components_Navbar","react_router","exact","path","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","src_App","origin","fetch","status","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2fff8987.chunk.js","sourcesContent":["import { GET_ERRORS } from '../actions/types';\n\nconst initialState = {};\n\nexport default function(state = initialState, action ) {\n    switch(action.type) {\n        case GET_ERRORS:\n            return action.payload;\n        default: \n            return state;\n    }\n}","const isEmpty = (value) => {\n    return (\n        value === undefined ||\n        value === null ||\n        (typeof value === 'object' && Object.keys(value).length === 0) ||\n        (typeof value === 'string' && value.trim().length === 0)\n    );\n}\nexport default isEmpty;","import { SET_CURRENT_USER } from '../actions/types';\nimport isEmpty from '../validation/is-empty';\n\nconst initialState = {\n    isAuthenticated: false,\n    user: {}\n}\n\nexport default function(state = initialState, action ) {\n    switch(action.type) {\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                isAuthenticated: !isEmpty(action.payload),\n                user: action.payload\n            }\n        default: \n            return state;\n    }\n}","const INITIAL_STATE = {\n    data: [],\n    isFetching: false,\n    error:false\n}\n\nconst users = ( state = INITIAL_STATE, action) => {\n    if(action.type === 'LOAD_USERS_REQUEST' ){\n        return {\n            isFetching: true,\n            data: [],\n            error: false\n        }\n    }\n    if(action.type === 'LOAD_USERS_SUCCESS' ){\n        return {\n            isFetching: false,\n            data: action.data,\n            error: false,\n        }\n    }\n    if(action.type === 'LOAD_USERS_ERROR' ){\n        return {\n            isFetching: false,\n            data: [],\n            error: true\n        }\n    }\n    return state\n}\n\nexport default users","const INITIAL_STATE = {\n    data: [],\n    isFetching: false,\n    error:false\n}\n\nconst profile = ( state = INITIAL_STATE, action) => {\n    if(action.type === 'LOAD_PROFILE_REQUEST' ){\n        return {\n            isFetching: true,\n            data: [],\n            error: false\n        }\n    }\n    if(action.type === 'LOAD_PROFILE_SUCCESS' ){\n        return {\n            isFetching: false,\n            data: action.data,\n            error: false,\n        }\n    }\n    if(action.type === 'LOAD_PROFILE_ERROR' ){\n        return {\n            isFetching: false,\n            data: [],\n            error: true\n        }\n    }\n    return state\n}\n\nexport default profile","const INITIAL_STATE = {\n    data: [],\n    isFetching: false,\n    error:false\n}\n\nconst adminExams = ( state = INITIAL_STATE, action) => {\n    if(action.type === 'LOAD_ADMIN_EXAMS_REQUEST' ){\n        return {\n            isFetching: true,\n            data: [],\n            error: false\n        }\n    }\n    if(action.type === 'LOAD_ADMIN_EXAMS_SUCCESS' ){\n        return {\n            isFetching: false,\n            data: action.data,\n            error: false,\n        }\n    }\n    if(action.type === 'LOAD_ADMIN_EXAMS_ERROR' ){\n        return {\n            isFetching: false,\n            data: [],\n            error: true\n        }\n    }\n    return state\n}\n\nexport default adminExams","const INITIAL_STATE = {\n    data: [],\n    isFetching: false,\n    error:false\n}\n\nconst exams = ( state = INITIAL_STATE, action) => {\n    if(action.type === 'LOAD_EXAMS_REQUEST' ){\n        return {\n            isFetching: true,\n            data: [],\n            error: false\n        }\n    }\n    if(action.type === 'LOAD_EXAMS_SUCCESS' ){\n        return {\n            isFetching: false,\n            data: action.data,\n            error: false,\n        }\n    }\n    if(action.type === 'LOAD_EXAMS_ERROR' ){\n        return {\n            isFetching: false,\n            data: [],\n            error: true\n        }\n    }\n    return state\n}\n\nexport default exams","const INITIAL_STATE = {\n    data: [],\n    isFetching: false,\n    error:false,\n    file_id: null,\n}\n\nconst chatDialog = ( state = INITIAL_STATE, action) => {\n    if(action.type === 'LOAD_CHATDIALOG_REQUEST' ){\n        return {\n            isFetching: true,\n            data: [],\n            error: false,\n            file_id: action.file_id\n        }\n    }\n    if(action.type === 'LOAD_CHATDIALOG_SUCCESS' ){\n        return {\n            isFetching: false,\n            data: action.data,\n            error: false,\n            file_id: action.file_id,\n        }\n    }\n    if(action.type === 'LOAD_CHATDIALOG_ERROR' ){\n        return {\n            isFetching: false,\n            data: [],\n            error: true\n        }\n    }\n    return state\n}\n\nexport default chatDialog","import { combineReducers } from 'redux';\nimport errorReducer from './errorReducer';\nimport authReducer from './authReducer';\nimport usersReducer from './usersReducer'\nimport profileReducer from './profileReducer'\nimport adminExamsReducer from  './adminExamsReducer'\nimport examsReducer from  './examsReducer'\nimport chatDialogReducer from './chatDialogReducer'\n\nexport default combineReducers({\n    errors: errorReducer,\n    auth: authReducer,\n    users: usersReducer,\n    profile: profileReducer,\n    adminExams: adminExamsReducer,\n    exams: examsReducer,\n    chatDialog: chatDialogReducer,\n});","export const GET_ERRORS = 'GET_ERRORS';\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';","\nexport const loadUsersRequest = () => {\n    return {\n        type : 'LOAD_USERS_REQUEST'\n    }\n}\nexport const loadUsersSuccess = (data) => {\n    return {\n        type : 'LOAD_USERS_SUCCESS',\n        data\n    }   \n}\n\nexport const loadProfileRequest = () => {\n    return {\n        type : 'LOAD_PROFILE_REQUEST'\n    }\n}\nexport const loadProfileSuccess = (data) => {\n    return {\n        type : 'LOAD_PROFILE_SUCCESS',\n        data\n    }   \n}\n\nexport const loadAdminExamsRequest = () => {\n    return {\n        type : 'LOAD_ADMIN_EXAMS_REQUEST'\n    }\n}\nexport const loadAdminExamsSuccess = (data) => {\n    return {\n        type : 'LOAD_ADMIN_EXAMS_SUCCESS',\n        data\n    }   \n}\nexport const loadExamsRequest = () => {\n    return {\n        type : 'LOAD_EXAMS_REQUEST'\n    }\n}\nexport const loadExamsSuccess = (data) => {\n    return {\n        type : 'LOAD_EXAMS_SUCCESS',\n        data\n    }   \n}\nexport const loadChatDialogRequest = (file_id) => {\n    return {\n        type : 'LOAD_CHATDIALOG_REQUEST',\n        file_id\n    }\n}\nexport const loadChatDialogSuccess = (data, file_id) => {\n    return {\n        type : 'LOAD_CHATDIALOG_SUCCESS',\n        data,\n        file_id\n    }   \n}","import { put } from 'redux-saga/effects'\nimport  { loadUsersSuccess } from './../actions/actions'\nimport dotenv from 'dotenv'\ndotenv.config()\n\nfunction *getUsers(axios, actions){\n    console.log('usersSagas')    \n    const dados = yield axios.get(process.env.REACT_APP_API_HOST + '/api/users/')\n        console.log(dados.data)\n        yield put(loadUsersSuccess(dados.data))\n    \n}\nexport default getUsers","import { put } from 'redux-saga/effects'\nimport  { loadProfileSuccess } from './../actions/actions'\nimport dotenv from 'dotenv'\ndotenv.config()\n\nfunction *getProfile(axios, actions){\n    console.log('profileSagas')    \n    const dados = yield axios.get(process.env.REACT_APP_API_HOST + '/api/users/me')\n        console.log('eeeee', dados.data)\n        yield put(loadProfileSuccess(dados.data))\n    \n}\nexport default getProfile","import { put } from 'redux-saga/effects'\nimport  { loadExamsSuccess } from './../actions/actions'\nimport dotenv from 'dotenv'\ndotenv.config()\n\nfunction *getExams(axios, actions){\n    \n    const dados = yield axios.get(process.env.REACT_APP_API_HOST + '/api/files/')\n        console.log(dados.data)\n        yield put(loadExamsSuccess(dados.data))\n    \n}\nexport default getExams","import { put } from 'redux-saga/effects'\nimport  { loadAdminExamsSuccess } from './../actions/actions'\nimport dotenv from 'dotenv'\ndotenv.config()\n\nfunction *getAdminExams(axios){\n\n    const dados = yield axios.get(process.env.REACT_APP_API_HOST + '/api/files/')\n        console.log(dados.data)\n        yield put(loadAdminExamsSuccess(dados.data))\n    \n}\nexport default getAdminExams\n","import { put } from 'redux-saga/effects'\nimport  { loadChatDialogSuccess } from './../actions/actions'\nimport dotenv from 'dotenv'\ndotenv.config()\n\nfunction *getChatDialog(axios, actions){\n        const dados = yield axios.get(process.env.REACT_APP_API_HOST + '/api/comments/file/' + actions.file_id)\n        \n        yield put(loadChatDialogSuccess(dados.data, actions.file_id))\n    \n}\nexport default getChatDialog","import { takeLatest } from 'redux-saga/effects'\nimport getUsers from './usersSagas'\nimport getProfile from './profileSagas'\nimport getExams from './examsSagas'\nimport getAdminExams from './adminExamsSagas'\nimport getChatDialog from './chatDialogSagas'\n\nimport axios from 'axios'\n\nfunction *index(){\n    \n    yield takeLatest('LOAD_USERS_REQUEST', getUsers, axios)\n    yield takeLatest('LOAD_PROFILE_REQUEST', getProfile, axios)\n    yield takeLatest('LOAD_ADMIN_EXAMS_REQUEST', getAdminExams, axios)\n    yield takeLatest('LOAD_EXAMS_REQUEST', getExams, axios)\n    yield takeLatest('LOAD_CHATDIALOG_REQUEST', getChatDialog, axios)\n}\n\nexport default index","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport  createSagaMiddleware from 'redux-saga' \nimport indexSaga from './sagas/index'\n\nconst inititalState = {};\n\nconst sagaMiddleware = createSagaMiddleware()\n\n\nconst store = createStore(\n        rootReducer, \n        inititalState, \n        compose(applyMiddleware(thunk,sagaMiddleware), \n              /*  window.__REDUX_DEVTOOLS_EXTENSION__&& window.__REDUX_DEVTOOLS_EXTENSION__() */));\n\nsagaMiddleware.run(indexSaga)\n\nexport default store;","import axios from 'axios';\n\nconst setAuthToken = token => {\n   \n    if(token) {\n        axios.defaults.headers.common['Authorization'] = token;\n    }\n    else {\n        delete axios.defaults.headers.common['Authorization'];\n    }\n}\n\nexport default setAuthToken;","import axios from 'axios';\nimport { GET_ERRORS, SET_CURRENT_USER } from './types';\nimport setAuthToken from '../setAuthToken';\nimport jwt_decode from 'jwt-decode'\nimport dotenv from 'dotenv'\ndotenv.config()\n\nexport const registerUser = (user, history) => dispatch => {\n    \n    if(localStorage.getItem('jwtToken')){\n        axios.defaults.headers.common['Authorization'] = localStorage.getItem('jwtToken')\n        console.log(axios.defaults.headers.common['Authorization'])\n        axios.post(process.env.REACT_APP_API_HOST + '/api/users/register', user)\n                .then(res => history.push('/users?registrationSucessfull=true'))\n                .catch(err => {\n                    console.log(JSON.stringify(err.response))\n                    dispatch({\n                        type: GET_ERRORS,\n                        payload: err.response.data\n                    });\n                });\n    }else{\n        history.push('/login')\n    }\n    \n}\n\nexport const loginUser = (user) => dispatch => {\n    \n    axios.post(process.env.REACT_APP_API_HOST + '/api/users/login', user)\n            .then(res => {\n                console.log('res', res.data)\n                const { token } = res.data;\n                localStorage.setItem('jwtToken', token);\n                setAuthToken(token);\n                const decoded = jwt_decode(token);\n                dispatch(setCurrentUser(decoded));\n            })\n            .catch((err) => {\n                console.log(err)\n                console.log(err.response)\n                if(err && err.response){\n                    dispatch({\n                        type: GET_ERRORS,\n                        payload: err.response.data\n                    })\n                }else{\n                    console.log(err)\n                }\n                \n            });\n}\n\nexport const setCurrentUser = decoded => {\n    return {\n        type: SET_CURRENT_USER,\n        payload: decoded\n    }\n}\n\nexport const logoutUser = (history) => dispatch => {\n    localStorage.removeItem('jwtToken');\n    setAuthToken(false);\n    dispatch(setCurrentUser({}));\n    history.push('/login');\n}","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { withRouter } from 'react-router-dom'\nimport { registerUser } from '../actions/authentication'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { withStyles } from '@material-ui/styles'\nimport MenuItem   from '@material-ui/core/MenuItem'\nimport Select   from '@material-ui/core/Select'\nimport FormControl   from '@material-ui/core/FormControl'\nimport InputLabel   from '@material-ui/core/InputLabel'\nimport Input   from '@material-ui/core/Input'\nimport FormHelperText   from '@material-ui/core/FormHelperText'\nimport Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport CircularProgress from '@material-ui/core/CircularProgress' \n\nclass Register extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            username: '',\n            type: 0,\n            completename: '',\n            cpf: '',\n            address: '',\n            crmv: '',\n            technicalSupport: '',\n            phone: '',\n    //        password: '',\n    //        confirmPassword: '',\n            errors: {},\n            isFetching: false\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleSelectTypeChange = this.handleSelectTypeChange.bind(this)\n    }\n    \n    handleInputChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    handleSelectTypeChange(e){\n        console.log('e ', e)\n        this.setState({\n            type: e.target.value\n        })\n    }\n    handleSubmit(e) {\n        e.preventDefault();\n        const user = {\n            username: this.state.username,\n            type: this.state.type,\n            completename: this.state.completename,\n            cpf: this.state.cpf,\n            address: this.state.address,\n            phone: this.state.phone,\n            crmv: this.state.crmv,\n            technicalSupport: this.state.technicalSupport\n        }\n        this.setState({\n            isFetching: true\n        })\n        this.props.registerUser(user, this.props.history);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.auth.isAuthenticated) {\n    //        this.props.history.push('/')\n        }\n        this.setState({\n            isFetching: false\n        })\n        if(nextProps.errors) {\n            var errors = nextProps.errors.errors\n            console.log(errors)\n            var errorsToSend = {\n\n            }\n            if(errors && errors.length){\n                for(var i=0;i<errors.length;i++){\n                    console.log(errors[i].param)\n                    if(errors[i].param === 'username'){\n                        errorsToSend.username = errors[i].msg\n                    }else if(errors[i].param === 'password'){\n                        errorsToSend.password = errors[i].msg\n                    }\n                    else if(errors[i].param === 'confirmPassword'){\n                        errorsToSend.confirmPassword = errors[i].msg\n                    }\n                    else if(errors[i].param === 'type'){\n                        errorsToSend.type = errors[i].msg\n                    }\n                }\n                console.log(errorsToSend)\n                this.setState({\n                    errors: errorsToSend\n                })\n            }\n        }\n    }\n\n    componentDidMount() {\n        if(this.props.auth.isAuthenticated && !this.props.auth.user.admin) {\n            this.props.history.push('/');\n        }\n    }\n    \n    render() {\n        \n        \n        const { errors } = this.state\n        const classes = styles()\n  //      React.useEffect(() => {\n  //          setLabelWidth(labelRef.current.offsetWidth)\n  //        }, [])\n\n\n        return(\n            <Grid\n            container\n            spacing={0}\n            direction=\"column\"\n            alignItems=\"center\"\n            justify=\"center\"\n            style={{ minHeight: '100vh', marginTop: 50 }}\n           >\n          \n            <Grid item xs={5}>\n                    <Card className={classes.card}>\n                    <CardContent>\n                    <Typography \n                            variant=\"h5\" component=\"h2\">\n                        Casdastrar novo usuário\n\n                    </Typography>\n                    <form onSubmit={ this.handleSubmit }>\n                    <FormControl className={classes.formControl} fullWidth={true} >\n                        <InputLabel htmlFor=\"type-error\">Tipo de Usuário</InputLabel>\n                        <Select\n                        value={this.state.type}\n                        onChange={this.handleSelectTypeChange}\n                        name=\"type\"\n                        \n                        >\n                        <MenuItem value={0}>\n                            <em>Escolha tipo de usuário</em>\n                        </MenuItem>\n                        <MenuItem value={1}>Cliente</MenuItem>\n                        <MenuItem value={2}>Clínica</MenuItem>\n                        <MenuItem value={3}>Veterinário</MenuItem>\n                        <MenuItem value={4}>Administrador</MenuItem>\n                        </Select>\n                        {errors.type && (<FormHelperText id=\"type-text\" style={{color: 'red'}}>{errors.type}</FormHelperText>)}\n                    </FormControl>\n                        <FormControl className={classes.formControl} fullWidth={true} margin={PropTypes.margin}>\n                            <InputLabel htmlFor=\"username\">E-mail</InputLabel>\n                            <Input\n                            type=\"text\"\n                            id=\"username\"\n                            value={ this.state.username }\n                            name=\"username\"\n                            onChange={this.handleInputChange}\n                            aria-describedby=\"username-text\"\n                            value={ this.state.username }\n                            />\n                            {errors.username && (<FormHelperText id=\"username-text\" style={{color: 'red'}}>{errors.username}</FormHelperText>)}\n                        </FormControl>\n                        <FormControl className={classes.formControl} fullWidth={true} >\n                            <InputLabel htmlFor=\"completename\">Nome Completo</InputLabel>\n                            <Input\n                            type=\"text\"\n                            id=\"completename\"\n                            value={ this.state.completename }\n                            name=\"completename\"\n                            onChange={this.handleInputChange}\n                            aria-describedby=\"completename-text\"\n                            value={ this.state.completename }\n                            />\n                            {errors.completename && (<FormHelperText id=\"completename-text\" style={{color: 'red'}}>{errors.completename}</FormHelperText>)}\n                        </FormControl>\n                        <FormControl className={classes.formControl} fullWidth={true} >\n                            <InputLabel htmlFor=\"cpf\">CPF/CNPJ</InputLabel>\n                            <Input\n                            type=\"text\"\n                            id=\"cpf\"\n                            value={ this.state.cpf }\n                            name=\"cpf\"\n                            onChange={this.handleInputChange}\n                            aria-describedby=\"cpf-text\"\n                            value={ this.state.cpf }\n                            />\n                            {errors.cpf && (<FormHelperText id=\"cpf-text\" style={{color: 'red'}}>{errors.cpf}</FormHelperText>)}\n                        </FormControl>\n                        {this.state.type != 3 && (\n                            <FormControl className={classes.formControl} fullWidth={true} >\n                                <InputLabel htmlFor=\"address\">Endereço</InputLabel>\n                                <Input\n                                type=\"text\"\n                                id=\"address\"\n                                value={ this.state.address }\n                                name=\"address\"\n                                onChange={this.handleInputChange}\n                                aria-describedby=\"address-text\"\n                                value={ this.state.address }\n                                />\n                                {errors.address && (<FormHelperText id=\"address-text\" style={{color: 'red'}}>{errors.address}</FormHelperText>)}\n                            </FormControl>\n                        )\n                        }\n                        <FormControl className={classes.formControl} fullWidth={true} >\n                            <InputLabel htmlFor=\"phone\">Telephone de Contato</InputLabel>\n                            <Input\n                            type=\"text\"\n                            id=\"phone\"\n                            value={ this.state.phone }\n                            name=\"phone\"\n                            onChange={this.handleInputChange}\n                            aria-describedby=\"phone-text\"\n                            value={ this.state.phone }\n                            />\n                            {errors.phone && (<FormHelperText id=\"phone-text\" style={{color: 'red'}}>{errors.phone}</FormHelperText>)}\n                        </FormControl>\n                        {(this.state.type == 2 || this.state.type == 3)  && (\n                        <FormControl className={classes.formControl} fullWidth={true} >\n                            <InputLabel htmlFor=\"crmv\">CRMV</InputLabel>\n                            <Input\n                            type=\"text\"\n                            id=\"crmv\"\n                            value={ this.state.crmv }\n                            name=\"crmv\"\n                            onChange={this.handleInputChange}\n                            aria-describedby=\"crmv-text\"\n                            value={ this.state.crmv }\n                            />\n                            {errors.crmv && (<FormHelperText id=\"crmv-text\" style={{color: 'red'}}>{errors.crmv}</FormHelperText>)}\n                        </FormControl>\n                        )}\n                        {this.state.type == 2 && (\n                            <FormControl className={classes.formControl} fullWidth={true} >\n                                <InputLabel htmlFor=\"technicalSupport\">Responsável Tecnico</InputLabel>\n                                <Input\n                                type=\"text\"\n                                id=\"technicalSupport\"\n                                value={ this.state.technicalSupport }\n                                name=\"technicalSupport\"\n                                onChange={this.handleInputChange}\n                                aria-describedby=\"technicalSupport-text\"\n                                value={ this.state.technicalSupport }\n                                />\n                                {errors.technicalSupport && (<FormHelperText id=\"technicalSupport-text\" style={{color: 'red'}}>{errors.technicalSupport}</FormHelperText>)}\n                            </FormControl>\n                        )}\n                    <CardActions>\n                        {!this.state.isFetching && (<Button fullWidth={true} variant=\"contained\" color=\"primary\" type=\"submit\" >\n                            Cadastrar\n                        </Button> )}\n                        {this.state.isFetching && (\n                            <Grid\n                            container\n                            spacing={0}\n                            direction=\"column\"\n                            alignItems=\"center\"\n                            justify=\"center\"\n                            style={{marginTop: 30}}\n                          >\n                                <CircularProgress />\n                            </Grid>\n                        )}\n                    </CardActions>\n                    </form>\n                    </CardContent>\n                </Card>\n            </Grid>      \n          </Grid>\n        )\n    }\n}\n\nconst styles = theme => ({\n    button: {\n    //  margin: theme.spacing(1),\n    },\n    input: {\n      display: 'none',\n    },\n    formControl:{\n        marginTop:200\n    }\n  })\nRegister.propTypes = {\n    registerUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(mapStateToProps,{ registerUser })(withRouter(Register), withStyles(styles))","import React, { Component } from 'react';\nimport { loadUsersRequest } from '../actions/actions'\nimport { connect } from 'react-redux'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Card from '@material-ui/core/Grid'\nimport CardContent from '@material-ui/core/Grid'\nimport MaterialTable from 'material-table'\nimport Moment from 'moment'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport axios from 'axios'\nimport Grow from '@material-ui/core/Grow'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Button from '@material-ui/core/Button'\nimport dotenv from 'dotenv'\ndotenv.config()\n\nclass Users extends Component {\n    \n    constructor(props){\n        super(props)\n        this.state = {\n            collapse: true,\n            isFetchingForDeleting: false\n        }\n    }\n    \n    componentDidMount(){\n        this.props.loadUsers()\n    }\n\n    render() {\n        return (\n            <div style={{marginLeft:70, marginTop: 60, width:'100%', height:'100%'}}>\n            {this.props.isFetching || this.state.isFetchingForDeleting && (\n                            <Grid\n                            container\n                            spacing={0}\n                            direction=\"column\"\n                            alignItems=\"center\"\n                            justify=\"center\"\n                            style={{flex:1, marginTop:100,justifyContent: 'center', alignContent: 'center', alignItems: 'center'}}\n                          >\n                                <CircularProgress />\n                            </Grid>\n                        )}\n               {!this.props.isFetching && (\n               <Grow\n                in={!this.props.isFetching && !this.state.isFetchingForDeleting }\n                style={{ transformOrigin: '0 0 0' }}\n                {...(!this.props.isFetching ? { timeout: 1000 } : {})}\n                >\n                <Grid\n                    container\n                    spacing={0}\n                    direction=\"column\"\n                    alignItems=\"center\"\n                    justify=\"center\"\n                    style={{ minHeight: '100vh',  }}\n                >\n                \n                    <Grid item xs={12}>\n                    <div style={{flex: 1, alignContent: 'center', margin: 10}}><Button onClick={()=>{ this.setState({ collapse: !this.state.collapse})}}>{this.state.collapse ? 'Ver todas Colunas' :  'Ocultar Colunas'}</Button></div>\n               \n                    <MaterialTable\n                        title=\"Usuários\"\n                        columns={!this.state.collapse ? columns : collapsedColumns}\n                        data={this.props.users}\n                        editable={{\n\n                            onRowUpdate: (newData, oldData) =>\n                                new Promise((resolve, reject) => {\n                                    if(!this.state.collapse){\n                                        axios.patch(process.env.REACT_APP_API_HOST + '/api/users/' + oldData._id, newData)\n                                        .then(res => {\n                                            this.props.loadUsers()\n                                            resolve()\n                                        })\n                                       .catch(err => {\n                                            reject()\n                                       })\n                                    }else{\n                                        alert('Habilite todas as colunas para realizar essa ação')\n                                        resolve()\n                                    }\n                                    \n                                }),\n                            onRowDelete: oldData =>\n                                new Promise((resolve, reject) => {\n                                    setTimeout(() => {\n                                        {\n                                            var password = prompt('Tem certeza que está querendo deletar o usuário ' + oldData.completename + '? Serão eliminados todos os exames e bate-papos desse usuário. Se quiser prosseguir com a eliminação deste usuário por favor, digite a sua senha de administrador:')\n                                            if(password != null && password && password.length > 0){\n                                                this.setState({\n                                                    isFetchingForDeleting: true\n                                                })\n                                                axios.delete(process.env.REACT_APP_API_HOST + '/api/users/' + oldData._id, {data: {password}})\n                                                            .then(res => {\n                                                                \n                                                                setTimeout(()=>{\n                                                                    this.setState({\n                                                                        isFetchingForDeleting: false\n                                                                    })\n                                                                    window.location.reload()\n                                                                }, 5000)\n                                                                \n                                                                resolve(res)\n                                                                \n                                                            })\n                                                            .catch(err => {\n                                                               \n                                                                setTimeout(()=>{\n                                                                    this.setState({\n                                                                        isFetchingForDeleting: false\n                                                                    })\n                                                                    window.location.reload()    \n                                                                }, 5000)\n                                                                reject(err)\n                                                            })\n                                            }\n                                        }\n                                        resolve();\n                                    }, 1000);\n                                })\n                        }}\n                        detailPanel={[\n                            {\n                              tooltip: 'Ver Exames',\n                              render: rowData => {\n                                return (\n                                    <Grow\n                                        in={!this.props.isFetching}\n                                        style={{ transformOrigin: '0 0 0' }}\n                                        {...(!this.props.isFetching ? { timeout: 1000 } : {})}\n                                        >\n                                  <div\n                                    style={{\n                                      fontSize: 100,\n                                      textAlign: 'center',\n                                      color: 'white',\n                                      backgroundColor: '#43A047',\n                                      padding: 20\n                                    }}\n                                  >\n                                    <MaterialTable\n                                            title=\"Exames\"\n                                            columns={columnsFiles}\n                                            data={rowData.files}\n                                            actions={[\n                                                {\n                                                icon: 'remove_red_eye',\n                                                tooltip: 'Visualizar Arquivo',\n                                                onClick: (event, rowData) => {\n                                                axios(process.env.REACT_APP_API_HOST + '/api/files/' + rowData._id, {\n                                                        method: 'GET',\n                                                        responseType: 'blob' //Force to receive data in a Blob Format\n                                                    })\n                                                    .then(response => {\n                                                        const file = new Blob(\n                                                        [response.data], \n                                                        {type: 'application/pdf'})\n                                                        \n                                                        const fileURL = URL.createObjectURL(file)\n                                                    var anchor = document.createElement(\"a\");\n                                                    anchor.download = rowData.displayName + '.' + rowData.type;\n                                                    anchor.href = fileURL;\n                                                    anchor.click()\n                                                    //    window.open(fileURL);\n                                                    })\n                                                    .catch(error => {\n                                                        console.log(error);\n                                                    });\n                                                }\n                                                }\n                                            ]}\n                                            editable={{\n\n                                                onRowDelete: oldData =>\n                                                    new Promise((resolve, reject) => {\n                                                        axios.delete(process.env.REACT_APP_API_HOST + '/api/files/' + oldData._id)\n                                                            .then(res => {\n                                                                this.props.loadAdminExams()\n                                                                resolve(res)\n                                                            })\n                                                            .catch(err => {\n                                                                reject(err)\n                                                            })\n                                                    })\n                                            }}\n                                    options={{\n                                        actionsColumnIndex: -1,\n                                        exportButton: true,\n                                        exportFileName: 'Lista de Exames'\n                                    }}\n                                    localization={{\n                                        header: {\n                                            actions: 'Ações'\n                                        },\n                                        body: {\n                                        emptyDataSourceMessage: 'Sem dados para mostrar',\n                                        editRow: {\n                                            deleteText: 'Tem certeza que quer deletar o exame?'\n                                        }\n                                        },\n                                        toolbar: {\n                                        searchTooltip: 'Procurar',\n                                        searchPlaceholder: 'Procurar',\n                                        exportTitle: 'Exportar CSV',\n                                        exportAriaLabel: 'Exportar CSV',\n                                        exportName: 'Exportar CSV'\n\n                                        },\n                                        pagination: {\n                                        labelRowsSelect: 'Filas',\n                                        labelDisplayedRows: '{count} de {from}-{to} ',\n                                        firstTooltip: 'Primeira',\n                                        previousTooltip: 'Anterior',\n                                        nextTooltip: 'Seguinte',\n                                        lastTooltip: 'Última Página'\n                                        }\n                                    }}\n                                    />\n                                  </div>\n                                 </Grow>\n                                )\n                              },\n                            },]}\n                        options={{\n                            actionsColumnIndex: -1,\n                            exportButton: true,\n                            exportFileName: 'Usuarios'\n                          }}\n                          localization={{\n                            header: {\n                                actions: 'Ações'\n                            },\n                            body: {\n                              emptyDataSourceMessage: 'Sem dados para mostrar',\n                              editRow: {\n                                deleteText: 'Tem certeza que quer deletar o usuário?'\n                              }\n                            },\n                            toolbar: {\n                              searchTooltip: 'Procurar',\n                              searchPlaceholder: 'Procurar',\n                              exportTitle: 'Exportar CSV',\n                              exportAriaLabel: 'Exportar CSV',\n                              exportName: 'Exportar CSV'\n\n                            },\n                            pagination: {\n                              labelRowsSelect: 'Filas',\n                              labelDisplayedRows: '{count} de {from}-{to} ',\n                              firstTooltip: 'Primeira',\n                              previousTooltip: 'Anterior',\n                              nextTooltip: 'Seguinte',\n                              lastTooltip: 'Última Página'\n                            }\n                          }}\n                        />\n                    </Grid>\n             </Grid>\n             </Grow>\n             )}\n            \n            </div>\n        );\n    }\n}\nfunction convertDateMin(date){\n    return  Moment(date).format('DD/MM/YY')\n }\n function convertDateMax(date){\n    return  Moment(date).format('DD/MM/YYYY hh:mm A')\n }\nconst columns = [\n{ title: 'E-mail', field: 'username' },\n{ title: 'Nome', field: 'completename' },\n{\n    title: 'Tipo',\n    field: 'type',\n    lookup: { 1: 'Cliente', 2: 'Clínica', 3: 'Veterinário', 4: 'Admin' },\n},\n{ title: 'CPF/CNPJ', field: 'cpf' },\n{ title: 'Endereço',\n  field: 'address' },\n // render: rowData => <Tooltip title={rowData.address ? rowData.address : 'Sem Endereço definido'} placement=\"top\"><div> {( rowData.address && rowData.address.length > 5) ? (rowData.address.substring(0,5) + '...') : rowData.address} </div></Tooltip>  },\n{ title: 'Atividade', \n  field: 'lastActivity',\n  type: 'datetime', \n  render: rowData => <Tooltip title={convertDateMax(rowData.lastActivity)}><div> {convertDateMin(rowData.lastActivity) }</div></Tooltip> },\n{ title: 'Fone', field: 'phone' },\n{ title: 'Responsável  Tecnico', field: 'technicalSupport' },\n{ title: 'CRMV', field: 'crmv' },\n]\nconst collapsedColumns = [\n    { title: 'Nome', field: 'completename' },\n    {\n        title: 'Tipo',\n        field: 'type',\n        lookup: { 1: 'Cliente', 2: 'Clínica', 3: 'Veterinário', 4: 'Admin' },\n    },\n    \n    { title: 'Atividade', \n      field: 'lastActivity',\n      type: 'datetime', \n      render: rowData => <Tooltip title={convertDateMax(rowData.lastActivity)}><div> {convertDateMax(rowData.lastActivity) }</div></Tooltip> },\n   \n    ]\n\nconst columnsFiles = [\n    { title: 'Nome', field: 'displayName' },\n    { title: 'Tipo', field: 'type' },\n    { title: 'Lido', field: 'read', type: 'boolean' },\n    { title: 'Data subida', \n      field: 'lastActivity',\n      type: 'datetime', \n      render: rowData => <Tooltip title={convertDateMax(rowData.lastActivity)}><div> {convertDateMax(rowData.lastActivity) }</div></Tooltip> },\n    ]\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        isFetching: state.users.isFetching,\n        users: state.users.data,\n        error: state.users.error\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        loadUsers: () => dispatch(loadUsersRequest())\n    }\n} \n\nexport default connect(mapStateToProps, mapDispatchToProps)(Users)","import React, { Component } from 'react';\nimport { loadProfileRequest } from '../actions/actions'\nimport { connect } from 'react-redux'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Box from '@material-ui/core/Box'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport PropTypes from 'prop-types'\nimport Paper from '@material-ui/core/Paper'\nimport MenuItem   from '@material-ui/core/MenuItem'\nimport Select   from '@material-ui/core/Select'\nimport FormControl   from '@material-ui/core/FormControl'\nimport InputLabel   from '@material-ui/core/InputLabel'\nimport Input   from '@material-ui/core/Input'\nimport FormHelperText   from '@material-ui/core/FormHelperText'\nimport Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport CircularProgress from '@material-ui/core/CircularProgress' \nimport AppBar from  '@material-ui/core/AppBar' \nimport { minWidth } from '@material-ui/system';\nimport axios from 'axios'\nimport dotenv from 'dotenv'\ndotenv.config()\n\nclass Profile extends Component {\n    \n    constructor(props){\n        \n        super(props)\n        this.state = {\n            isEditing: false,\n            tab: 0,\n            errors: false,\n            message: false,\n            isSaving: false,\n            password: '',\n            confirmPassword: ''\n        }\n        \n        this.handleTabsChange = this.handleTabsChange.bind(this)\n        this.changeToEditProfile = this.changeToEditProfile.bind(this)\n        this.handleInputChange = this.handleInputChange.bind(this)\n        this.saveProfile = this.saveProfile.bind(this)\n        this.postPassword = this.postPassword.bind(this)\n        this.handleInputPasswordChange = this.handleInputPasswordChange.bind(this)\n    }\n    \n    componentDidMount(){\n        this.props.loadProfile()\n    }\n    postPassword(){\n        if(!this.state.password || !this.state.confirmPassword){\n            this.setState({\n                errors: 'Por favor, escrever senha e confirmar a mesma'\n            })\n        }else if(this.state.password.length < 6){\n            this.setState({\n                errors: 'A senha deve ter minimo 6 carateres'\n            })\n        }else if(this.state.password != this.state.confirmPassword){\n            this.setState({\n                errors: 'A senhas não coincidem'\n            })\n        }else{\n            this.setState({\n                isSaving: true\n            })\n            axios.post(process.env.REACT_APP_API_HOST + '/api/users/reset_password', {password: this.state.password,\n                                                     confirmPassword: this.state.confirmPassword})\n                  .then(res => {\n                        this.setState({\n                            password: '',\n                            confirmPassword: '',\n                            isSaving: false,\n                            message: 'Sua senha foi redefinida com sucesso'\n                        })\n                  })\n                  .catch(err => {\n                      if(err && err.response){\n                          this.setState({\n                              errors: JSON.stringify(err.response),\n                              isSaving: false\n                          })\n                      }\n                  })\n        }\n        \n    }\n    saveProfile(){\n        this.setState({\n            isSaving: true\n        })\n        axios.post(process.env.REACT_APP_API_HOST + '/api/users/me', this.props.profile)\n            .then(res => {\n                \n                this.props.profile.address = res.data.address\n                this.props.profile.cpf = res.data.cpf\n                this.props.profile.completename = res.data.completename\n                \n                this.setState({\n                    isSaving: false,\n                    isEditing: false\n                })\n            })\n            .catch(err => {\n                this.setState({\n                    errors: JSON.stringify(err.response)\n                })\n            })\n    }\n    handleInputChange(e) {\n        const varName = e.target.name\n        this.props.profile[varName] = e.target.value\n        this.setState({})\n    }\n    handleInputPasswordChange(e){\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    handleSelectTypeChange(e){\n        this.setState({\n            type: e.target.value\n        })\n    }\n    handleSubmitProfile(e) {\n        e.preventDefault();\n    }\n    handleTabsChange(event, newValue){\n        this.setState({\n            tab: newValue\n        })\n    }\n    changeToEditProfile(){\n        this.setState({\n            isEditing : true\n        })\n    }\n    render() {\n        return (\n            <div style={{marginTop:120, marginLeft:80, width: '100%', height: '100%', flex: 1, justifyContent: 'center', alignContent:'center'}}>\n               <Typography>\n                   Meu Perfil\n               </Typography>\n               \n               <Paper style={{marginTop:10, width: '70%'}}>\n                    <Tabs \n                    value={this.state.tab} onChange={this.handleTabsChange} aria-label=\"Meu Perfil\">\n                    <Tab label=\"Detalhes Conta\" {...a11yProps(0)} />\n                    <Tab label=\"Modificar Senha\" {...a11yProps(1)} />\n                    </Tabs>\n                <TabPanel value={this.state.tab} index={0}>\n                {!this.props.isFetching &&(\n                        <form onSubmit={ this.handleSubmitProfile }>\n                            <FormControl className={classes.formControl} fullWidth={true} >\n                                <InputLabel htmlFor=\"type-error\">Tipo de Usuário</InputLabel>\n                                <Select\n                                value={this.props.profile.type}\n                                onChange={this.handleSelectTypeChange}\n                                name=\"type\"\n                                disabled={true}\n                                >\n                                    <MenuItem value={0}>\n                                        <em>Escolha tipo de usuário</em>\n                                    </MenuItem>\n                                    <MenuItem value={1}>Cliente</MenuItem>\n                                    <MenuItem value={2}>Clínica</MenuItem>\n                                    <MenuItem value={3}>Veterinário</MenuItem>\n                                    <MenuItem value={4}>Administrador</MenuItem>\n                                </Select>\n                                \n                            </FormControl>\n                                <FormControl className={classes.formControl} fullWidth={true} margin={PropTypes.margin}>\n                                    <InputLabel htmlFor=\"username\">E-mail</InputLabel>\n                                    <Input\n                                    type=\"text\"\n                                    id=\"username\"\n                                    name=\"username\"\n                                    onChange={this.handleInputChange}\n                                    aria-describedby=\"username-text\"\n                                    value={ this.props.profile.username }\n                                    disabled={true}\n                                    />\n                                    \n                                </FormControl>\n                                <FormControl className={classes.formControl} fullWidth={true} >\n                                    <InputLabel htmlFor=\"completename\">Nome Completo</InputLabel>\n                                    <Input\n                                    type=\"text\"\n                                    id=\"completename\"\n                                    name=\"completename\"\n                                    onChange={this.handleInputChange}\n                                    aria-describedby=\"completename-text\"\n                                    value={ this.props.profile.completename }\n                                    disabled={!this.state.isEditing}\n                                    />\n                                    {this.props.error.completename && (<FormHelperText id=\"completename-text\">{this.props.error.completename}</FormHelperText>)}\n                                </FormControl>\n                                <FormControl className={classes.formControl} fullWidth={true} >\n                                    <InputLabel htmlFor=\"cpf\">CPF/CNPJ</InputLabel>\n                                    <Input\n                                    type=\"text\"\n                                    id=\"cpf\"\n                                    name=\"cpf\"\n                                    aria-describedby=\"cpf-text\"\n                                    onChange={ this.handleInputChange }\n                                    value={ this.props.profile.cpf }\n                                    disabled={!this.state.isEditing}\n                                    />\n                                    {this.props.error.cpf && (<FormHelperText id=\"cpf-text\">{this.props.error.cpf}</FormHelperText>)}\n                                </FormControl>\n                                <FormControl className={classes.formControl} fullWidth={true} >\n                                    <InputLabel htmlFor=\"address\">Endereço</InputLabel>\n                                    <Input\n                                    type=\"text\"\n                                    id=\"address\"\n                                    name=\"address\"\n                                    aria-describedby=\"address-text\"\n                                    onChange={ this.handleInputChange }\n                                    value={ this.props.profile.address }\n                                    disabled={!this.state.isEditing}\n                                    />\n                                    {this.props.error.address && (<FormHelperText id=\"address-text\">{this.props.error.address}</FormHelperText>)}\n                                </FormControl>\n                                {!this.props.profile.vet && (\n                                    <FormControl className={classes.formControl} fullWidth={true} >\n                                        <InputLabel htmlFor=\"address\">Endereço</InputLabel>\n                                        <Input\n                                        type=\"text\"\n                                        id=\"address\"\n                                        name=\"address\"\n                                        aria-describedby=\"address-text\"\n                                        onChange={ this.handleInputChange }\n                                        value={ this.props.profile.address }\n                                        disabled={!this.state.isEditing}\n                                        />\n                                        {this.props.error.address && (<FormHelperText id=\"address-text\">{this.props.error.address}</FormHelperText>)}\n                                    </FormControl>\n                                )}\n                                { (this.props.profile.vet || this.props.profile.clinic) && (\n                                \n                                    <FormControl className={classes.formControl} fullWidth={true} >\n                                        <InputLabel htmlFor=\"cmrv\">CMRV</InputLabel>\n                                        <Input\n                                        type=\"text\"\n                                        id=\"cmrv\"\n                                        name=\"cmrv\"\n                                        aria-describedby=\"cmrv-text\"\n                                        onChange={ this.handleInputChange }\n                                        value={ this.props.profile.cmrv }\n                                        disabled={!this.state.isEditing}\n                                        />\n                                        {this.props.error.cmrv && (<FormHelperText id=\"cmrv-text\">{this.props.error.cmrv}</FormHelperText>)}\n                                    </FormControl>\n                                )}\n                                {this.props.profile.clinic && (\n                                    <FormControl className={classes.formControl} fullWidth={true} >\n                                        <InputLabel htmlFor=\"technicalSupport\">Responsável Técnico</InputLabel>\n                                        <Input\n                                        type=\"text\"\n                                        id=\"technicalSupport\"\n                                        name=\"technicalSupport\"\n                                        aria-describedby=\"technicalSupport-text\"\n                                        onChange={ this.handleInputChange }\n                                        value={ this.props.profile.address }\n                                        disabled={!this.state.isEditing}\n                                        />\n                                        {this.props.error.technicalSupport && (<FormHelperText id=\"address-text\">{this.props.error.technicalSupport}</FormHelperText>)}\n                                    </FormControl>\n                                )}\n                            <CardActions>\n                                {!this.state.isSaving && !this.state.isEditing && \n                                    (<Button \n                                        onClick={this.changeToEditProfile}\n                                        fullWidth={true} variant=\"outlined\" color=\"primary\" type=\"submit\" >\n                                        Modificar Perfil\n                                </Button> )}\n                                {!this.state.isSaving && this.state.isEditing &&\n                                    (<Button \n                                        onClick={this.saveProfile}\n                                        fullWidth={true} variant=\"contained\" color=\"primary\" type=\"submit\" >\n                                        Salvar\n                                </Button> )}\n                                \n                                {this.state.isSaving && (\n                                    <Grid\n                                    container\n                                    spacing={0}\n                                    direction=\"column\"\n                                    alignItems=\"center\"\n                                    justify=\"center\"\n                                    style={{marginTop: 30}}\n                                >\n                                        <CircularProgress />\n                                    </Grid>\n                                )}\n                            </CardActions>\n                            </form>\n                            )}\n                </TabPanel>\n                <TabPanel value={this.state.tab} index={1}>\n                {!this.props.isFetching &&(\n                        <form onSubmit={ this.handleSubmitProfile }>\n                            \n                                <FormControl className={classes.formControl} fullWidth={true} margin={PropTypes.margin}>\n                                    <InputLabel htmlFor=\"password\">Nova senha</InputLabel>\n                                    <Input\n                                    type=\"password\"\n                                    id=\"password\"\n                                    name=\"password\"\n                                    onChange={this.handleInputPasswordChange}\n                                    aria-describedby=\"password-text\"\n                                    value={ this.state.password }\n                                    />\n                                </FormControl>\n                                <FormControl className={classes.formControl} fullWidth={true} margin={PropTypes.margin}>\n                                    <InputLabel htmlFor=\"confirmPassword\">Confirmar Nova senha</InputLabel>\n                                    <Input\n                                    type=\"password\"\n                                    id=\"confirmPassword\"\n                                    name=\"confirmPassword\"\n                                    onChange={this.handleInputPasswordChange}\n                                    aria-describedby=\"confirmPassword-text\"\n                                    value={ this.state.confirmPassword }\n                                    />\n                                </FormControl>\n                                {this.state.errors && (<FormHelperText id=\"password-text\" style={{color: 'red'}}>{this.state.errors}</FormHelperText>)}\n                                {this.state.message && (<FormHelperText id=\"password-text\" style={{color: 'green'}}>{this.state.message}</FormHelperText>)}\n                            <CardActions>\n                                {!this.state.isSaving &&\n                                    (<Button \n                                        onClick={this.postPassword}\n                                        fullWidth={true} variant=\"contained\" color=\"primary\" type=\"submit\" >\n                                        Redefinir Senha\n                                </Button> )}\n                                \n                                {this.state.isSaving && (\n                                    <Grid\n                                    container\n                                    spacing={0}\n                                    direction=\"column\"\n                                    alignItems=\"center\"\n                                    justify=\"center\"\n                                    style={{marginTop: 30}}\n                                >\n                                        <CircularProgress />\n                                    </Grid>\n                                )}\n                            </CardActions>\n                            </form>\n                            )}\n                </TabPanel>\n                </Paper>\n            </div>\n        );\n    }\n}\nconst classes = {}\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <Typography\n        component=\"div\"\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        <Box p={3}>{children}</Box>\n      </Typography>\n    );\n  }\n  \n  TabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n  };\n  \n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n\n  \n  \n\nconst mapStateToProps = (state) => {\n    return {\n        isFetching: state.profile.isFetching,\n        profile: state.profile.data,\n        error: state.profile.error\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        loadProfile: () => dispatch(loadProfileRequest())\n    }\n} \n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile)","import React, { Component } from 'react';\nimport { loadChatDialogRequest } from '../actions/actions'\nimport { connect } from 'react-redux'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\nimport { useTheme } from '@material-ui/core/styles'\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close'\nimport Button from '@material-ui/core/Button'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport SendIcon from '@material-ui/icons/Send'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport TextField from '@material-ui/core/TextField'\nimport Grow from  '@material-ui/core/Grow'\nimport ListItem from '@material-ui/core/ListItem'\nimport List from '@material-ui/core/List'\nimport axios from 'axios'\nimport dotenv from 'dotenv'\nimport PropTypes from 'prop-types'\nimport Avatar from '@material-ui/core/Avatar'\nimport AssigmentIdIcon from '@material-ui/icons/AssignmentInd'\nimport { blue, deepOrange } from '@material-ui/core/colors'\nimport Moment from 'moment'\nimport Card from  '@material-ui/core/Card'\nimport CardHeader from  '@material-ui/core/CardHeader'\nimport CardContent from  '@material-ui/core/CardContent'\ndotenv.config()\n\nconst styles = theme => ({\n    title: {\n      color: 'red',\n    }\n  });\n\nclass ChatDialog extends Component {\n    constructor(props){\n        super(props)\n        \n        this.state = {\n            openDialog: true,\n            scroll: 'paper',\n            message: '',\n            noReadMessageTag: false,\n            noReadSendToServer: false,\n            maxChatRefresh: 10,\n            refreshIntervalTime: 15000,\n            chatRefreshInterval: false,\n            currentChatRefresh: 0\n        }\n        this.renderMessage = this.renderMessage.bind(this)\n        this.handleClose = this.handleClose.bind(this)\n        this.handleMessageChange = this.handleMessageChange.bind(this)\n        this.postMessage = this.postMessage.bind(this)\n        this.getMessages = this.getMessages.bind(this)\n        this.messagesEndRef = React.createRef() \n        this.messagesNoReadRef = React.createRef() \n        this.messagesList = React.createRef()\n    }\n    \n    componentDidMount(){\n            this.props.loadChatDialogExams(this.props.file._id)\n    }\n    componentDidUpdate() {\n        if(this.messagesNoReadRef && this.messagesNoReadRef.current){\n            if(document.getElementById('messages-container')){\n                document.getElementById('messages-container').addEventListener('scroll', this.trackScrolling, false)\n                this.messagesNoReadRef.current.scrollIntoView({behavior: 'smooth'})\n                if(this.props && this.props.comments && this.props.comments && this.props.comments.length < 4 \n                    && !this.state.noReadSendToServer){\n                    this.postMessagesRead()\n                }\n            }\n            \n        }else{\n            if(this.messagesEndRef && this.messagesEndRef.current)\n            this.messagesEndRef.current.scrollIntoView({behavior: 'smooth'})\n        }\n        if(!this.state.chatRefreshInterval){\n            this.state.chatRefreshInterval = setInterval(this.getMessages, this.state.refreshIntervalTime);\n        }\n      }\n      getMessages(){\n          console.log('getMessages!')\n        axios.get(process.env.REACT_APP_API_HOST + '/api/comments/file/' + this.props.file._id)\n        .then((data) => {\n            var comments = data.data\n            if(comments && comments.length > this.props.comments.length){\n                var commentsToAdd = []\n                comments.forEach(comment => {\n                    var exists = false\n                    this.props.comments.forEach(commentProp => {\n                        if(comment._id === commentProp._id) exists = true\n                    })\n                    if(!exists) commentsToAdd.push(comment)\n                })\n                commentsToAdd.forEach(comment => {\n                    this.props.comments.push(comment)\n                })\n                \n                this.state.noReadMessageTag = false\n                this.state.noReadSendToServer = false\n            }\n            this.setState({\n                currentChatRefresh: this.state.currentChatRefresh ++\n            })\n            if(this.state.currentChatRefresh >= this.state.maxChatRefresh){\n                clearInterval(this.state.chatRefreshInterval)\n                this.setState({\n                    chatRefreshInterval: false\n                })\n                console.log('clearInterval because -> this.state.currentChatRefresh >= this.state.maxChatRefresh')\n            }\n        })\n        .catch((error) => {\n            clearInterval(this.state.chatRefreshInterval)\n            this.setState({\n                chatRefreshInterval: false\n            })\n            console.log('clearInterval because ERROR', JSON.stringify(error))\n        })\n      }\n    componentWillReceiveProps(newProps){\n        /*\n        setTimeout(()=> {\n            console.log(\"document.getElementById('messages-container')\",document.getElementById('messages-container'))\n            if(this.messagesNoReadRef && this.messagesNoReadRef.current){\n                if(document.getElementById('messages-container')){\n                    document.getElementById('messages-container').addEventListener('scroll', this.trackScrolling, false)\n                }\n                \n            }else{\n                if(this.messagesEndRef && this.messagesEndRef.current)\n                this.messagesEndRef.current.scrollIntoView({behavior: 'smooth'})\n            }\n            \n        }, 1500)\n        */\n    }\n    isBottom(element) {\n        if(element){\n            console.log( 'element.clientHeight', element.clientHeight)\n            console.log( 'element.scrollHeight - element.scrollTop', element.scrollHeight - element.scrollTop)\n            return Math.abs((element.scrollHeight - element.scrollTop)  - element.clientHeight) < 60;\n        }else{\n            console.log('in the scrolling element doesnt exist !!!!!!!')\n        }\n      }\n      \n      componentWillUnmount() {\n          if(document.getElementById('messages-container')){\n            document.getElementById('messages-container').removeEventListener('scroll', this.trackScrolling);\n          }\n          clearInterval(this.state.chatRefreshInterval)\n            this.setState({\n                chatRefreshInterval: false\n            })\n            console.log('clearInterval because UNMOUNT')\n      }\n      \n      trackScrolling = () => {\n        const wrappedElement = document.getElementById('messages-container');\n        console.log('scrooling')\n        if (this.isBottom(wrappedElement)) {\n            if(this.state.noReadMessageTag && !this.state.noReadSendToServer) this.postMessagesRead()\n\n            if(document.getElementById('messages-container')){\n                document.getElementById('messages-container').addEventListener('scroll', this.trackScrolling, false)\n            }\n        }\n    }\n    handleClose(){\n        this.setState({\n            openDialog: false,\n            noReadMessageTag: false\n        })\n        this.props.removeDialog()\n    }\n    handleMessageChange(e){\n        this.setState({\n            message: e.target.value\n        })\n    }\n    postMessagesRead(){\n        console.log('postMessagesRead')\n        axios.patch(process.env.REACT_APP_API_HOST + '/api/comments/read/file/' + this.props.file._id, {})\n                .then(file => {\n                    this.setState({\n                        noReadSendToServer: true\n                    })\n                    if(file && file.data){\n                        this.props.updateFile(file.data)\n                    }\n                    \n                })\n                .catch(err => {\n                    console.log('error trying to update as read messages')\n                })\n    }\n    renderMessage(comment, index){\n        const { classes } = this.props\n        console.log(comment == null)\n        return (\n\n          <div key={comment._id}  >\n          {!this.state.noReadMessageTag && !comment.read && comment.sender._id != this.props.auth.user._id && (\n              <ListItem  style={{width: '100%'}} ref={this.messagesNoReadRef}>\n              <Card style={{marginLeft: 'auto', marginRight: 'auto', background: blue[10]}}>\n                      <span style={{fontSize: 10, marginTop: -5, marginLeft:5, marginRight: 5}}>Mensagens não lidas</span>\n                  \n              </Card>\n              </ListItem>\n          )}\n            <Grow \n                in={true}\n                style={{ transformOrigin: '0 0 0' }}\n                {...(true ? { timeout: 1000 } : {})}\n            >\n                <ListItem  style={{width: '100%'}}>\n                    <span style={{marginLeft: comment.sender._id === this.props.auth.user._id ? '' : 'auto'}}>\n                {comment.sender.admin && \n                (\n                        <IconButton style={{float: comment.sender._id === this.props.auth.user._id ? 'left' : 'right'}} onClick={()=>{ \n                                                                                                                                console.log('comment.sender._id', comment.sender._id)\n                                                                                                                                console.log('this.props.auth.user._id', this.props.auth.user._id)\n                                                                                                                            }}>\n                            <Avatar aria-label=\"Recipe\" style={{ color: '#fff', backgroundColor: blue[500], }}>\n                                <AssigmentIdIcon />\n                            </Avatar>\n                        </IconButton>\n                )\n                }\n                {!comment.sender.admin && \n                        (\n                            <IconButton style={{float: comment.sender._id === this.props.auth.user._id ? 'left' : 'right'}} onClick={()=>{ \n                                                                                                                                    }}>\n                                <Avatar style={{color: '#fff',backgroundColor: deepOrange[500]}}>\n                                {comment.sender.completename \n                                && comment.sender.completename.length\n                                && comment.sender.completename.length > 0 ? \n                                comment.sender.completename.substring(0,1) : comment.sender.username.substring(0,1)}\n                                </Avatar>\n                            </IconButton>\n                        )\n                }\n                <Card style={{background: comment.sender.admin ? blue[50] : 'white'}}>\n                    <CardContent>\n                        <div><span style={{fontSize:11, float: 'left',marginRight:10}}>{comment.sender.completename}</span>   <span  style={{fontSize:10, float: 'left', color: 'gray'}}>{convertDate(comment.sentTime) }</span></div>\n                        <Typography variant=\"body2\"  component=\"p\" style={{marginTop: 20}}>\n                                {comment.message}\n                        </Typography>\n                    </CardContent>\n                     </Card>\n                </span>\n                </ListItem>\n            </Grow>\n            {!this.state.noReadMessageTag && !comment.read && comment.sender._id != this.props.auth.user._id && (this.state.noReadMessageTag = true)}\n          </div>\n        )\n    }\n\n    \n    postMessage(){\n        if(this.state.message && this.state.message.length > 0){\n            const comment = {\n                message: this.state.message,\n                file: this.props.file._id,\n                sender: this.props.auth.user._id,\n                receiver: this.props.auth.user._id === this.props.file.user._id ? this.props.file.admin._id : this.props.file.user._id,\n            }\n            this.setState({\n                message: ''\n            })\n            axios.post(process.env.REACT_APP_API_HOST + '/api/comments/file/' + this.props.file._id, comment)\n                    .then(res => {\n                        this.props.loadChatDialogExams(this.props.file._id)\n                    })\n                    .catch(err => {\n                        alert('error')\n                    })\n        }\n    }\n    render() { \n        return (\n            <Dialog\n                fullScreen={false}\n                fullWidth={true}\n                maxWidth='lg'\n                style={{ height: '90% !important' }}\n                open={this.state.openDialog}\n                scroll={this.state.scroll}\n                onClose={this.handleClose}\n                aria-labelledby=\"scroll-dialog-title\"\n            >\n                <DialogTitle id=\"scroll-dialog-title\">\n                        Messagens do exame: {this.props.file.displayName} \n                    <IconButton edge=\"end\" color=\"inherit\" onClick={this.handleClose} aria-label=\"close\" style={{float:'right'}}>\n                    <CloseIcon />\n                    </IconButton>\n                </DialogTitle>\n                    <DialogContent dividers={this.state.scroll === 'paper'} style={{background: '#eee'}} id=\"messages-container\">\n                        <List style={{width:'100%', minHeight: 310, margin:10,}} ref={this.messagesList}>\n                                {(this.state.noReadMessageTag = false)}\n                                {this.props.comments && this.props.comments.length > 0 && this.props.comments.map(this.renderMessage) }\n                                <ListItem ref={this.messagesEndRef} onBlur={()=>{ console.log('focused')}}/>\n                        </List>\n                        \n                    </DialogContent>\n                    <DialogActions style={{paddingLeft:25, paddingRight: 25, }}>\n                                <TextField\n                                    label=\"Faça sua pergunta...\"\n                                    multiline\n                                    rowsMax=\"3\"\n                                    value={this.state.message}\n                                    onChange={this.handleMessageChange}\n                                    margin=\"normal\"\n                                    variant=\"outlined\"\n                                    fullWidth={true}\n                                />\n                                <IconButton edge=\"end\" color=\"inherit\" onClick={this.postMessage} style={{float: 'right'}}>\n                                    <SendIcon />\n                                </IconButton>\n                    </DialogActions>\n            </Dialog>\n        );\n    }\n}\nChatDialog.propTypes = {\n    auth: PropTypes.object.isRequired\n}\nfunction convertDate(date){\n    return  Moment(date).format('DD/MM/YYYY hh:mm A')\n    }\nconst mapStateToProps = (state) => {\n    return {\n        isFetching: state.chatDialog.isFetching,\n        comments: state.chatDialog.data,\n        error: state.chatDialog.error,\n        auth: state.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        loadChatDialogExams: (file_id) => dispatch(loadChatDialogRequest(file_id))\n    }\n} \nexport default connect(mapStateToProps, mapDispatchToProps)(ChatDialog)","import React, { Component } from 'react';\nimport { loadExamsRequest } from '../actions/actions'\nimport { connect } from 'react-redux'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Card from '@material-ui/core/Grid'\nimport CardContent from '@material-ui/core/Grid'\nimport MaterialTable from 'material-table'\nimport Moment from 'moment'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport axios from 'axios'\nimport Grow from '@material-ui/core/Grow'\nimport Badge from '@material-ui/core/Badge'\nimport MailIcon from '@material-ui/icons/Mail'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport dotenv from 'dotenv'\nimport ChatDialog from './ChatDialog'\n\ndotenv.config()\n\nclass Exams extends Component {\n    \n    constructor(props){\n        super(props)\n        this.state = {\n            currentDialog: null\n        }\n        this.removeDialog = this.removeDialog.bind(this)\n        this.updateFile = this.updateFile.bind(this)\n    }\n    updateFile(fileUpdated){\n        console.log('updateFile', JSON.stringify(fileUpdated))\n        for(var i=0;i<this.props.exams.length;i++){\n            if(this.props.exams[i]._id === fileUpdated._id){\n                this.props.exams[i] = fileUpdated\n                console.log('coinciden! intento cambiar! despues del cambio...', this.props.exams[i])\n            }\n        }\n        this.setState({})\n    }\n    componentDidMount(){\n        this.props.loadExams()\n    }\n    removeDialog(){\n        this.setState({\n            currentDialog: null\n        })\n    }\n    render() {\n        return (\n            <div style={{marginTop:80, marginLeft:80, width:'100%', height:'100%'}}>\n            {this.props.isFetching && (\n                            <Grid\n                            container\n                            spacing={0}\n                            direction=\"column\"\n                            alignItems=\"center\"\n                            justify=\"center\"\n                            style={{flex:1, marginTop:150,justifyContent: 'center', alignContent: 'center', alignItems: 'center'}}\n                          >\n                                <CircularProgress />\n                            </Grid>\n                        )}\n               {!this.props.isFetching && (\n               <Grow\n                in={!this.props.isFetching}\n                style={{ transformOrigin: '0 0 0' }}\n                {...(!this.props.isFetching ? { timeout: 1000 } : {})}\n                >\n                    <Grid\n                            container\n                            spacing={0}\n                            direction=\"column\"\n                            alignItems=\"center\"\n                            justify=\"center\"\n                            style={{ minHeight: '100vh',  }}\n                        >\n                        \n                            <Grid item xs={12}>\n                            <MaterialTable\n                                title=\"Exames\"\n                                columns={columns}\n                                data={this.props.exams}\n                                actions={[\n                                    {\n                                    icon: 'remove_red_eye',\n                                    tooltip: 'Visualizar Arquivo',\n                                    onClick: (event, rowData) => {\n                                    axios(process.env.REACT_APP_API_HOST + '/api/files/' + rowData._id, {\n                                            method: 'GET',\n                                            responseType: 'blob' //Force to receive data in a Blob Format\n                                        })\n                                        .then(response => {\n                                            \n                                            const file = new Blob(\n                                            [response.data], \n                                            {type: 'application/pdf'});\n                                            const fileURL = URL.createObjectURL(file);\n                                            var anchor = document.createElement(\"a\");\n                                            if(rowData.displayName && rowData.displayName.split('.').length < 2){\n                                                anchor.download = rowData.displayName + '.' + rowData.type;\n                                            }else{\n                                                anchor.download = rowData.displayName\n                                            }\n                                            anchor.href = fileURL;\n                                            anchor.click()\n                                        //    window.open(fileURL);\n                                        })\n                                        .catch(error => {\n                                            console.log(error);\n                                        });\n                                    }\n                                    },\n                                    rowData => ({\n                                        icon: rowData.commentsEnabled ?  (rowData.customerNoReadCommentsCount === 0 || !rowData.customerNoReadCommentsCount ? badgeEmailNoMessages : (rowData.customerNoReadCommentsCount === 1 ? badgeEmail1Messages : (rowData.customerNoReadCommentsCount === 2 ? badgeEmail2Messages : (rowData.customerNoReadCommentsCount === 3 ? badgeEmail3Messages : badgeEmailMoreThan3Messages)))) : '',\n                                        tooltip: rowData.commentsEnabled ? 'Mensagens' : '',\n                                        onClick: (event, rowData) => {\n                                            this.setState({\n                                                currentDialog: <ChatDialog updateFile={this.updateFile} file={rowData} removeDialog={this.removeDialog}/>\n                                            })\n                                        },\n                                        disabled: !rowData.commentsEnabled ,\n                                        \n                                      })\n                                ]}\n                                \n                                options={{\n                                    actionsColumnIndex: -1,\n                                    exportButton: false,\n                                    exportFileName: 'Lista de Exames',\n                                    rowStyle: rowData => {\n                                        if(rowData.read) {\n                                          return {backgroundColor: '#EEE'};\n                                        }else{\n                                           return { backgroundColor: 'white' }\n                                        }\n                                      },\n                                      \n                                }}\n                                localization={{\n                                    header: {\n                                        actions: 'Ações'\n                                    },\n                                    body: {\n                                    emptyDataSourceMessage: 'Sem dados para mostrar',\n                                    editRow: {\n                                        deleteText: 'Tem certeza que quer deletar o exame?'\n                                    }\n                                    },\n                                    toolbar: {\n                                    searchTooltip: 'Procurar',\n                                    searchPlaceholder: 'Procurar',\n                                    exportTitle: 'Exportar CSV',\n                                    exportAriaLabel: 'Exportar CSV',\n                                    exportName: 'Exportar CSV'\n\n                                    },\n                                    pagination: {\n                                    labelRowsSelect: 'Filas',\n                                    labelDisplayedRows: '{count} de {from}-{to} ',\n                                    firstTooltip: 'Primeira',\n                                    previousTooltip: 'Anterior',\n                                    nextTooltip: 'Seguinte',\n                                    lastTooltip: 'Última Página'\n                                    }\n                                }}\n                                />\n                            </Grid>\n                    </Grid>\n                    \n             </Grow>\n             )}\n             <div>\n                        {this.state.currentDialog}\n                    </div>\n            </div>\n        );\n    }\n}\nconst badgeEmailNoMessages = () => \n (\n    <Badge  color=\"primary\">\n          <MailIcon />\n        </Badge>\n  )\n  const badgeEmail1Messages = () => (\n    <Badge  badgeContent={1} color=\"primary\">\n          <MailIcon />\n        </Badge>\n  )\n  const badgeEmail2Messages = () => (\n    <Badge  badgeContent={2} color=\"primary\">\n          <MailIcon />\n        </Badge>\n  )\n  const badgeEmail3Messages = () => (\n    <Badge  badgeContent={3} color=\"primary\">\n          <MailIcon />\n        </Badge>\n  )\n  const badgeEmailMoreThan3Messages = () => (\n    <Badge  badgeContent=\"+3\" color=\"primary\">\n          <MailIcon />\n        </Badge>\n  )\nfunction convertDateMin(date){\n    return  Moment(date).format('DD/MM/YY')\n }\n function convertDateMax(date){\n    return  Moment(date).format('DD/MM/YYYY hh:mm A')\n }\nconst columns = [\n{ title: 'Nome', field: 'displayName' },\n{ title: 'Tipo', field: 'type' },\n{ title: 'Lido', field: 'read', type: 'boolean' },\n{ title: 'Data subida', \n  field: 'lastActivity',\n  type: 'datetime', \n  render: rowData => <Tooltip title={convertDateMax(rowData.lastActivity)}><div> {convertDateMax(rowData.lastActivity) }</div></Tooltip> },\n]\nconst mapStateToProps = (state) => {\n    return {\n        isFetching: state.exams.isFetching,\n        exams: state.exams.data,\n        error: state.exams.error\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        loadExams: () => dispatch(loadExamsRequest())\n    }\n} \n\nexport default connect(mapStateToProps, mapDispatchToProps)(Exams)","import React, { Component } from 'react';\nimport { loadAdminExamsRequest } from '../actions/actions'\nimport { connect } from 'react-redux'\nimport ChatDialog from './ChatDialog'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Card from '@material-ui/core/Grid'\nimport CardContent from '@material-ui/core/Grid'\nimport MaterialTable from 'material-table'\nimport Moment from 'moment'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport axios from 'axios'\nimport Grow from '@material-ui/core/Grow'\nimport Button from '@material-ui/core/Button'\nimport Badge from '@material-ui/core/Badge'\nimport MailIcon from '@material-ui/icons/Mail'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport dotenv from 'dotenv'\ndotenv.config()\n\nclass AdminExams extends Component {\n    \n    constructor(props){\n        super(props)\n        this.state= {\n\n        }\n        this.removeDialog = this.removeDialog.bind(this)\n        this.updateFile = this.updateFile.bind(this)\n    }\n    updateFile(fileUpdated){\n        console.log('updateFile', JSON.stringify(fileUpdated))\n        for(var i=0;i<this.props.adminExams.length;i++){\n            if(this.props.adminExams[i]._id === fileUpdated._id){\n                this.props.adminExams[i] = fileUpdated\n                console.log('coinciden! intento cambiar! despues del cambio...', this.props.adminExams[i])\n            }\n        }\n        this.setState({})\n    }\n    componentDidMount(){\n        this.props.loadAdminExams()\n    }\n    removeDialog(){\n        this.setState({\n            currentDialog: null\n        })\n    }\n    render() {\n        return (\n            <div style={{marginLeft:20, width:'100%', height:'100%'}}>\n            {this.props.isFetching && (\n                            <Grid\n                            container\n                            spacing={0}\n                            direction=\"column\"\n                            alignItems=\"center\"\n                            justify=\"center\"\n                            style={{flex:1, marginTop:150,justifyContent: 'center', alignContent: 'center', alignItems: 'center'}}\n                          >\n                                <CircularProgress />\n                            </Grid>\n                        )}\n               {!this.props.isFetching && (\n               <Grow\n                in={!this.props.isFetching}\n                style={{ transformOrigin: '0 0 0' }}\n                {...(!this.props.isFetching ? { timeout: 1000 } : {})}\n                >\n               <Grid\n                    container\n                    spacing={0}\n                    direction=\"column\"\n                    alignItems=\"center\"\n                    justify=\"center\"\n                    style={{ minHeight: '120vh', marginLeft: 65 }}\n                >\n                \n                    <Grid item xs={12}>\n                    <MaterialTable\n                        title=\"Exames\"\n                        columns={columns}\n                        data={this.props.adminExams}\n                        actions={[\n                            {\n                              icon: 'remove_red_eye',\n                              tooltip: 'Visualizar Arquivo',\n                              onClick: (event, rowData) => {\n                               axios(process.env.REACT_APP_API_HOST + '/api/files/' + rowData._id, {\n                                    method: 'GET',\n                                    responseType: 'blob' //Force to receive data in a Blob Format\n                                })\n                                .then(response => {\n                                    const file = new Blob(\n                                      [response.data], \n                                      {type: 'application/pdf'})\n                                      \n                                const fileURL = URL.createObjectURL(file)\n                                var anchor = document.createElement(\"a\");\n                                if(rowData.displayName && rowData.displayName.split('.').length < 2){\n                                    anchor.download = rowData.displayName + '.' + rowData.type;\n                                }else{\n                                    anchor.download = rowData.displayName\n                                }\n                                anchor.href = fileURL;\n                                anchor.click()\n                                //    window.open(fileURL);\n                                })\n                                .catch(error => {\n                                    console.log(error);\n                                });\n                              }\n                            },\n                            rowData => ({\n                                icon: rowData.commentsEnabled ?  (rowData.adminNoReadCommentsCount === 0 || !rowData.adminNoReadCommentsCount ? badgeEmailNoMessages : (rowData.adminNoReadCommentsCount === 1 ? badgeEmail1Messages : (rowData.adminNoReadCommentsCount === 2 ? badgeEmail2Messages : (rowData.adminNoReadCommentsCount === 3 ? badgeEmail3Messages : badgeEmailMoreThan3Messages)))) : '',\n                                tooltip: rowData.commentsEnabled ? 'Mensagens' : '',\n                                onClick: (event, rowData) => {\n                                    this.setState({\n                                        currentDialog: <ChatDialog updateFile={this.updateFile} file={rowData} removeDialog={this.removeDialog}/>\n                                    })\n                                },\n                                disabled: !rowData.commentsEnabled ,\n                                \n                              })\n                          ]}\n                          components={[\n                                  {\n                                    Action: props => (\n                                    <Button\n                                        onClick={(event) => props.action.onClick(event, props.data)}\n                                        color=\"primary\"\n                                        variant=\"contained\"\n                                        style={{textTransform: 'none'}}\n                                        size=\"small\"\n                                    >\n                                        Olhar\n                                    </Button>\n                                    ),\n                                },\n                                {\n                                    Action: props => (\n                                    <Button\n                                        onClick={(event) => props.action.onClick(event, props.data)}\n                                        color=\"primary\"\n                                        variant=\"contained\"\n                                        style={{textTransform: 'none'}}\n                                        size=\"small\"\n                                    >\n                                        Deletar\n                                    </Button>\n                                    ),\n                                }\n                        ]}\n                        editable={{\n                            onRowUpdate: (newData, oldData) =>\n                                new Promise((resolve, reject) => {\n                                        console.log('newData', newData)\n                                        \n                                        axios.patch(process.env.REACT_APP_API_HOST + '/api/files/' + oldData._id, newData)\n                                        .then(res => {\n                                            this.props.loadAdminExams()\n                                            resolve()\n                                        })\n                                       .catch(err => {\n                                            reject()\n                                       })\n                                      \n                                    }),\n                            onRowDelete: oldData =>\n                                new Promise((resolve, reject) => {\n                                    axios.delete(process.env.REACT_APP_API_HOST + '/api/files/' + oldData._id)\n                                        .then(res => {\n                                            this.props.loadAdminExams()\n                                            resolve(res)\n                                        })\n                                        .catch(err => {\n                                            reject(err)\n                                        })\n                                })\n                        }}\n                        options={{\n                            actionsColumnIndex: -1,\n                            exportButton: true,\n                            exportFileName: 'Lista de Exames',\n                            exportAllData: true\n                          }}\n                          localization={{\n                            header: {\n                                actions: 'Ações'\n                            },\n                            body: {\n                              emptyDataSourceMessage: 'Sem dados para mostrar',\n                              editRow: {\n                                deleteText: 'Tem certeza que quer deletar o exame?'\n                              }\n                            },\n                            toolbar: {\n                              searchTooltip: 'Procurar',\n                              searchPlaceholder: 'Procurar',\n                              exportTitle: 'Exportar CSV',\n                              exportAriaLabel: 'Exportar CSV',\n                              exportName: 'Exportar CSV'\n\n                            },\n                            pagination: {\n                              labelRowsSelect: 'Filas',\n                              labelDisplayedRows: '{count} de {from}-{to} ',\n                              firstTooltip: 'Primeira',\n                              previousTooltip: 'Anterior',\n                              nextTooltip: 'Seguinte',\n                              lastTooltip: 'Última Página'\n                            }\n                          }}\n                        />\n                    </Grid>\n             </Grid>\n             </Grow>\n             )}\n             <div>\n                {this.state.currentDialog}\n            </div>\n            </div>\n        );\n    }\n}\nconst badgeEmailNoMessages = () => \n (\n    <Badge  color=\"primary\">\n          <MailIcon />\n        </Badge>\n  )\n  const badgeEmail1Messages = () => (\n    <Badge  badgeContent={1} color=\"primary\">\n          <MailIcon />\n        </Badge>\n  )\n  const badgeEmail2Messages = () => (\n    <Badge  badgeContent={2} color=\"primary\">\n          <MailIcon />\n        </Badge>\n  )\n  const badgeEmail3Messages = () => (\n    <Badge  badgeContent={3} color=\"primary\">\n          <MailIcon />\n        </Badge>\n  )\n  const badgeEmailMoreThan3Messages = () => (\n    <Badge  badgeContent=\"+3\" color=\"primary\">\n          <MailIcon />\n        </Badge>\n  )\nfunction convertDateMin(date){\n    if(date != null){\n        return  Moment(date).format('DD/MM/YY')\n    }else{\n        return '-'\n    }\n }\n function convertDateMax(date){\n    if(date != null){\n        return  Moment(date).format('DD/MM/YYYY hh:mm A')\n    }else{\n        return '-'\n    }\n }\nconst columns = [\n{ title: 'Nome', field: 'displayName' },\n{ title: 'Subido', \n  field: 'lastActivity',\n  type: 'datetime', \n  render: rowData => <Tooltip title={convertDateMax(rowData.lastActivity)}><div> {convertDateMin(rowData.lastActivity) }</div></Tooltip> },\n{ title: 'Usuário', field: 'user.completename' },\n//{ title: 'Tipo', field: 'type' },\n{ title: 'Lido', field: 'read', type: 'boolean' },\n\n{ title: 'Arquivo lido', \n  field: 'lastRead',\n  type: 'datetime', \n  render: rowData => <Tooltip title={convertDateMax(rowData.lastRead)}><div> {convertDateMin(rowData.lastRead) }</div></Tooltip> },\n  { title: 'Mensagens', field: 'commentsEnabled', type: 'boolean' },\n  { title: 'Msgs Não lidas', field: 'adminNoReadCommentsCount'},\n\n]\nconst mapStateToProps = (state) => {\n    return {\n        isFetching: state.adminExams.isFetching,\n        adminExams: state.adminExams.data,\n        error: state.adminExams.error\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        loadAdminExams: () => dispatch(loadAdminExamsRequest())\n    }\n} \n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminExams)","import React, { Component } from \"react\";\nimport CloudUpload from '@material-ui/icons/CloudUpload'\n\nclass Dropzone extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { hightlight: false };\n    this.fileInputRef = React.createRef();\n\n    this.openFileDialog = this.openFileDialog.bind(this);\n    this.onFilesAdded = this.onFilesAdded.bind(this);\n    this.onDragOver = this.onDragOver.bind(this);\n    this.onDragLeave = this.onDragLeave.bind(this);\n    this.onDrop = this.onDrop.bind(this);\n  }\n\n  openFileDialog() {\n    if (this.props.disabled) return;\n    this.fileInputRef.current.click();\n  }\n\n  onFilesAdded(evt) {\n    if (this.props.disabled) return;\n    const files = evt.target.files;\n    if (this.props.onFilesAdded) {\n      const array = this.fileListToArray(files);\n      this.props.onFilesAdded(array);\n    }\n  }\n\n  onDragOver(event) {\n    event.preventDefault();\n    if (this.props.disabed) return;\n    this.setState({ hightlight: true });\n  }\n\n  onDragLeave(event) {\n    this.setState({ hightlight: false });\n  }\n\n  onDrop(event) {\n    event.preventDefault();\n    if (this.props.disabed) return;\n    const files = event.dataTransfer.files;\n    if (this.props.onFilesAdded) {\n      const array = this.fileListToArray(files);\n      this.props.onFilesAdded(array);\n    }\n    this.setState({ hightlight: false });\n  }\n\n  fileListToArray(list) {\n    const array = [];\n    for (var i = 0; i < list.length; i++) {\n      array.push(list.item(i));\n    }\n    return array;\n  }\n\n  render() {\n    return (\n      <div \n        style={{height: 200,width: 200, backgroundColor: '#fff', border: '2px dashed rgb(187, 186, 186)', borderRadius: '50%', display: 'flex', alignItems: 'center', justifyContent: 'center',flexDirection: 'column', fontSize: 16,  backgroundColor: this.state.hightlight ? 'rgb(157, 216, 255)' : '' , cursor: this.props.disabled ? \"default\" : \"pointer\"}}\n        onDragOver={this.onDragOver}\n        onDragLeave={this.onDragLeave}\n        onDrop={this.onDrop}\n        onClick={this.openFileDialog}\n      >\n        <input\n          ref={this.fileInputRef}\n          style={{display: 'none'}}\n          type=\"file\"\n          accept=\"application/pdf\"\n          onChange={this.onFilesAdded}\n          multiple\n        />\n        <CloudUpload\n          \n        />\n        <span>Upload Exames </span>\n      </div>\n    );\n  }\n}\n\nexport default Dropzone;","import React, { Component } from \"react\";\n\nclass Progress extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <div style ={{width: '87%', height: 8, backgroundColor:'#3863ff', borderRadius: 5,marginRight: 15, marginTop: 5, float: 'right'}}>\n        <div style={{ backgroundColor: '#3d67fd', height: '100%',  margin: 0, borderRadius: 5, width: this.props.progress + \"%\" }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Progress;","import React, { Component } from 'react'\nimport styles from './css/Upload.css'\nimport Dropzone from './Dropzone'\nimport Progress from \"./Progress\";\nimport CheckCircle from '@material-ui/icons/CheckCircle'\nimport Button from '@material-ui/core/Button'\nimport axios from 'axios'\nimport Typography from '@material-ui/core/Typography'\nimport PersonIcon from '@material-ui/icons/Person'\nimport PdfIcon from '@material-ui/icons/PictureAsPdf'\nimport EditIcon from '@material-ui/icons/Edit'\nimport { ListItem, List } from '@material-ui/core';\nimport dotenv from 'dotenv'\ndotenv.config()\n\nclass Upload extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        files: [],\n        uploading: false,\n        uploadProgress: {},\n        successfullUploaded: false\n      };\n  \n      this.onFilesAdded = this.onFilesAdded.bind(this);\n      this.uploadFiles = this.uploadFiles.bind(this);\n      this.sendRequest = this.sendRequest.bind(this);\n      this.renderActions = this.renderActions.bind(this);\n      this.sendRequest = this.sendRequest.bind(this)\n    }\n    componentDidMount(){\n      console.log(this.props)\n      console.log(JSON.stringify(styles))\n    }\n    onFilesAdded(files) {\n      this.setState(prevState => ({\n        files: prevState.files.concat(files)\n      }));\n    }\n  \n    async uploadFiles() {\n      this.setState({ uploadProgress: {}, uploading: true });\n      const promises = [];\n      this.state.files.forEach(file => {\n        promises.push(this.sendRequest(file));\n      });\n      try {\n        await Promise.all(promises);\n  \n        this.setState({ successfullUploaded: true, uploading: false });\n      } catch (e) {\n        // Not Production ready! Do some error handling here instead...\n        this.setState({ successfullUploaded: true, uploading: false });\n      }\n    }\n  \n    sendRequest(file) {\n      \n        return new Promise((resolve, reject) => {\n            \n      \n          const data = new FormData()\n          data.append('userId', this.props.data.userId)\n          data.append('displayName', this.props.data.displayName)\n          data.append('commentsEnabled', this.props.data.commentsEnabled)\n          data.append('adminId', this.props.admin._id)\n          data.append('file', file)\n          data.append('files', this.state.files)\n          data.append('size', file.size)\n        console.log('fileee', JSON.stringify(file))\n          for (var key of data.entries()) {\n            console.log(key[0] + ', ' + key[1]);\n        }\n          const ttthis = this\n          axios({\n              method: 'post',\n              url: process.env.REACT_APP_API_HOST + '/api/files',\n              data: data,\n              config: { headers: {'Content-Type': 'multipart/form-data' }},\n              onUploadProgress: ProgressEvent => {\n                    if(ProgressEvent.loaded === ProgressEvent.total*100){\n                      const copy = { ...this.state.uploadProgress };\n                      copy[file.name] = { state: \"done\", percentage: 100 };\n                      this.setState({ uploadProgress: copy })\n                    }else{\n                      const copy = { ...this.state.uploadProgress };\n                      copy[file.name] = {\n                        state: \"pending\",\n                        percentage: (ProgressEvent.loaded / ProgressEvent.total) * 100\n                      };\n                      this.setState({ uploadProgress: copy });\n                    }\n                }\n              })\n              .then(function (response) {\n                  const copy = { ...ttthis.state.uploadProgress };\n                  copy[file.name] = { state: \"done\", percentage: 100 };\n                  ttthis.setState({ uploadProgress: copy })\n                  ttthis.props.triggerUploadedFinished()\n                  console.log(response);\n              })\n              .catch(function (response) {\n                  //handle error\n                  console.log(JSON.stringify(response.response))\n              });\n  \n  \n        });\n      \n\n\n    }\n  \n    renderProgress(file) {\n      const uploadProgress = this.state.uploadProgress[file.name];\n      console.log('renderProgress', uploadProgress)\n      if (this.state.uploading || this.state.successfullUploaded) {\n        return (\n          <div className={styles.ProgressWrapper}>\n            <Progress progress={uploadProgress ? uploadProgress.percentage : 0} style={{float: 'right'}}/>\n            <CheckCircle\n              \n              style={{\n                opacity: uploadProgress && uploadProgress.state === \"done\" ? 0.5 : 0,\n                float: 'left',\n                marginLeft: 10\n\n              }}\n            />\n          </div>\n        );\n      }\n    }\n  \n    renderActions() {\n      if (this.state.successfullUploaded) {\n        return (\n          <Button\n            onClick={() =>\n              this.setState({ files: [], successfullUploaded: false })\n            }\n          >\n            Limpar\n          </Button>\n        );\n      } else {\n        return (\n          <Button\n            disabled={this.state.files.length < 0 || this.state.uploading}\n            onClick={this.uploadFiles}\n          >\n            Fazer Upload\n          </Button>\n        );\n      }\n    }\n  \n    render() {\n      return (\n        <div className={styles.Upload} style={{padding: 20}}>\n          <div style={{display: 'flex', flexDirection: 'row', paddingTop: '16px', boxSizing: 'border-box', width: '100%'}}>\n            <div>\n              <Dropzone\n                onFilesAdded={this.onFilesAdded}\n                disabled={this.state.uploading || this.state.successfullUploaded}\n              />\n            </div>\n            <div style={{marginLeft: 32, alignItems: 'flex-start', justifyItems: 'flex-start', flex: 1,overflowY: 'auto'}}>\n              <List>\n                    <ListItem >\n                    <PersonIcon style={{float: 'left', color: '#2a2a2a', marginRight: 5}}/>\n                    <Typography \n                        variant=\"subtitle1\" style={{float: 'left', color: '#2a2a2a'}}>\n                        Arquivo para: {this.props.data.user.completename}\n                    </Typography>\n                      </ListItem>\n                    <ListItem >\n                    <EditIcon style={{float: 'left', color: '#2a2a2a', marginRight: 5}}/>\n                    <Typography \n                        variant=\"subtitle1\" style={{float: 'left', color: '#2a2a2a'}}>\n                        Nome do Arquivo: {this.props.data.displayName.length > 0 ? this.props.data.displayName : 'Manter nome original do Arquivo'} \n                    </Typography>\n                      </ListItem>\n                  </List>\n              {this.state.files.map(file => {\n                return (\n                  <div key={file.name} className={styles.Row}>\n                  \n                    <ListItem >\n                    <PdfIcon style={{float: 'left', color: '#2a2a2a', marginRight: 5}}/>\n                    <Typography \n                        variant=\"subtitle1\" style={{float: 'left', color: '#2a2a2a'}}>\n                        {file.name}\n                    </Typography>\n                      </ListItem>\n                   \n                    < br/>\n                    {this.renderProgress(file)}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n          <div style={{display: 'flex', flex: 1, width: '100%', alignItems: 'flex-end' , flexDirection: 'column', marginTop: 32}}>\n            {this.renderActions()}</div>\n        </div>\n      );\n    }\n  }\n  \n  export default Upload;","import React, { Component } from 'react';\nimport Upload from './Upload'\nimport Card from '@material-ui/core/Card'\nimport Grid from '@material-ui/core/Grid'\nimport \"./css/AdminExams.css\"\nimport Button from '@material-ui/core/Button'\nimport FormControl  from '@material-ui/core/FormControl'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Select from  '@material-ui/core/Select'\nimport CircularProgress from  '@material-ui/core/CircularProgress'\nimport MenuItem from  '@material-ui/core/MenuItem'\nimport { connect } from 'react-redux'\nimport { loadUsersRequest } from '../actions/actions'\nimport TextField from '@material-ui/core/TextField'\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Typography from '@material-ui/core/Typography'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport axios from 'axios'\nimport dotenv from 'dotenv'\nimport PropTypes from 'prop-types'\ndotenv.config()\n\nclass AddAdminExams extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            user: false,\n            displayName : '',\n            userId: 0,\n            commentsEnabled: false,\n            activeStep: 0,\n            skipped: new Set(),\n            steps : this.getSteps(),\n            showStepper: true,\n            userFilter: '',\n            filteredUsers: [],\n            firstTimeUpdated: false\n        }\n        \n        this.handleSelectedUser = this.handleSelectedUser.bind(this)\n        this.handleNext = this.handleNext.bind(this)\n        this.handleBack = this.handleBack.bind(this)\n        this.handleSkip = this.handleSkip.bind(this)\n        this.handleReset = this.handleReset.bind(this)\n        this.getStepContent = this.getStepContent.bind(this)\n        this.handledisplayName = this.handledisplayName.bind(this)\n        this.triggerUploadedFinished = this.triggerUploadedFinished.bind(this)\n        this.handleSelectedCommentsEnabled = this.handleSelectedCommentsEnabled.bind(this)\n        this.handleUserFilterChange = this.handleUserFilterChange.bind(this)\n    }\n    componentDidMount(){\n        this.props.loadUsers()\n    }\n    handledisplayName(e){\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    componentDidUpdate(){\n        if(!this.state.firstTimeUpdated){\n            if(this.props.users && this.props.users.length > 0){\n                this.setState({\n                    firstTimeUpdated: true,\n                    filteredUsers: this.props.users\n                })\n            }\n        }\n    }\n    handleSelectedUser(e){\n        if(e && e.target.value != 0){\n            var userOk = ''\n            this.props.users.map((user, index)=>{\n                if(user._id === e.target.value) userOk = user\n            })\n            this.setState({\n                userId: e.target.value,\n                user: userOk\n            })\n        }else{\n            this.setState({\n                userNameSelected: false,\n                userId: 0\n            })\n        }\n        \n    }\n    handleSelectedCommentsEnabled(e){\n        this.setState({\n            commentsEnabled: e.target.value\n        })\n    }\n    getSteps() {\n        return ['Seleciona Usuário', 'Nome para o arquivo', 'Upload arquivo'];\n      }\n    getStepContent(step) {\n        switch (step) {\n            case 0:\n            return this.renderSelectUser();\n            case 1:\n            return this.renderdisplayName();\n            case 2:\n            return this.renderUploadFile();\n            default:\n            return 'Passo desconhecido, reiniciar pagina';\n        }\n    }\n    handleUserFilterChange(e){\n        var tempUsers = []\n        this.props.users.forEach((user)=> {\n            if(user.completename.toLowerCase().includes(e.target.value.toLowerCase())){\n                tempUsers.push(user)\n            }\n        })\n        this.setState({\n            filteredUsers: tempUsers,\n            userFilter: e.target.value\n        })\n    }\n    renderSelectUser(){\n        return (\n            <Card style={{minHeight: 300}}\n            alignitems=\"center\"\n                        justify=\"center\">\n                         {this.props.isFetchingUsers && (\n                     <Grid\n                        container\n                        spacing={0}\n                        direction=\"column\"\n                        alignItems=\"center\"\n                        justify=\"center\"\n                        style={{marginTop: 30}}\n                    >\n                            <CircularProgress />\n                        </Grid>\n            )}\n            { !this.props.isFetchingUsers && (\n                <div>\n                <FormControl style={{marginLeft: 50, marginTop:10}}>\n                        <TextField\n                        label=\"Filtrar Usuário\"\n                        type=\"text\"\n                        id=\"userFilter\"\n                        value={ this.state.userFilter }\n                        name=\"userFilter\"\n                        onChange={this.handleUserFilterChange}\n                        aria-describedby=\"userFilter-text\"\n                        />\n                </FormControl>\n            <FormControl fullWidth={true} style={{paddingLeft: 50, paddingRight:50, paddingTop:10, paddingBottom:10}}>\n                    <Select\n                    native\n                    variant=\"outlined\"\n                    value={this.state.userId}\n                    onChange={this.handleSelectedUser}\n                    >\n                    <option value={0} > Escolher Usuário </option>\n                        {this.state.filteredUsers.map( (user, index) => {\n                            return (\n                                <option key={user._id} value={user._id}>{user.completename} \n                                </option>\n                            )\n                        })}\n                    </Select>\n                    {this.state.errors && (<FormHelperText id=\"username-text\" style={{color: 'red'}}>{this.state.errors}</FormHelperText>)}\n                </FormControl>\n                </div>\n                )} \n            </Card>\n        )\n    }\n    renderdisplayName(){\n        return (\n            <Card style={{minHeight: 300}}>\n                <FormControl fullWidth={true} style={{padding: 50}}>\n                        <TextField\n                            label=\"Nome para o Arquivo\"\n                            placeholder=\"Nome para o Arquivo\"\n                            helpertext=\"Se quiser manter o nome do arquivo original, pode clicar em Pular\"\n                            margin=\"normal\"\n                            name=\"displayName\"\n                            variant=\"outlined\"\n                            onChange={this.handledisplayName}\n                        />\n                        {this.state.errors && (<FormHelperText id=\"username-text\" style={{color: 'red'}}>{this.state.errors}</FormHelperText>)}\n                </FormControl>\n                <FormControl  style={{padding: 50}}>\n                    <InputLabel  style={{marginLeft:50, minWidth: 150}}>Habilitar Bate Papo</InputLabel>\n                    <Select\n                    style={{marginTop: -27, minWidth: 150}}\n                    value={this.state.commentsEnabled}\n                    onChange={this.handleSelectedCommentsEnabled}\n                    >\n                        <MenuItem value={false} >Não</MenuItem>\n                        <MenuItem value={true} >Sim</MenuItem>\n                        \n                    </Select>\n                </FormControl>\n            </Card>\n        )\n    }\n    renderUploadFile(){\n        return (\n            <Card >\n                <Upload data={this.state} triggerUploadedFinished={this.triggerUploadedFinished} admin={this.props.auth.user}/>\n            </Card>\n        )\n    }\n    isStepOptional(step) {\n        return step === 1;\n    }\n    isStepSkipped(step) {\n        return this.state.skipped.has(step);\n    }\n    handleNext() {\n        let newSkipped = this.state.skipped;\n        if (this.isStepSkipped(this.state.activeStep)) {\n            newSkipped = new Set(newSkipped.values());\n            newSkipped.delete(this.state.activeStep);\n        }\n        \n        if(this.state.activeStep === 0 && this.state.userId === 0){\n            this.setState({\n                errors: 'Por favor, escolha um usuário da lista'    \n            })\n        }\n        else if(this.state.activeStep === 1 && this.state.displayName.length === 0){\n            this.setState({\n                errors: 'Por favor, se quiser manter o nome original clique em Pular'    \n            })\n        }else if(this.state.activeStep === 1 && this.state.displayName.length > 0){\n            axios.get(process.env.REACT_APP_API_HOST + '/api/files/' + this.state.displayName + '/user/' + this.state.userId)\n                .then(res => {\n                    this.setState({\n                        activeStep: this.state.activeStep + 1,\n                        errors: false,\n                        newSkipped\n                    })\n                })\n                .catch(err => {\n                    \n                    this.setState({\n                        errors: err.response.data.err\n                    })\n                })\n        }\n        else{\n            this.setState({\n                activeStep: this.state.activeStep + 1,\n                errors: false,\n                newSkipped\n            })\n        }\n        \n    }\n    handleBack() {\n        this.setState({\n            activeStep: this.state.activeStep - 1\n        })\n    }\n    handleSkip() {\n        if (!this.isStepOptional(this.state.activeStep)) {\n          // You probably want to guard against something like this,\n          // it should never occur unless someone's actively trying to break something.\n          throw new Error(\"Não pode pular este passo porque não é opcional.\");\n        }\n    \n        this.setState({\n            activeStep: this.state.activeStep + 1,\n            displayName: ''\n        })\n    \n        const newSkipped = new Set( this.state.skipped.values());\n        newSkipped.add(this.state.activeStep)\n        this.setState({\n            skipped: newSkipped\n        })\n\n      }\n      handleReset() {\n        this.setState({\n            activeStep: 0\n        })\n      }\n      triggerUploadedFinished(){\n          this.setState({\n              uploadFinished : true\n          })\n      }\n    render() {\n        return (\n            <div style={{width: '80%',margin: 40, marginTop:120, marginLeft:80}}>\n                { this.state.showStepper && \n                ( \n                    <div>\n                    <Stepper activeStep={this.state.activeStep}>\n                        {this.state.steps.map((label, index) => {\n                        const stepProps = {};\n                        const labelProps = {};\n                        if (this.isStepOptional(index)) {\n                            labelProps.optional = <Typography variant=\"caption\" component=\"span\">Opcional</Typography>;\n                        }\n                        if (this.isStepSkipped(index)) {\n                            stepProps.completed = false;\n                        }\n                        return (\n                            <Step key={label} {...stepProps}>\n                            <StepLabel {...labelProps}>{label}</StepLabel>\n                            </Step>\n                        );\n                        })}\n                    </Stepper>\n                    <div>\n                        {this.state.activeStep === this.state.steps.length ? (\n                        <div>\n                            <Typography style={{marginTop: 3, marginBottom: 3,}}  component=\"span\">\n                            Upload realizado com sucesso!\n                            </Typography>\n                            <Button onClick={this.handleReset} style={{marginRight: 3}}  component=\"span\">\n                            Adicionar mais\n                            </Button>\n                        </div>\n                        ) : (\n                        <div>\n                            <Typography  component=\"span\" style={{marginTop: 3, marginBottom: 3,}}>{this.getStepContent(this.state.activeStep)}</Typography>\n                            <div>\n                            <Button disabled={this.state.activeStep === 0} onClick={this.handleBack} style={{marginRight: 3}}>\n                                Voltar\n                            </Button>\n                            {this.isStepOptional(this.state.activeStep) && (\n                                <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={this.handleSkip}\n                                style={{marginRight: 3}}\n                                >\n                                Pular\n                                </Button>\n                            )}\n\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={this.handleNext}\n                                style={{marginRight: 3}}\n                                disabled={this.state.activeStep === this.state.steps.length - 1 && !this.state.uploadFinished}\n                            >\n                                {this.state.activeStep === this.state.steps.length - 1 ? 'Finalizar' : 'Seguinte'}\n                            </Button>\n                            </div>\n                        </div>\n                    )}\n                </div>\n                </div>\n          )}\n            </div>\n        );\n    }\n}\nAddAdminExams.propTypes = {\n    auth: PropTypes.object.isRequired\n}\nconst mapStateToProps = (state) => {\n    return {\n        isFetchingUsers: state.users.isFetching,\n        users: state.users.data,\n        error: state.users.error,\n        auth: state.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        loadUsers: () => dispatch(loadUsersRequest())\n    }\n} \n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddAdminExams)","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText'\nimport GroupIcon from '@material-ui/icons/Group'\nimport ContactMailIcon from '@material-ui/icons/ContactMail'\nimport ExistToAppIcon from '@material-ui/icons/ExitToApp'\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf'\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd'\n\nimport Register from './Register'\nimport Users from './Users'\nimport Profile from './Profile'\nimport Exams from './Exams'\nimport AdminExams from './AdminExams'\nimport AddAdminExams from './AddAdminExams'\nimport { Link } from 'react-router-dom';\nimport AddNoteIcon from '@material-ui/icons/NoteAdd'\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default function MiniDrawer(props) {\n \n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  function handleDrawerOpen() {\n    setOpen(true);\n  }\n\n  function handleDrawerClose() {\n    setOpen(false);\n  }\n  function onLogout() {\n    props.logoutUser(props.history)\n  }\n  function showUserType() {\n    if(props.user.admin){\n      return 'Admin: '\n    }else if(props.user.vet){\n      return 'Veterinário: '\n    }else if(props.user.clinic){\n      return 'Clínica: '\n    }else{\n      return 'Usuário: '\n    }\n  }\n  return (\n    <div className={classes.root}>\n    \n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n        style={{padding: 15, }}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <img src='/img/logo_white.png' height={80}/>\n          <div className={classes.sectionDesktop} style={{ position: 'absolute', right: '0', top: 15, marginRight:50}}>\n          {showUserType() + props.user.completename}\n            </div>\n            <div className={classes.sectionDesktop} style={{ fontSize: 10, position: 'absolute', right: '0',top:38, marginRight:50}}>\n            {props.user.username}\n            </div>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n      \n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbar}style={{padding: 30, }}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        {props.user.admin && ( \n            <div>\n                <List>\n                    <ListItem button component={ Link } color=\"inherit\" to=\"/register\" >\n                        <ListItemIcon><PersonAddIcon /></ListItemIcon>\n                        <ListItemText primary='Adicionar Usuário'/>\n                    </ListItem>\n                    <ListItem button component={ Link } color=\"inherit\" to=\"/users\" >\n                        <ListItemIcon><GroupIcon /></ListItemIcon>\n                        <ListItemText primary='Usuários'/>\n                    </ListItem>\n                    \n                </List>\n                <Divider />\n                <List>\n                    <ListItem button component={ Link } color=\"inherit\" to=\"/add_admin_exams\" >\n                        <ListItemIcon><AddNoteIcon /></ListItemIcon>\n                        <ListItemText primary='Adicionar Exame'/>\n                    </ListItem>\n                    <ListItem button component={ Link } color=\"inherit\" to=\"/admin_exams\" >\n                        <ListItemIcon><PictureAsPdfIcon /></ListItemIcon>\n                        <ListItemText primary='Exames'/>\n                    </ListItem>\n                </List>\n                <Divider />\n                <List>\n                    <ListItem button component={ Link } color=\"inherit\" to=\"/profile\" >\n                        <ListItemIcon><ContactMailIcon /></ListItemIcon>\n                        <ListItemText primary='Perfil'/>\n                    </ListItem>\n                </List>\n                <Divider />\n                <List>\n                    <ListItem button  onClick={onLogout} color=\"inherit\"  >\n                        <ListItemIcon><ExistToAppIcon /></ListItemIcon>\n                        <ListItemText primary='Sair'/>\n                    </ListItem>\n                </List>\n            </div>\n        )}\n        {!props.user.admin && ( \n            <div>\n                <List>\n                    <ListItem button component={ Link } color=\"inherit\" to=\"/exams\" >\n                        <ListItemIcon><PictureAsPdfIcon /></ListItemIcon>\n                        <ListItemText primary='Exames'/>\n                    </ListItem>\n                </List>\n                <Divider />\n                <List>\n                    <ListItem button component={ Link } color=\"inherit\" to=\"/profile\" >\n                        <ListItemIcon><ContactMailIcon /></ListItemIcon>\n                        <ListItemText primary='Perfil'/>\n                    </ListItem>\n                </List>\n                <Divider />\n                <List>\n                    <ListItem button color=\"inherit\" onClick={onLogout}  >\n                        <ListItemIcon><ExistToAppIcon /></ListItemIcon>\n                        <ListItemText primary='Sair'/>\n                    </ListItem>\n                </List>\n            </div>\n        )}\n      </Drawer>\n      </div>\n  );\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { logoutUser } from '../actions/authentication';\nimport { withRouter } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Badge from '@material-ui/core/Badge';\nimport MoreIcon from '@material-ui/icons/MoreVert'\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport clsx from 'clsx'\nimport Drawer from './Drawer'\nimport './css/navbar.css'\n\nconst drawerWidth = 240;\n\nconst classes = makeStyles(theme => ({\n    root: {\n        display: \"flex\"\n      },\n      appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen\n        })\n      },\n      appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.enteringScreen\n        })\n      },\n      menuButton: {\n        marginLeft: 12,\n        marginRight: 36\n      },\n      hide: {\n        display: \"none\"\n      },\n      drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: \"nowrap\"\n      },\n      drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create(\"width\", {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.enteringScreen\n        })\n      },\n      drawerClose: {\n        transition: theme.transitions.create(\"width\", {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen\n        }),\n        overflowX: \"hidden\",\n        width: theme.spacing.unit * 7 + 1,\n        [theme.breakpoints.up(\"sm\")]: {\n          width: theme.spacing.unit * 9 + 1\n        }\n      },\n      toolbar: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-end\",\n        padding: \"0 8px\",\n        ...theme.mixins.toolbar\n      },\n      content: {\n        flexGrow: 1,\n        padding: theme.spacing.unit * 3\n      },\n    sectionDesktop: {\n        display: 'none',\n        [theme.breakpoints.up('md')]: {\n          display: 'flex',\n        },\n        float: 'right',\n        position: 'absolute',\n         right: '0'\n      },\n    title: {\n      flexGrow: 1,\n      marginLeft: 300\n    },\n  }))\n  \n\nclass Navbar extends Component {\n\n\n    constructor(props){\n      super(props)\n      this.state = {\n        anchorEl: null,\n        mobileMoreAnchorEl: null,\n        isMenuOpen: false,\n        isMobileMenuOpen: false,\n        menuId: 'primary-search-account-menu'\n      }\n      this.setAnchorEl = this.setAnchorEl.bind(this)\n      this.setMobileMoreAnchorEl = this.setMobileMoreAnchorEl.bind(this)\n      this.handleProfileMenuOpen = this.handleProfileMenuOpen.bind(this)\n      this.handleMobileMenuClose = this.handleMobileMenuClose.bind(this)\n      this.handleMenuClose = this.handleMenuClose.bind(this)\n      this.handleMobileMenuOpen = this.handleMobileMenuOpen.bind(this)\n      this.renderMenu = this.renderMenu.bind(this)\n    }\n    setAnchorEl(anchorEl) {\n      this.setState({\n        anchorEl: anchorEl,\n        isMenuOpen: !this.state.isMenuOpen\n      })\n    }\n    setMobileMoreAnchorEl(mobileMoreAnchorEl) {\n      this.setState({\n        mobileMoreAnchorEl: mobileMoreAnchorEl,\n        isMobileMenuOpen: !this.state.isMobileMenuOpen\n      })\n    }\n\n\n handleProfileMenuOpen = event => {\n    this.setAnchorEl(event.currentTarget);\n  };\n\n  handleMobileMenuClose = () => {\n    console.log('handleMobileMenuClose')\n    this.setMobileMoreAnchorEl(null);\n  };\n\n  handleMenuClose = () => {\n    this.setAnchorEl(null);\n    this.handleMobileMenuClose();\n  };\n\n handleMobileMenuOpen = event => {\n   console.log('handleMobileMenuOpen')\n      this.setState({\n        mobileMoreAnchorEl: event.currentTarget,\n        isMobileMenuOpen: !this.state.isMobileMenuOpen\n      })\n  };\n\n  renderMenu() {\n    return (\n    <Menu\n      anchorEl={this.state.anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={this.state.menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={this.state.isMenuOpen}\n      onClose={this.handleMenuClose}\n    >\n      <MenuItem onClick={this.handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={this.handleMenuClose}>My account</MenuItem>\n    </Menu>\n  )\n  }\n\n  renderMobileMenu(){ \n    console.log('renderMobileMenu')\n    return(\n      <Menu\n      anchorEl={this.state.mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={this.state.mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={this.state.isMobileMenuOpen}\n    >\n      <MenuItem component={ Link } color=\"inherit\" to=\"/#about-us\"> \n          <Button style={{textTransform: 'none', fontSize: 20, color: '#0188FE' }} onClick={()=>{this.setState({isMobileMenuOpen:false})}} >Sobre nós</Button>\n      </MenuItem>\n      <MenuItem  component={ Link } color=\"inherit\" to=\"/#exams\" >  \n          <Button style={{textTransform: 'none', fontSize: 20, color: '#0188FE' }} onClick={()=>{this.setState({isMobileMenuOpen:false})}}>Exames</Button>\n      </MenuItem>\n      <MenuItem  component={ Link } color=\"inherit\" to=\"/#partners\">\n          <Button style={{textTransform: 'none', fontSize: 20, color: '#0188FE' }} onClick={()=>{this.setState({isMobileMenuOpen:false})}}>Parceiros</Button>\n      </MenuItem>\n      <MenuItem component={ Link } color=\"inherit\" to=\"/#contact\" >\n          <Button style={{textTransform: 'none', fontSize: 20, color: '#0188FE' }} onClick={()=>{this.setState({isMobileMenuOpen:false})}} >Contato</Button>\n      </MenuItem>\n    </Menu>\n     )\n  }\n\n\n\n\n    render() {\n       \n        const {isAuthenticated, user} = this.props.auth;   \n        \n        const authLinks = (\n     //       <div className={classes.sectionDesktop} style={{ position: 'absolute', right: '0'}}>\n     //           <Button  onClick={this.onLogout.bind(this)} color=\"inherit\" style={{ marginRight:30}} >Sair</Button>\n     //       </div>\n     ''\n        )\n      const guestLinks = (\n        <div style={{float: 'right', right:0, position: 'relative'}}>\n\n              <Button style={{marginLeft: -40, marginRight: 40, textTransform: 'none', fontSize: 20, color: '#0188FE' }} component={ Link } color=\"inherit\" to=\"/#about-us\" >Sobre nós</Button>\n              <Button style={{marginLeft: 40, marginRight: 40, textTransform: 'none', fontSize: 20, color: '#0188FE' }} component={ Link } color=\"inherit\" to=\"/#exams\" >Exames</Button>\n              <Button style={{marginLeft: 40, marginRight: 40, textTransform: 'none', fontSize: 20, color: '#0188FE' }} component={ Link } color=\"inherit\" to=\"/#partners\" >Parceiros</Button>\n              <Button style={{marginLeft: 40, marginRight: 40, textTransform: 'none', fontSize: 20, color: '#0188FE' }}  component={ Link } color=\"inherit\" to=\"/#contact\" >Contato</Button>\n              \n        </div>\n      )\n      \n        return(\n            <div>\n            <CssBaseline />\n                <AppBar position=\"fixed\" className={clsx(classes.appBar, {\n                        [classes.appBarShift]: false,\n                        })} style={{padding: 15, backgroundColor: 'white'}}>\n                    <Toolbar>\n                     <a href=\"/\" >\n                        <img src='/img/logo_blue.png' height={80}/>\n                    </a>\n                    <div />\n                        <div  />\n                            <div className={\"navbar-desktop\"} style={{\n                                  \n                                  float: 'right',\n                                  position: 'absolute',\n                                  right: '0'\n                                          }}>\n                                {isAuthenticated ? authLinks : guestLinks}\n                            </div>\n                            <div className={\"navbar-mobile\"} style={{\n                              \n                              float: 'right',\n                              position: 'absolute',\n                               right: '0',\n                               color: '#0188FE'\n                            }}>\n                              <IconButton\n                                aria-label=\"Mostrar Mais\"\n                                aria-controls={this.state.mobileMenuId}\n                                aria-haspopup=\"true\"\n                                onClick={this.handleMobileMenuOpen}\n                                color=\"inherit\"\n                              >\n                                <MoreIcon />\n                              </IconButton>\n                            </div>\n                    </Toolbar>\n                </AppBar>\n                {!isAuthenticated && this.renderMobileMenu()}\n                { isAuthenticated ? (\n                    <Drawer logoutUser={this.props.logoutUser} history={this.props.history} user={user}/>\n\n                ) : ''}\n            </div>\n          \n        )\n    }\n}\n\nNavbar.propTypes = {\n    logoutUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth\n})\n\n//ResponsiveDrawer.propTypes = {\n    /**\n     * Injected by the documentation to work in an iframe.\n     * You won't need it on your project.\n     */\n //   container: PropTypes.object,\n // };\nexport default connect(mapStateToProps, { logoutUser })(withRouter(Navbar));","import React, { Component } from 'react'\n\nimport FormControl   from '@material-ui/core/FormControl'\nimport InputLabel   from '@material-ui/core/InputLabel'\nimport Input   from '@material-ui/core/Input'\nimport FormHelperText   from '@material-ui/core/FormHelperText'\nimport Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport axios from  'axios'\nimport dotenv from 'dotenv'\ndotenv.config()\n\nexport default class ForgotPassword extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            username: '',\n            message: false,\n            errors: false,\n            isFetching: false,\n            emailSent: false\n        }\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleInputChange = this.handleInputChange.bind(this)\n    }\n    handleSubmit(e){\n        e.preventDefault()\n        if(this.state.username && this.state.username.length > 4 \n            && this.state.username.indexOf('@') != -1 && this.state.username.indexOf('.') != -1 ){\n                this.setState({\n                    isFetching: true\n                })\n                axios.post(process.env.REACT_APP_API_HOST + '/api/users/forgot', {username: this.state.username })\n                        .then(res => {\n                            this.setState({\n                                message: res.data.msg,\n                                errors: false,\n                                isFetching: false,\n                                emailSent: true\n                            })\n                        })\n                        .catch(err => {\n                            this.setState({\n                                errors: err && err.response && err.response.data ? JSON.stringify(err.response.data.msg) : 'Erro desconhecido, tente mais tarde',\n                                isFetching: false\n                            })\n                        })\n\n        }else{\n            this.setState({\n                errors: 'email invalido',\n                isFetching: false\n            })\n        }\n    }\n    handleInputChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    render() {\n        return (\n                <Grid\n                container\n                spacing={0}\n                direction=\"column\"\n                alignItems=\"center\"\n                justify=\"center\"\n                style={{ minHeight: '100vh' }}\n            >\n            \n                <Grid item xs={6}>\n                        <Card  style={{width: '100%'}}>\n                        <CardContent>\n                        <Typography \n                               color=\"textSecondary\" gutterBottom>\n                            Vets\n                        </Typography>\n                        <Typography \n                                variant=\"h5\" component=\"h2\">\n                            Recuperar Senha\n                        </Typography>\n                        <form onSubmit={ this.handleSubmit }>\n                            <FormControl  fullWidth={true} >\n                                <InputLabel htmlFor=\"username\">E-mail</InputLabel>\n                                <Input\n                                type=\"username\"\n                                id=\"username\"\n                                value={ this.state.username }\n                                name=\"username\"\n                                onChange={this.handleInputChange}\n                                aria-describedby=\"username-text\"\n                                onChange={ this.handleInputChange }\n                                value={ this.state.username }\n                                />\n                                {this.state.errors && (<FormHelperText id=\"username-text\" style={{color: 'red'}}>{this.state.errors}</FormHelperText>)}\n                                {this.state.message && (<FormHelperText id=\"username-text\"  style={{color: 'green'}}>{this.state.message}</FormHelperText>)}\n                            </FormControl>\n                        <CardActions>\n                           {this.state.isFetching && (\n                            <Grid\n                                container\n                                spacing={0}\n                                direction=\"column\"\n                                alignItems=\"center\"\n                                justify=\"center\"\n                                style={{marginTop: 30}}\n                               fullWidth={true}\n                            >\n                                    <CircularProgress />\n                                </Grid>\n                           )}\n                           {!this.state.isFetching && (\n                            <Button \n                            disabled={this.state.emailSent}\n                            fullWidth={true} variant=\"contained\" color=\"primary\" type=\"submit\" >\n                                    Enviar E-mail de Recuperação de Senha\n                            </Button>\n                            )}\n                        </CardActions>\n                        </form>\n                        </CardContent>\n                        \n                    </Card>\n                </Grid>      \n            </Grid>\n        );\n    }\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../actions/authentication'\nimport { makeStyles } from '@material-ui/core/styles'\nimport FormControl   from '@material-ui/core/FormControl'\nimport InputLabel   from '@material-ui/core/InputLabel'\nimport Input   from '@material-ui/core/Input'\nimport FormHelperText   from '@material-ui/core/FormHelperText'\nimport Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Link from '@material-ui/core/Link'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport ResetPassword from './ForgotPassword'\n\nclass Login extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            username: '',\n            password: '',\n            errors: {}\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    \n    handleInputChange(e) {\n        if(e.target.name === 'username'){\n            e.target.value = e.target.value.toLowerCase()\n        }\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleSubmit(e) {\n        e.preventDefault()\n        console.log()\n        const user = {\n            username: this.state.username,\n            password: this.state.password,\n        }\n        this.props.loginUser(user);\n    }\n\n    componentDidMount() {\n        if(this.props.auth.isAuthenticated) {\n            this.props.history.push('/');\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.auth.isAuthenticated) {\n            this.props.history.push('/')\n        }\n        if(nextProps.errors) {\n            this.setState({\n                errors: nextProps.errors\n            });\n        }\n    }\n\n    render() {\n        \n\n        const {errors} = this.state\n\n    //    React.useEffect(() => {\n    //        setLabelWidth(labelRef.current.offsetWidth)\n    //      }, [])\n\n        return(\n            \n                <Grid\n                container\n                spacing={0}\n                direction=\"column\"\n                alignItems=\"center\"\n                justify=\"center\"\n                style={{ minHeight: '100vh' }}\n            >\n            \n                <Grid item xs={6}>\n                        <Card className={classes.card}>\n                        <CardContent>\n                        <Typography \n                                className={classes.title} color=\"textSecondary\" gutterBottom>\n                            Parapeti\n                        </Typography>\n                        <Typography \n                                variant=\"h5\" component=\"h2\">\n                            Login\n                        </Typography>\n                        <form onSubmit={ this.handleSubmit }>\n                            <FormControl className={classes.formControl} fullWidth={true} >\n                                <InputLabel htmlFor=\"username\">E-mail</InputLabel>\n                                <Input\n                                type=\"username\"\n                                id=\"username\"\n                                value={ this.state.username }\n                                name=\"username\"\n                                onChange={this.handleInputChange}\n                                aria-describedby=\"username-text\"\n                                style={{textTransform:'lowercase'}}\n                                value={ this.state.username }\n                                />\n                                {errors.username && (<FormHelperText id=\"username-text\" style={{color: 'red'}}>{errors.username}</FormHelperText>)}\n                            </FormControl>\n                            <FormControl  fullWidth={true} className={classes.formControl} >\n                                <InputLabel htmlFor=\"password\">Senha</InputLabel>\n                                <Input\n                                type=\"password\"\n                                id=\"password\"\n                                value={ this.state.password }\n                                name=\"password\"\n                                onChange={this.handleInputChange}\n                                aria-describedby=\"password-text\"\n                                value={ this.state.password }\n                                />\n                                {errors.password && (<FormHelperText id=\"password-text\" style={{color: 'red'}}>{errors.password}</FormHelperText>)}\n                            </FormControl>\n                            \n                            \n                        <CardActions>\n                            <Button fullWidth={true} variant=\"contained\" color=\"primary\" type=\"submit\" >\n                                Login\n                            </Button>\n                        </CardActions>\n                        </form>\n                        </CardContent>\n                        <CardActions>\n                                <Link component={ AdapterLink } to=\"/forgot_password\">\n                                    Esqueceu sua senha?\n                                </Link>\n                        </CardActions>\n\n                    </Card>\n                </Grid>      \n            </Grid>\n        )\n    }\n}\nconst AdapterLink = React.forwardRef((props, ref) => <RouterLink innerRef={ref} {...props} />);\n\nconst classes = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n      },\n      formControl: {\n        margin: theme.spacing(1),\n        width: '100%'\n      },\n    card: {\n        minWidth: 275,\n        maxWidth:400\n      },\n    button: {\n      margin: theme.spacing(1),\n      width: '100%'\n    },\n    input: {\n      display: 'none',\n      width: '100%'\n    },\n    title: {\n        alignItems: \"center\",\n        justify: \"center\"\n    }\n  }))\n\n//  const [labelWidth, setLabelWidth] = React.useState(0)\n//  const [name, setName] = React.useState('Composed TextField')\n// /  const labelRef = React.useRef(null)\n  \nLogin.propTypes = {\n    loginUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    errors: state.errors\n})\n\nexport  default connect(mapStateToProps, { loginUser })(Login)","import React, { Component } from 'react';\nimport Slider from 'react-animated-slider';\nimport 'react-animated-slider/build/horizontal.css';\nimport './css/carousel.css'\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress' \nimport Paper from '@material-ui/core/Paper';\nimport FindReplace from '@material-ui/icons/FindReplace'\nimport Pets from '@material-ui/icons/Pets'\nimport Done from '@material-ui/icons/Done'\nimport Visibility from '@material-ui/icons/Visibility'\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux'\nimport axios from 'axios'\nimport dotenv from 'dotenv'\nimport {\n    BrowserView,\n    MobileView,\n    isBrowser,\n    isMobile\n  } from \"react-device-detect\";\n\ndotenv.config()\n\n\nclass Home extends Component {\n    constructor(props){\n        super(props)\n        this.aboutUsRef = React.createRef()\n        this.examsRef = React.createRef()\n        this.partnersRef = React.createRef()\n        this.contactRef = React.createRef()\n        this.sendEmail = this.sendEmail.bind(this)\n        this.scrollIfNecessary =this.scrollIfNecessary.bind(this)\n        this.state = {\n            isSending: false,\n            sent: false,\n            name: '',\n            email: '',\n            phone: '',\n            address: '',\n            message: '',\n            errors: { }\n        }\n        this.handleInputChange = this.handleInputChange.bind(this)\n        this.sendEmail = this.sendEmail.bind(this)\n    }\n    \n    componentDidMount(){\n        if(this.props.auth){\n            console.log(this.props.auth)\n            if(this.props.auth.isAuthenticated) {\n                if(this.props.auth.user.admin){\n                    this.props.history.push('/users');\n                }else{\n                    this.props.history.push('/exams');\n                }\n                \n            }\n        }\n        else{\n            this.scrollIfNecessary()  \n        }\n    }\n    componentDidUpdate(){\n        this.scrollIfNecessary()\n    }\n    scrollIfNecessary(){\n        if(window.location.href.includes('#about-us')){\n            this.aboutUsRef.current.scrollIntoView({\n                behavior: 'smooth',\n                block: 'start',\n              });\n        }else if(window.location.href.includes('#exams')){\n            this.examsRef.current.scrollIntoView({\n                behavior: 'smooth',\n                block: 'start',\n              });\n        }else if(window.location.href.includes('#contact')){\n            this.contactRef.current.scrollIntoView({\n                behavior: 'smooth',\n                block: 'start',\n              });\n        }\n        else if(window.location.href.includes('#partners')){\n            this.partnersRef.current.scrollIntoView({\n                behavior: 'smooth',\n                block: 'start',\n              });\n        }\n    }\n    handleInputChange(e) {\n        const varName = e.target.name\n        \n        this.setState({\n            [varName]: e.target.value\n        })\n    }\n    sendEmail(){\n        console.log(this.state)\n        let ok = true\n        this.state.errors = {}\n\n        if(!this.state.email \n            || this.state.email.length < 6 \n            || !this.state.email.includes('@')\n            || !this.state.email.includes('.')\n            || this.state.email.includes(',')\n            || this.state.email.includes('<')\n            || this.state.email.includes('script')\n            || this.state.email.includes('>')){\n                ok = false\n                this.state.errors['email'] = 'O email é incorreto'\n            }\n        if(!this.state.name \n            || this.state.name.length < 3 \n            || this.state.name.includes(',')\n            || this.state.name.includes('<')\n            || this.state.name.includes('script')\n            || this.state.name.includes('>')){\n                ok = false\n                this.state.errors['name'] = 'O nome é incorreto'\n            }\n        if(!this.state.phone \n            || this.state.phone.length < 3 \n            || this.state.phone.includes(',')\n            || this.state.phone.includes('<')\n            || this.state.phone.includes('script')\n            || this.state.phone.includes('>')){\n                ok = false\n                this.state.errors['phone'] = 'O telephone é incorreto'\n            }\n        if(!this.state.message \n            || this.state.message.length < 3 \n            || this.state.message.includes('<')\n            || this.state.message.includes('script')\n            || this.state.message.includes('>')){\n                ok = false\n                this.state.errors['message'] = 'A mensagem é muito curta ou tem carateres não permitidos'\n            }\n        if(!this.state.address \n            || this.state.address.length < 3 \n            || this.state.address.includes('<')\n            || this.state.address.includes('script')\n            || this.state.address.includes('>')){\n                ok = false\n                this.state.errors['address'] = 'O endereço é incorreto'\n            }\n        if(ok){\n            this.setState({\n                isSending: true\n            })\n            axios.post(process.env.REACT_APP_API_HOST + '/api/send_email/', \n                {   name: this.state.name,\n                    email: this.state.email,\n                    address: this.state.address,\n                    phone: this.state.phone,\n                    message: this.state.message\n                })\n                    .then(res => {\n                        this.setState({\n                            isSending: false,\n                            sent: true\n                        })\n                    })\n                    .catch(err => {\n                        this.setState({\n                            isSending: false\n                        })\n                    if(err && err.response){\n                    this.setState({\n                        errors: JSON.stringify(err.response),\n                        isSending: false\n                    })\n                    }\n                    })\n        }else{\n            this.setState({})\n        }\n    }\n    render() {\n\n        const content = [\n            {\n                title: 'CONSULTE',\n                description:\n                'SEU EXAME',\n                button: 'CONSULTA',\n                image: '/img/carousel1.jpg'\n            },\n            {\n                title: 'CONSULTE',\n                description:\n                'SEU EXAME',\n                button: 'CONSULTA',\n                image: '/img/carousel1_2.jpg'\n            }\n        ];\n        const content2 = [\n            {\n                title: 'EXAMES',\n                description:\n                'HEMATOLÓGICOS',\n                button: 'AGENDAR',\n                image: '/img/carousel2.jpg'\n            },\n            {\n                title: 'EXAMES',\n                description:\n                'CITOPATOLÓGICOS',\n                button: 'AGENDAR',\n                image: '/img/carousel2_2.jpg'\n            }\n        ];\n        return (\n            <div style={{width:'100%'}}>\n               <div  style={{marginTop:90}}>\n                    <Slider className=\"slider-wrapper\" >\n                            {content.map((item, index) => (\n                                <div\n                                    key={index}\n                                    className=\"slider-content\"\n                                    style={{ background: `url('${item.image}') no-repeat center center` }}\n                                >\n                                    <div className=\"inner\" style={{textAlign: 'right'}}>\n                                        <div className=\"carousel-title\" >{item.title}</div>\n                                        <div className=\"carousel-description\"><strong>{item.description}</strong></div>\n                                        <a href=\"/login\" className=\"button\" >{item.button} &nbsp;&nbsp;&nbsp; <i style={{fontWeight: 'light'}} className=\"fas fa-angle-right\"></i></a>\n                                    </div>\n                                </div>\n                            ))}\n                        </Slider>\n                </div>\n                <div ref={this.aboutUsRef} style={{minHeight:400}}>\n                <div  class=\"row\"\n                        style={{backgroundColor: '#0188FE'}}>\n                   \n                        <div \n                        className=\"col-md-6 col-lg-6 col-sm-12 col-xs-12\"\n                        style={isMobile ? \n                                {margin: 'auto',  backgroundColor: '#FFFFFF',minHeight:400} : {padding:180, backgroundColor: '#FFFFFF',minHeight:400}}>\n                                <img src='/img/logo_blue.png' height={150} \n                                style={\n                                    isMobile ?\n                                    {margin:'auto', marginTop:110, display: 'block', maxWidth: '100%', maxHeight: '100%'}\n                                   : {margin:0, display: 'block', maxWidth: '100%', maxHeight: '100%'}} />\n                        </div>\n                        <div  \n                        className=\"col-md-6 col-lg-6 col-sm-12 col-xs-12\"\n                        style={{backgroundColor: '#0188FE', \n                                display: 'block',\n                                width: '100%',\n                                height: '100%', paddingLeft:20, paddingRight:20}}>\n                            \n                                <div style={{backgroundColor: '#0188FE', \n                                display: 'block',\n                                width: '100%',\n                                height: '100%', textAlign:'center',marginTop:0,  fontSize: 20, color: 'white'}}>\n                                <div style={{marginTop:100}}>\n                                <span className=\"carousel-title\" >SOBRE &nbsp;</span>\n                                <span className=\"carousel-description\" style={{marginBottom: 20}}><strong>NÓS</strong></span>\n                                </div>\n                                < br/>\n                                    <div style={isMobile ? {margin:40} : {margin:'auto'}}>\n                                        Lorem ipsum dolor sit amet, consectetur\n                                        adipiscing elit, sed do eiusmod tempor\n                                        incididunt ut labore et dolore magna\n                                        aliqua. Ut enim ad minim veniam, quis\n                                        nostrud exercitation ullamco laboris nisi\n                                        ut aliquip ex ea commodo consequat.\n                                        Duis aute irure dolor in reprehenderit in\n                                        voluptate velit esse cillum dolore eu\n                                        fugiat nulla pariatur.\n                                    </div>\n                                </div>\n                        </div>\n                </div>\n                   </div>            \n                <div  >\n                <div   className=\"row\"\n                        style={{backgroundColor: '#FFFFFF'}}>\n                       \n                       <div \n                       className=\"col-md-4 col-lg-4 col-sm-12 col-xs-12\"\n                       style={{padding:70, backgroundColor: '#FFFFFF', color: '#0188FE'}}>\n                                <div class=\"row\">\n                                        <div className=\"col-md-2\">\n                                            <FindReplace   style={{fontSize:30, marginTop:5}}/>\n                                        </div>\n                                        <div className=\"col-md-10\">\n                                            <div style={{fontSize:30}}>\n                                                MISSÃO\n                                            </div>\n                                          \n                                        </div>\n                                        <div className=\"offset-md-2 col-md-10\">\n                                                <div style={{color: 'black'}}>\n                                                    Lorem ipsum dolor sit amet,\n                                                    consectetur adipiscing elit, sed do\n                                                    eiusmod tempor incididunt ut\n                                                    labore et dolore magna aliqua. Ut\n                                                    enim ad minim veniam, quis\n                                                    nostrud exercitation ullamco\n                                                    laboris nisi ut aliquip\n                                                    quis\n                                                    nostrud exercitation ullamco\n                                                    laboris nisi ut aliquip\n                                                    quis\n                                                    nostrud exercitation ullamco\n                                                    laboris nisi ut aliquip</div>\n                                                \n                                        </div>\n                                        </div>\n                                </div>\n                        <div\n                        className=\"col-md-4 col-lg-4 col-sm-12 col-xs-12\"\n                        style={{padding:70, backgroundColor: '#FFFFFF', color: '#0188FE'}}>\n                        <div class=\"row\">\n                                        <div className=\"col-md-2\">\n                                            <Visibility   style={{fontSize:30, marginTop:5}}/>\n                                        </div>\n                                        <div className=\"col-md-10\">\n                                            <div style={{fontSize:30}}>\n                                                VISÃO\n                                            </div>\n                                          \n                                        </div>\n                                        <div className=\"offset-md-2 col-md-10\">\n                                                <div style={{color: 'black'}}>\n                                                    Lorem ipsum dolor sit amet,\n                                                    consectetur adipiscing elit, sed do\n                                                    eiusmod tempor incididunt ut\n                                                    labore et dolore magna aliqua. Ut\n                                                    enim ad minim veniam, quis\n                                                    nostrud exercitation ullamco\n                                                    laboris nisi ut aliquip\n                                                    quis\n                                                    nostrud exercitation ullamco\n                                                    laboris nisi ut aliquip\n                                                    quis\n                                                    nostrud exercitation ullamco\n                                                    laboris nisi ut aliquip</div>\n                                                \n                                        </div>\n                                        </div>\n                        </div>\n                        <div \n                        className=\"col-md-4 col-lg-4 col-sm-12 col-xs-12\"\n                        style={{padding:70,backgroundColor: '#FFFFFF', color: '#0188FE'}}>\n                                    <div class=\"row\" >\n                                        <div className=\"col-md-2\">\n                                            <Pets   style={{fontSize:30, marginTop:5}}/>\n                                        </div>\n                                        <div className=\"col-md-10\">\n                                            <div style={{fontSize:30}}>\n                                                VALORES\n                                            </div>\n                                            \n                                        </div>\n                                        <div className=\"offset-md-2 col-md-10\">\n                                                <div><Done /> <span style={{color:'black'}} >Simplicidade</span></div>\n                                                <div><Done /> <span style={{color:'black'}} >Tecnológica</span></div>\n                                                <div><Done /> <span style={{color:'black'}} >Para Pessoas</span></div>\n                                                <div><Done /> <span style={{color:'black'}} >Atenção aos dados</span></div>\n                                                <div><Done /> <span style={{color:'black'}} >Data Driver</span></div>\n                                                <div><Done /> <span style={{color:'black'}} >Beta Forever</span></div>\n                                                <div><Done /> <span style={{color:'black'}} >Agilidade</span></div>\n                                                \n                                        </div>\n                                    </div>\n                        </div>\n                                \n                   </div>\n                </div>\n                <div ref={this.examsRef} >\n                <Slider className=\"slider-wrapper\" >\n                            {content2.map((item, index) => (\n                                <div\n                                    key={index}\n                                    className=\"slider-content\"\n                                    style={{ background: `url('${item.image}') no-repeat center center` }}\n                                >\n                                    <div className=\"inner\" style={{textAlign: 'right'}}>\n                                        <div className=\"carousel-title\" >{item.title}</div>\n                                        <div className=\"carousel-description\"><strong>{item.description}</strong></div>\n                                        <div className=\"offset-md-5 col-md-7\">\n                                        <div style={{color: 'white', fontSize:20,}}>Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n                                                    sed do eiusmod tempor incididunt ut commodo\n                                                    consequat. nulla pariatur.</div>\n                                        </div>\n                                    </div>\n                                </div>\n                            ))}\n                    </Slider>\n                </div>\n                <div ref={this.partnersRef} style={{minHeight:500, width:'100%', padding: 40}}>\n                        <div className=\"row\" style={{width:'100%'}}>\n                                <div className=\"col-md-12\">\n                                <center><h1 style={{margin:'\u001cauto', fontSize: 50, marginBottom: 40, color: '#0188FE'}}>PARCEIROS</h1></center>\n                                </div>\n                        </div>\n                        <div className=\"row\">\n                                <div className=\"col-md-3 col-xs-12 col-sm-12\" >\n                                    <div style={{textAlign:'center',backgroundColor: '#0188FE', borderRadius:90, padding:30, color: 'white'}}>\n                                            Logo\n                                    </div>\n                                </div>\n                                <div className=\"col-md-3 col-xs-12 col-sm-12\" >\n                                    <div style={{textAlign:'center',backgroundColor: '#0188FE', borderRadius:90, padding:30, color: 'white'}}>\n                                            Logo\n                                    </div>\n                                </div>\n                                <div className=\"col-md-3 col-xs-12 col-sm-12\" >\n                                    <div style={{textAlign:'center',backgroundColor: '#0188FE', borderRadius:90, padding:30, color: 'white'}}>\n                                            Logo\n                                    </div>\n                                </div>\n                                <div className=\"col-md-3 col-xs-12 col-sm-12\" >\n                                    <div style={{textAlign:'center',backgroundColor: '#0188FE', borderRadius:90, padding:30, color: 'white'}}>\n                                            Logo\n                                    </div>\n                                </div>\n                        </div>\n                        <div className=\"row\" style={{marginTop: 20}}>\n                                <div className=\"col-md-3  col-xs-12 col-sm-12\" >\n                                    <div style={{textAlign:'center',backgroundColor: '#0188FE', borderRadius:90, padding:30, color: 'white'}}>\n                                            Logo\n                                    </div>\n                                </div>\n                                <div className=\"col-md-3  col-xs-12 col-sm-12\" >\n                                    <div style={{textAlign:'center',backgroundColor: '#0188FE', borderRadius:90, padding:30, color: 'white'}}>\n                                            Logo\n                                    </div>\n                                </div>\n                                <div className=\"col-md-3  col-xs-12 col-sm-12\" >\n                                    <div style={{textAlign:'center',backgroundColor: '#0188FE', borderRadius:90, padding:30, color: 'white'}}>\n                                            Logo\n                                    </div>\n                                </div>\n                                <div className=\"col-md-3  col-xs-12 col-sm-12\" >\n                                    <div style={{textAlign:'center',backgroundColor: '#0188FE', borderRadius:90, padding:30, color: 'white'}}>\n                                            Logo\n                                    </div>\n                                </div>\n                        </div>\n                </div>\n                <div ref={this.contactRef} style={{minHeight:500, backgroundColor: '#0188FE'}}>\n                \n                        <div className=\"row\" style={{width:'100%'}}>\n                                <div className=\"col-md-12\">\n                                    <center><h1 style={{margin:'\u001cauto',marginTop: 60,  fontSize: 50, color: 'white'}}>CONTATO</h1></center>\n                                </div>\n                        </div>\n                        <div className=\"row\">\n                                <div  className=\"col-md-12\" style={isMobile ? {padding:0} : {padding:50}}>\n                                    <div \n                                    style={isMobile ?\n                                        {backgroundColor: 'white', borderRadius: 30, padding: 50, margin:40, marginTop:10}\n                                        : {backgroundColor: 'white', borderRadius: 30, padding: 50, margin:100, marginTop:10}}>\n                                        <input style={{width: '100%', marginBottom:20, borderRadius:30, borderWidth:7, borderColor: '#0188FE',padding:10 }} placeholder={'Nome completo'} id=\"name\" name=\"name\" value={this.state.name} onChange={this.handleInputChange}/>\n                                        {this.state.errors && this.state.errors.name && (\n                                            <p style={{color: 'red', marginLeft:5}}>\n                                                {this.state.errors.name}\n                                            </p>\n                                            )}\n                                            <div class=\"row\">\n                                                <div class=\"col-md-6 col-lg-6 col-sm-12\">\n                                                    <input style={{width: '100%', marginBottom:20, marginRight:10, borderRadius:30, borderWidth:7, borderColor: '#0188FE',padding:10 }} placeholder={'(85) 9 9999-8888'} id=\"phone\" name=\"phone\" value={this.state.phone} onChange={this.handleInputChange} />\n                                                        {this.state.errors && this.state.errors.phone && (\n                                                            <div style={{color: 'red', marginLeft:5, width: '48%'}}>\n                                                                {this.state.errors.phone}\n                                                            </div>\n                                                            )}\n                                                </div>\n                                                <div class=\"col-md-6 col-lg-6 col-sm-12\">\n                                                <input style={{width: '100%', marginBottom:20, borderRadius:30, borderWidth:7, borderColor: '#0188FE',padding:10 }} placeholder={'a@a.com.br'}  id=\"email\" name=\"email\" value={this.state.email} onChange={this.handleInputChange}/>\n                                                    {this.state.errors && this.state.errors.email && (\n                                                        <span style={{color: 'red', marginLeft:5, width: '50%'}}>\n                                                            {this.state.errors.email}\n                                                        </span>\n                                                        )}\n                                                </div>\n                                            </div>\n                                        \n                                        \n                                        <input style={{width: '100%', marginBottom:20, borderRadius:30, borderWidth:7, borderColor: '#0188FE',padding:10 }} placeholder={'Endereço completo (Rua, Número, Bairro)'}  id=\"address\" name=\"address\" value={this.state.address} onChange={this.handleInputChange}/>\n                                        {this.state.errors && this.state.errors.address && (\n                                            <p style={{color: 'red', marginLeft:5}}>\n                                                {this.state.errors.address}\n                                            </p>\n                                            )}\n                                        <textarea rows={6} style={{width: '100%', marginBottom:20, borderRadius:30, borderWidth:7, borderColor: '#0188FE',padding:10 }} placeholder={'Mensagem'}  id=\"message\" name=\"message\" value={this.state.message} onChange={this.handleInputChange}>\n                                        </textarea>\n                                        {this.state.errors && this.state.errors.message && (\n                                            <p style={{color: 'red', marginLeft:5}}>\n                                                {this.state.errors.message}\n                                            </p>\n                                            )}\n                                        <center>\n                                            {!this.state.isSending && !this.state.sent && (\n                                            <button onClick={()=> { this.sendEmail() } } className=\"button\" disabled={this.state.sent}>ENVIAR </button>\n                                            )}\n                                            {this.state.isSending && (\n                                                    <Grid\n                                                    container\n                                                    spacing={0}\n                                                    direction=\"column\"\n                                                    alignItems=\"center\"\n                                                    justify=\"center\"\n                                                    style={{marginTop: 30}}\n                                                    >\n                                                        <CircularProgress />\n                                                    </Grid>\n                                            )}\n                                            {!this.state.isSending && this.state.sent && (\n                                            <p style={{color:'green'}}>Mensagem enviada com sucesso. Em breve entraremos em contato </p>\n                                            )}\n                                        </center>\n                                    </div>\n                                </div>\n                                \n                        </div>\n                </div>\n                <div style={{backgroundColor: 'white'}}>\n                    <div className=\"row\" \n                    style={isMobile ? \n                        {color:  '#0188FE',  marginLeft:50, fontSize:20, paddingTop:40,paddingBottom:40}\n                        : {color:  '#0188FE',fontSize:20, paddingTop:40,paddingBottom:40}}>\n                           <div className=\"col-md-4 col-sm-12 col-xs-12\">\n                                <div className=\"row\">\n                                    <div className=\"offset-md-2 col-md-8\">\n                                        <img src='/img/logo_blue.png'  height={100} />\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-md-2\">\n                                        <center>\n                                        <div style={{height:'100%', width:5, backgroundColor: '#0188FE'}}>\n                                        </div>\n                                        </center>\n                                    </div>\n                                    <div className=\"col-md-10\" style={{marginTop:20}}>\n                                        <div>Conheça a Parapeti</div>\n                                        <div>Como funcionam os exames?</div>\n                                        <div>Nossos parceiros</div>\n                                        <div>Consulte seu exame</div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\" offset-md-1 col-md-4  col-sm-12 col-xs-12\">\n                                <div className=\"row\">\n                                    \n                                    <div className=\"col-md-12\">\n                                        <div style={{fontSize:25, marginTop:50, marginBottom:20}}><strong>CONTATO</strong></div>\n                                        <div style={{marginTop:10}}>+55 85 9999-9999</div>\n                                        <div style={{marginTop:10}}>parapeticontato@gmail.com</div>\n                                        <div style={{marginTop:10}}>Rua xxxxx, 000 - Fortaleza, CE.</div>\n                                        <div style={{marginTop:10}}>CEP: 00000-000</div>\n                                        \n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-3  col-sm-12 col-xs-12\">\n                                <div className=\"row\">\n                                    \n                                    <div className=\"col-md-12\">\n                                        <div style={{fontSize:25, marginTop:50, marginBottom:20}}><strong>REDES SOCIAIS</strong></div>\n                                        \n                                        <div >\n                                            <a href=\"#\" style={{fontSize:40, marginRight:10}}><i class=\"fab fa-instagram\"></i></a>\n                                            <a href=\"#\" style={{fontSize:40, marginRight:10}}><i class=\"fab fa-facebook-square\"></i></a>\n                                            <a href=\"#\" style={{fontSize:40, marginRight:10}}><i class=\"fab fa-twitter\"></i></a>\n                                            <a href=\"#\" style={{fontSize:40, marginRight:10}}><i class=\"fab fa-linkedin\"></i></a>\n                                        </div>\n                                        \n                                    </div>\n                                </div>\n                            </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    \n}\nHome.propTypes = {\n        \n    auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth\n})\n\nexport  default connect(mapStateToProps)(Home)\n","import React, { Component } from 'react'\n\nimport FormControl   from '@material-ui/core/FormControl'\nimport InputLabel   from '@material-ui/core/InputLabel'\nimport Input   from '@material-ui/core/Input'\nimport FormHelperText   from '@material-ui/core/FormHelperText'\nimport Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport axios from  'axios'\nimport dotenv from 'dotenv'\ndotenv.config()\n\nexport default class ResetPassword extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            password: '',\n            confirmPassword: '',\n            message: false,\n            errors: false,\n            isFetching: false,\n            passwordReseted: false\n        }\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleInputChange = this.handleInputChange.bind(this)\n    }\n    handleSubmit(e){\n        e.preventDefault()\n        if(this.state.password && this.state.password.length < 6){\n            this.setState({\n                errors: 'A senha deve ter mínimo 6 carateres'\n            })\n        }else if(this.state.password != this.state.confirmPassword){\n            this.setState({\n                erros: 'A senhas digitadas não coincidem'\n            })\n        }else{\n                this.setState({\n                    isFetching: true\n                })\n                var url = process.env.REACT_APP_API_HOST + '/api/users/reset_password/'\n                if(this.props.location.search.split('=').length == 2){\n                    url += 'token/' + this.props.location.search.split('=')[1]\n                }\n                axios.post(url, {password: this.state.password, \n                                    confirmPassword : this.state.confirmPassword })\n                                    .then(res => {\n                                        this.setState({\n                                            message: res.data.msg,\n                                            errors: false,\n                                            isFetching: false,\n                                            passwordReseted: true\n                                        })\n                                    })\n                                    .catch(err => {\n                                        this.setState({\n                                            errors: JSON.stringify(err.response.data.msg),\n                                            isFetching: false\n                                        })\n                                    })\n\n        }\n    }\n    handleInputChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    render() {\n        return (\n                <Grid\n                container\n                spacing={0}\n                direction=\"column\"\n                alignItems=\"center\"\n                justify=\"center\"\n                style={{ minHeight: '100vh' }}\n            >\n            \n                <Grid item xs={6}>\n                        <Card  style={{width: '100%'}}>\n                        <CardContent>\n                        <Typography \n                               color=\"textSecondary\" gutterBottom>\n                            Parapeti\n                        </Typography>\n                        <Typography \n                                variant=\"h5\" component=\"h2\">\n                            Resetar Senha\n                        </Typography>\n                        <form onSubmit={ this.handleSubmit }>\n                            <FormControl  fullWidth={true} >\n                                <InputLabel htmlFor=\"password\">Senha</InputLabel>\n                                <Input\n                                type=\"password\"\n                                id=\"password\"\n                                value={ this.state.password }\n                                name=\"password\"\n                                onChange={this.handleInputChange}\n                                aria-describedby=\"password-text\"\n                                onChange={ this.handleInputChange }\n                                />\n                                \n                            </FormControl>\n                            <FormControl  fullWidth={true} >\n                                <InputLabel htmlFor=\"confirmPassword\">Confirmar Senha</InputLabel>\n                                <Input\n                                type=\"password\"\n                                id=\"confirmPassword\"\n                                value={ this.state.confirmPassword }\n                                name=\"confirmPassword\"\n                                onChange={this.handleInputChange}\n                                aria-describedby=\"confirmPassword-text\"\n                                onChange={ this.handleInputChange }\n                                />\n                                {this.state.errors && (<FormHelperText id=\"confirmPassword-text\" style={{color: 'red'}}>{this.state.errors}</FormHelperText>)}\n                                {this.state.message && (<FormHelperText id=\"confirmPassword-text\"  style={{color: 'green'}}>{this.state.message}</FormHelperText>)}\n                            </FormControl>\n                        <CardActions>\n                           {this.state.isFetching && (\n                            <Grid\n                                container\n                                spacing={0}\n                                direction=\"column\"\n                                alignItems=\"center\"\n                                justify=\"center\"\n                                style={{marginTop: 30}}\n                               fullWidth={true}\n                            >\n                                    <CircularProgress />\n                                </Grid>\n                           )}\n                           {!this.state.isFetching && (\n                            <Button fullWidth={true} \n                                    variant=\"contained\" color=\"primary\" type=\"submit\"\n                                     disabled={this.state.passwordReseted}>\n                                    Redefinir Senha\n                            </Button>\n                            )}\n                        </CardActions>\n                        </form>\n                        </CardContent>\n                        \n                    </Card>\n                </Grid>      \n            </Grid>\n        );\n    }\n}","import React, { Component } from 'react';\n\nexport default class Partners extends Component {\n    render() {\n        return (\n            <div  style={{backgroundColor: 'blue', marginTop:100}}>\n                Partners Component \n            </div>\n        );\n    }\n}","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport jwt_decode from 'jwt-decode';\nimport setAuthToken from './setAuthToken'\nimport { setCurrentUser, logoutUser } from './actions/authentication';\n\nimport Navbar from './components/Navbar';\nimport Register from './components/Register';\nimport Login from './components/Login';\nimport Home from './components/Home';\nimport Users from './components/Users'\nimport Profile from './components/Profile'\nimport Exams from './components/Exams'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { makeStyles,createMuiTheme } from '@material-ui/core/styles'\nimport { ThemeProvider } from '@material-ui/styles'\nimport ForgotPassword from './components/ForgotPassword'\nimport ResetPassword from './components/ResetPassword'\nimport Partners from './components/Partners'\nimport AdminExams from './components/AdminExams'\nimport AddAdminExams from './components/AddAdminExams'\nif(localStorage.jwtToken) {\n  setAuthToken(localStorage.jwtToken);\n  const decoded = jwt_decode(localStorage.jwtToken);\n  store.dispatch(setCurrentUser(decoded));\n\n  const currentTime = Date.now() / 1000;\n  if(decoded.exp < currentTime) {\n    store.dispatch(logoutUser());\n    window.location.href = '/login'\n  }\n}\n\nfunction App() {\n  const [theme, setTheme] = useState({\n    typography: {\n      fontFamily: \"Open Sans\",\n      fontSize: 14,\n      fontWeightLight: 100,\n      fontWeightRegular: 400,\n      fontWeightMedium: 500\n     },\n    palette: {\n      type: \"light\",\n      primary: {\n        main: '#0188FE'\n      },\n      secondary: {\n        main: '#F7F8F9'\n      },\n      accent: {\n        main: '#E33E7F'\n      },\n      background: {\n        default: \"#e6e6e6\"\n      }\n    }\n  })\n  const muiTheme = createMuiTheme(theme);\n\n    return (\n      <Provider store = { store }>\n        <ThemeProvider theme={muiTheme}>\n        <CssBaseline />\n        <Router>\n            <div>\n              <Navbar theme={muiTheme}/>\n                <div style={{marginLeft:0, marginRight:0}}>\n                  <Route exact path=\"/login\" component={ Login } />\n                  <Route exact path=\"/\" component={ Home } />\n                  <Route exact path=\"/partners\" component={ Partners } />\n                  <Route exact path=\"/forgot_password\" component={ ForgotPassword } />\n                  <Route exact path=\"/reset_password\" component={ ResetPassword } />\n                  <Route exact path=\"/users\" component={ Users } />\n                  <Route exact path=\"/profile\" component={ Profile } />\n                  <Route exact path=\"/exams\" component={ Exams } />\n                  <Route exact path=\"/add_admin_exams\" component = { AddAdminExams } />\n                  <Route exact path=\"/admin_exams\" component={ AdminExams } />\n                  <Route exact path=\"/register\" component={ Register } />\n                </div>\n            </div>\n          </Router>\n          </ThemeProvider>\n        </Provider>\n    );\n  }\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}