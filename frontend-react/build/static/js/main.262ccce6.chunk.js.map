{"version":3,"sources":["reducers/errorReducer.js","validation/is-empty.js","reducers/authReducer.js","reducers/usersReducer.js","reducers/profileReducer.js","reducers/adminExamsReducer.js","reducers/examsReducer.js","reducers/chatDialogReducer.js","reducers/index.js","actions/types.js","actions/actions.js","sagas/usersSagas.js","sagas/profileSagas.js","sagas/examsSagas.js","sagas/adminExamsSagas.js","sagas/chatDialogSagas.js","sagas/index.js","store.js","setAuthToken.js","actions/authentication.js","components/Register.js","components/Users.js","components/Profile.js","components/ChatDialog.js","components/Exams.js","components/AdminExams.js","components/Dropzone.js","components/Progress.js","components/Upload.js","components/AddAdminExams.js","components/Drawer.js","components/Navbar.js","components/ForgotPassword.js","components/Login.js","components/Home.js","components/ResetPassword.js","components/Partners.js","App.js","registerServiceWorker.js","index.js"],"names":["initialState","isEmpty","value","undefined","Object","keys","length","trim","isAuthenticated","user","INITIAL_STATE","data","isFetching","error","users","state","arguments","action","type","profile","adminExams","exams","file_id","chatDialog","combineReducers","errors","payload","auth","objectSpread","usersReducer","profileReducer","adminExamsReducer","examsReducer","chatDialogReducer","loadUsersSuccess","loadProfileSuccess","loadAdminExamsSuccess","loadExamsSuccess","loadChatDialogSuccess","getUsers","axios","actions","dados","regenerator_default","a","wrap","_context","prev","next","console","log","get","process","sent","put","stop","_marked","dotenv","config","getProfile","profileSagas_marked","getExams","examsSagas_marked","getAdminExams","adminExamsSagas_marked","getChatDialog","chatDialogSagas_marked","index","takeLatest","sagas_marked","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","compose","applyMiddleware","thunk","run","indexSaga","setAuthToken","token","defaults","headers","common","setCurrentUser","decoded","logoutUser","history","dispatch","localStorage","removeItem","push","Register","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","username","completename","cpf","address","crmv","technicalSupport","phone","handleInputChange","bind","assertThisInitialized","handleSubmit","handleSelectTypeChange","e","setState","defineProperty","target","name","preventDefault","props","registerUser","nextProps","errorsToSend","i","param","msg","password","confirmPassword","admin","classes","styles","react_default","createElement","Grid","container","spacing","direction","alignItems","justify","style","minHeight","marginTop","item","xs","Card","className","card","CardContent","Typography","variant","component","onSubmit","FormControl","formControl","fullWidth","InputLabel","htmlFor","Select","onChange","MenuItem","FormHelperText","id","color","margin","PropTypes","Input","aria-describedby","CardActions","Button","CircularProgress","Component","theme","button","input","display","connect","getItem","post","then","res","catch","err","JSON","stringify","response","withRouter","withStyles","Users","collapse","isFetchingForDeleting","loadUsers","_this2","marginLeft","width","height","flex","justifyContent","alignContent","Grow","assign","in","transformOrigin","timeout","onClick","dist_default","title","columns","collapsedColumns","editable","onRowUpdate","newData","oldData","Promise","resolve","reject","alert","patch","_id","onRowDelete","setTimeout","prompt","delete","window","location","reload","detailPanel","tooltip","render","rowData","fontSize","textAlign","backgroundColor","padding","columnsFiles","files","icon","event","method","responseType","file","Blob","fileURL","URL","createObjectURL","anchor","document","download","displayName","href","click","loadAdminExams","options","actionsColumnIndex","exportButton","exportFileName","localization","header","body","emptyDataSourceMessage","editRow","deleteText","toolbar","searchTooltip","searchPlaceholder","exportTitle","exportAriaLabel","exportName","pagination","labelRowsSelect","labelDisplayedRows","firstTooltip","previousTooltip","nextTooltip","lastTooltip","convertDateMax","date","Moment","format","field","lookup","1","2","3","4","Tooltip","lastActivity","Profile","isEditing","tab","message","isSaving","handleTabsChange","changeToEditProfile","saveProfile","postPassword","handleInputPasswordChange","loadProfile","_this3","varName","newValue","_React$createElement","Paper","Tabs","aria-label","Tab","label","a11yProps","TabPanel","handleSubmitProfile","disabled","children","other","objectWithoutProperties","role","hidden","concat","aria-labelledby","Box","p","aria-controls","ChatDialog","trackScrolling","wrappedElement","getElementById","isBottom","noReadMessageTag","noReadSendToServer","postMessagesRead","addEventListener","openDialog","scroll","maxChatRefresh","refreshIntervalTime","chatRefreshInterval","currentChatRefresh","renderMessage","handleClose","handleMessageChange","postMessage","getMessages","messagesEndRef","React","createRef","messagesNoReadRef","messagesList","loadChatDialogExams","current","scrollIntoView","behavior","comments","setInterval","commentsToAdd","forEach","comment","exists","commentProp","clearInterval","newProps","element","clientHeight","scrollHeight","scrollTop","Math","abs","removeEventListener","removeDialog","updateFile","_this4","key","read","sender","ListItem","ref","marginRight","background","blue","IconButton","float","Avatar","AssignmentInd_default","deepOrange","substring","sentTime","_this5","receiver","Dialog","fullScreen","maxWidth","open","onClose","DialogTitle","edge","Close_default","DialogContent","dividers","List","map","onBlur","DialogActions","paddingLeft","paddingRight","TextField","multiline","rowsMax","Send_default","loadChatDialogRequest","Exams","currentDialog","fileUpdated","loadExams","commentsEnabled","customerNoReadCommentsCount","badgeEmail1Messages","badgeEmail2Messages","badgeEmail3Messages","badgeEmailMoreThan3Messages","badgeEmailNoMessages","components_ChatDialog","rowStyle","Badge","Mail_default","badgeContent","AdminExams","adminNoReadCommentsCount","components","Action","textTransform","size","convertDateMin","lastRead","Dropzone","hightlight","fileInputRef","openFileDialog","onFilesAdded","onDragOver","onDragLeave","onDrop","evt","array","fileListToArray","disabed","dataTransfer","list","_ref","border","borderRadius","flexDirection","accept","CloudUpload_default","Progress","progress","Upload","uploading","uploadProgress","successfullUploaded","uploadFiles","sendRequest","renderActions","prevState","promises","all","FormData","append","userId","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","Symbol","iterator","done","return","ttthis","url","Content-Type","onUploadProgress","ProgressEvent","loaded","total","copy","percentage","triggerUploadedFinished","ProgressWrapper","components_Progress","CheckCircle_default","opacity","paddingTop","boxSizing","components_Dropzone","justifyItems","overflowY","Person_default","Edit_default","Row","PictureAsPdf_default","renderProgress","AddAdminExams","activeStep","skipped","Set","steps","getSteps","showStepper","userFilter","filteredUsers","firstTimeUpdated","handleSelectedUser","handleNext","handleBack","handleSkip","handleReset","getStepContent","handledisplayName","handleSelectedCommentsEnabled","handleUserFilterChange","userOk","userNameSelected","step","renderSelectUser","renderdisplayName","renderUploadFile","tempUsers","toLowerCase","includes","alignitems","isFetchingUsers","paddingBottom","native","placeholder","helpertext","minWidth","components_Upload","has","newSkipped","isStepSkipped","values","isStepOptional","Error","add","uploadFinished","Stepper","stepProps","labelProps","optional","completed","Step","StepLabel","marginBottom","useStyles","makeStyles","root","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","mixins","content","flexGrow","MiniDrawer","_clsx3","_clsx4","useTheme","_React$useState","useState","_React$useState2","slicedToArray","setOpen","onLogout","CssBaseline","AppBar","position","clsx","Toolbar","Menu_default","noWrap","sectionDesktop","right","top","Drawer","paper","ChevronRight_default","ChevronLeft_default","Divider","Link","to","ListItemIcon","PersonAdd_default","ListItemText","primary","Group_default","NoteAdd_default","ContactMail_default","ExitToApp_default","_sectionDesktop","unit","Navbar","_this$props$auth","guestLinks","ForgotPassword","emailSent","indexOf","gutterBottom","Login","loginUser","_React$createElement2","AdapterLink","forwardRef","react_router_dom","innerRef","flexWrap","setItem","jwt_decode","Home","aboutUsRef","examsRef","contactRef","scrollIfNecessary","block","build_default","description","image","userProfile","fontWeight","lineHeight","class","ResetPassword","passwordReseted","erros","search","split","Partners","jwtToken","currentTime","Date","now","exp","App","_useState","typography","fontFamily","fontWeightLight","fontWeightRegular","fontWeightMedium","palette","main","secondary","accent","default","_useState2","muiTheme","createMuiTheme","es","ThemeProvider","components_Navbar","react_router","exact","path","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","src_App","origin","fetch","status","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.262ccce6.chunk.js","sourcesContent":["import { GET_ERRORS } from '../actions/types';\n\nconst initialState = {};\n\nexport default function(state = initialState, action ) {\n    switch(action.type) {\n        case GET_ERRORS:\n            return action.payload;\n        default: \n            return state;\n    }\n}","const isEmpty = (value) => {\n    return (\n        value === undefined ||\n        value === null ||\n        (typeof value === 'object' && Object.keys(value).length === 0) ||\n        (typeof value === 'string' && value.trim().length === 0)\n    );\n}\nexport default isEmpty;","import { SET_CURRENT_USER } from '../actions/types';\nimport isEmpty from '../validation/is-empty';\n\nconst initialState = {\n    isAuthenticated: false,\n    user: {}\n}\n\nexport default function(state = initialState, action ) {\n    switch(action.type) {\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                isAuthenticated: !isEmpty(action.payload),\n                user: action.payload\n            }\n        default: \n            return state;\n    }\n}","const INITIAL_STATE = {\n    data: [],\n    isFetching: false,\n    error:false\n}\n\nconst users = ( state = INITIAL_STATE, action) => {\n    if(action.type === 'LOAD_USERS_REQUEST' ){\n        return {\n            isFetching: true,\n            data: [],\n            error: false\n        }\n    }\n    if(action.type === 'LOAD_USERS_SUCCESS' ){\n        return {\n            isFetching: false,\n            data: action.data,\n            error: false,\n        }\n    }\n    if(action.type === 'LOAD_USERS_ERROR' ){\n        return {\n            isFetching: false,\n            data: [],\n            error: true\n        }\n    }\n    return state\n}\n\nexport default users","const INITIAL_STATE = {\n    data: [],\n    isFetching: false,\n    error:false\n}\n\nconst profile = ( state = INITIAL_STATE, action) => {\n    if(action.type === 'LOAD_PROFILE_REQUEST' ){\n        return {\n            isFetching: true,\n            data: [],\n            error: false\n        }\n    }\n    if(action.type === 'LOAD_PROFILE_SUCCESS' ){\n        return {\n            isFetching: false,\n            data: action.data,\n            error: false,\n        }\n    }\n    if(action.type === 'LOAD_PROFILE_ERROR' ){\n        return {\n            isFetching: false,\n            data: [],\n            error: true\n        }\n    }\n    return state\n}\n\nexport default profile","const INITIAL_STATE = {\n    data: [],\n    isFetching: false,\n    error:false\n}\n\nconst adminExams = ( state = INITIAL_STATE, action) => {\n    if(action.type === 'LOAD_ADMIN_EXAMS_REQUEST' ){\n        return {\n            isFetching: true,\n            data: [],\n            error: false\n        }\n    }\n    if(action.type === 'LOAD_ADMIN_EXAMS_SUCCESS' ){\n        return {\n            isFetching: false,\n            data: action.data,\n            error: false,\n        }\n    }\n    if(action.type === 'LOAD_ADMIN_EXAMS_ERROR' ){\n        return {\n            isFetching: false,\n            data: [],\n            error: true\n        }\n    }\n    return state\n}\n\nexport default adminExams","const INITIAL_STATE = {\n    data: [],\n    isFetching: false,\n    error:false\n}\n\nconst exams = ( state = INITIAL_STATE, action) => {\n    if(action.type === 'LOAD_EXAMS_REQUEST' ){\n        return {\n            isFetching: true,\n            data: [],\n            error: false\n        }\n    }\n    if(action.type === 'LOAD_EXAMS_SUCCESS' ){\n        return {\n            isFetching: false,\n            data: action.data,\n            error: false,\n        }\n    }\n    if(action.type === 'LOAD_EXAMS_ERROR' ){\n        return {\n            isFetching: false,\n            data: [],\n            error: true\n        }\n    }\n    return state\n}\n\nexport default exams","const INITIAL_STATE = {\n    data: [],\n    isFetching: false,\n    error:false,\n    file_id: null,\n}\n\nconst chatDialog = ( state = INITIAL_STATE, action) => {\n    if(action.type === 'LOAD_CHATDIALOG_REQUEST' ){\n        return {\n            isFetching: true,\n            data: [],\n            error: false,\n            file_id: action.file_id\n        }\n    }\n    if(action.type === 'LOAD_CHATDIALOG_SUCCESS' ){\n        return {\n            isFetching: false,\n            data: action.data,\n            error: false,\n            file_id: action.file_id,\n        }\n    }\n    if(action.type === 'LOAD_CHATDIALOG_ERROR' ){\n        return {\n            isFetching: false,\n            data: [],\n            error: true\n        }\n    }\n    return state\n}\n\nexport default chatDialog","import { combineReducers } from 'redux';\nimport errorReducer from './errorReducer';\nimport authReducer from './authReducer';\nimport usersReducer from './usersReducer'\nimport profileReducer from './profileReducer'\nimport adminExamsReducer from  './adminExamsReducer'\nimport examsReducer from  './examsReducer'\nimport chatDialogReducer from './chatDialogReducer'\n\nexport default combineReducers({\n    errors: errorReducer,\n    auth: authReducer,\n    users: usersReducer,\n    profile: profileReducer,\n    adminExams: adminExamsReducer,\n    exams: examsReducer,\n    chatDialog: chatDialogReducer,\n});","export const GET_ERRORS = 'GET_ERRORS';\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';","\nexport const loadUsersRequest = () => {\n    return {\n        type : 'LOAD_USERS_REQUEST'\n    }\n}\nexport const loadUsersSuccess = (data) => {\n    return {\n        type : 'LOAD_USERS_SUCCESS',\n        data\n    }   \n}\n\nexport const loadProfileRequest = () => {\n    return {\n        type : 'LOAD_PROFILE_REQUEST'\n    }\n}\nexport const loadProfileSuccess = (data) => {\n    return {\n        type : 'LOAD_PROFILE_SUCCESS',\n        data\n    }   \n}\n\nexport const loadAdminExamsRequest = () => {\n    return {\n        type : 'LOAD_ADMIN_EXAMS_REQUEST'\n    }\n}\nexport const loadAdminExamsSuccess = (data) => {\n    return {\n        type : 'LOAD_ADMIN_EXAMS_SUCCESS',\n        data\n    }   \n}\nexport const loadExamsRequest = () => {\n    return {\n        type : 'LOAD_EXAMS_REQUEST'\n    }\n}\nexport const loadExamsSuccess = (data) => {\n    return {\n        type : 'LOAD_EXAMS_SUCCESS',\n        data\n    }   \n}\nexport const loadChatDialogRequest = (file_id) => {\n    return {\n        type : 'LOAD_CHATDIALOG_REQUEST',\n        file_id\n    }\n}\nexport const loadChatDialogSuccess = (data, file_id) => {\n    return {\n        type : 'LOAD_CHATDIALOG_SUCCESS',\n        data,\n        file_id\n    }   \n}","import { put } from 'redux-saga/effects'\nimport  { loadUsersSuccess } from './../actions/actions'\nimport dotenv from 'dotenv'\ndotenv.config()\n\nfunction *getUsers(axios, actions){\n    console.log('usersSagas')    \n    const dados = yield axios.get(process.env.REACT_APP_API_HOST + '/api/users/')\n        console.log(dados.data)\n        yield put(loadUsersSuccess(dados.data))\n    \n}\nexport default getUsers","import { put } from 'redux-saga/effects'\nimport  { loadProfileSuccess } from './../actions/actions'\nimport dotenv from 'dotenv'\ndotenv.config()\n\nfunction *getProfile(axios, actions){\n    console.log('profileSagas')    \n    const dados = yield axios.get(process.env.REACT_APP_API_HOST + '/api/users/me')\n        console.log('eeeee', dados.data)\n        yield put(loadProfileSuccess(dados.data))\n    \n}\nexport default getProfile","import { put } from 'redux-saga/effects'\nimport  { loadExamsSuccess } from './../actions/actions'\nimport dotenv from 'dotenv'\ndotenv.config()\n\nfunction *getExams(axios, actions){\n    \n    const dados = yield axios.get(process.env.REACT_APP_API_HOST + '/api/files/')\n        console.log(dados.data)\n        yield put(loadExamsSuccess(dados.data))\n    \n}\nexport default getExams","import { put } from 'redux-saga/effects'\nimport  { loadAdminExamsSuccess } from './../actions/actions'\nimport dotenv from 'dotenv'\ndotenv.config()\n\nfunction *getAdminExams(axios){\n\n    const dados = yield axios.get(process.env.REACT_APP_API_HOST + '/api/files/')\n        console.log(dados.data)\n        yield put(loadAdminExamsSuccess(dados.data))\n    \n}\nexport default getAdminExams\n","import { put } from 'redux-saga/effects'\nimport  { loadChatDialogSuccess } from './../actions/actions'\nimport dotenv from 'dotenv'\ndotenv.config()\n\nfunction *getChatDialog(axios, actions){\n        const dados = yield axios.get(process.env.REACT_APP_API_HOST + '/api/comments/file/' + actions.file_id)\n        \n        yield put(loadChatDialogSuccess(dados.data, actions.file_id))\n    \n}\nexport default getChatDialog","import { takeLatest } from 'redux-saga/effects'\nimport getUsers from './usersSagas'\nimport getProfile from './profileSagas'\nimport getExams from './examsSagas'\nimport getAdminExams from './adminExamsSagas'\nimport getChatDialog from './chatDialogSagas'\n\nimport axios from 'axios'\n\nfunction *index(){\n    \n    yield takeLatest('LOAD_USERS_REQUEST', getUsers, axios)\n    yield takeLatest('LOAD_PROFILE_REQUEST', getProfile, axios)\n    yield takeLatest('LOAD_ADMIN_EXAMS_REQUEST', getAdminExams, axios)\n    yield takeLatest('LOAD_EXAMS_REQUEST', getExams, axios)\n    yield takeLatest('LOAD_CHATDIALOG_REQUEST', getChatDialog, axios)\n}\n\nexport default index","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport  createSagaMiddleware from 'redux-saga' \nimport indexSaga from './sagas/index'\n\nconst inititalState = {};\n\nconst sagaMiddleware = createSagaMiddleware()\n\n\nconst store = createStore(\n        rootReducer, \n        inititalState, \n        compose(applyMiddleware(thunk,sagaMiddleware), \n              /*  window.__REDUX_DEVTOOLS_EXTENSION__&& window.__REDUX_DEVTOOLS_EXTENSION__() */));\n\nsagaMiddleware.run(indexSaga)\n\nexport default store;","import axios from 'axios';\n\nconst setAuthToken = token => {\n   \n    if(token) {\n        axios.defaults.headers.common['Authorization'] = token;\n    }\n    else {\n        delete axios.defaults.headers.common['Authorization'];\n    }\n}\n\nexport default setAuthToken;","import axios from 'axios';\nimport { GET_ERRORS, SET_CURRENT_USER } from './types';\nimport setAuthToken from '../setAuthToken';\nimport jwt_decode from 'jwt-decode'\nimport dotenv from 'dotenv'\ndotenv.config()\n\nexport const registerUser = (user, history) => dispatch => {\n    \n    if(localStorage.getItem('jwtToken')){\n        axios.defaults.headers.common['Authorization'] = localStorage.getItem('jwtToken')\n        console.log(axios.defaults.headers.common['Authorization'])\n        axios.post(process.env.REACT_APP_API_HOST + '/api/users/register', user)\n                .then(res => history.push('/users?registrationSucessfull=true'))\n                .catch(err => {\n                    console.log(JSON.stringify(err.response))\n                    dispatch({\n                        type: GET_ERRORS,\n                        payload: err.response.data\n                    });\n                });\n    }else{\n        history.push('/login')\n    }\n    \n}\n\nexport const loginUser = (user) => dispatch => {\n    \n    axios.post(process.env.REACT_APP_API_HOST + '/api/users/login', user)\n            .then(res => {\n                console.log('res', res.data)\n                const { token } = res.data;\n                localStorage.setItem('jwtToken', token);\n                setAuthToken(token);\n                const decoded = jwt_decode(token);\n                dispatch(setCurrentUser(decoded));\n            })\n            .catch((err) => {\n                console.log(err)\n                console.log(err.response)\n                if(err && err.response){\n                    dispatch({\n                        type: GET_ERRORS,\n                        payload: err.response.data\n                    })\n                }else{\n                    console.log(err)\n                }\n                \n            });\n}\n\nexport const setCurrentUser = decoded => {\n    return {\n        type: SET_CURRENT_USER,\n        payload: decoded\n    }\n}\n\nexport const logoutUser = (history) => dispatch => {\n    localStorage.removeItem('jwtToken');\n    setAuthToken(false);\n    dispatch(setCurrentUser({}));\n    history.push('/login');\n}","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { withRouter } from 'react-router-dom'\nimport { registerUser } from '../actions/authentication'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { withStyles } from '@material-ui/styles'\nimport MenuItem   from '@material-ui/core/MenuItem'\nimport Select   from '@material-ui/core/Select'\nimport FormControl   from '@material-ui/core/FormControl'\nimport InputLabel   from '@material-ui/core/InputLabel'\nimport Input   from '@material-ui/core/Input'\nimport FormHelperText   from '@material-ui/core/FormHelperText'\nimport Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport CircularProgress from '@material-ui/core/CircularProgress' \n\nclass Register extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            username: '',\n            type: 0,\n            completename: '',\n            cpf: '',\n            address: '',\n            crmv: '',\n            technicalSupport: '',\n            phone: '',\n    //        password: '',\n    //        confirmPassword: '',\n            errors: {},\n            isFetching: false\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleSelectTypeChange = this.handleSelectTypeChange.bind(this)\n    }\n    \n    handleInputChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    handleSelectTypeChange(e){\n        console.log('e ', e)\n        this.setState({\n            type: e.target.value\n        })\n    }\n    handleSubmit(e) {\n        e.preventDefault();\n        const user = {\n            username: this.state.username,\n            type: this.state.type,\n            completename: this.state.completename,\n            cpf: this.state.cpf,\n            address: this.state.address,\n            phone: this.state.phone,\n            crmv: this.state.crmv,\n            technicalSupport: this.state.technicalSupport\n        }\n        this.setState({\n            isFetching: true\n        })\n        this.props.registerUser(user, this.props.history);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.auth.isAuthenticated) {\n    //        this.props.history.push('/')\n        }\n        this.setState({\n            isFetching: false\n        })\n        if(nextProps.errors) {\n            var errors = nextProps.errors.errors\n            console.log(errors)\n            var errorsToSend = {\n\n            }\n            if(errors && errors.length){\n                for(var i=0;i<errors.length;i++){\n                    console.log(errors[i].param)\n                    if(errors[i].param === 'username'){\n                        errorsToSend.username = errors[i].msg\n                    }else if(errors[i].param === 'password'){\n                        errorsToSend.password = errors[i].msg\n                    }\n                    else if(errors[i].param === 'confirmPassword'){\n                        errorsToSend.confirmPassword = errors[i].msg\n                    }\n                    else if(errors[i].param === 'type'){\n                        errorsToSend.type = errors[i].msg\n                    }\n                }\n                console.log(errorsToSend)\n                this.setState({\n                    errors: errorsToSend\n                })\n            }\n        }\n    }\n\n    componentDidMount() {\n        if(this.props.auth.isAuthenticated && !this.props.auth.user.admin) {\n            this.props.history.push('/');\n        }\n    }\n    \n    render() {\n        \n        \n        const { errors } = this.state\n        const classes = styles()\n  //      React.useEffect(() => {\n  //          setLabelWidth(labelRef.current.offsetWidth)\n  //        }, [])\n\n\n        return(\n            <Grid\n            container\n            spacing={0}\n            direction=\"column\"\n            alignItems=\"center\"\n            justify=\"center\"\n            style={{ minHeight: '100vh', marginTop: 50 }}\n           >\n          \n            <Grid item xs={5}>\n                    <Card className={classes.card}>\n                    <CardContent>\n                    <Typography \n                            variant=\"h5\" component=\"h2\">\n                        Casdastrar novo usuário\n\n                    </Typography>\n                    <form onSubmit={ this.handleSubmit }>\n                    <FormControl className={classes.formControl} fullWidth={true} >\n                        <InputLabel htmlFor=\"type-error\">Tipo de Usuário</InputLabel>\n                        <Select\n                        value={this.state.type}\n                        onChange={this.handleSelectTypeChange}\n                        name=\"type\"\n                        \n                        >\n                        <MenuItem value={0}>\n                            <em>Escolha tipo de usuário</em>\n                        </MenuItem>\n                        <MenuItem value={1}>Cliente</MenuItem>\n                        <MenuItem value={2}>Clínica</MenuItem>\n                        <MenuItem value={3}>Veterinário</MenuItem>\n                        <MenuItem value={4}>Administrador</MenuItem>\n                        </Select>\n                        {errors.type && (<FormHelperText id=\"type-text\" style={{color: 'red'}}>{errors.type}</FormHelperText>)}\n                    </FormControl>\n                        <FormControl className={classes.formControl} fullWidth={true} margin={PropTypes.margin}>\n                            <InputLabel htmlFor=\"username\">E-mail</InputLabel>\n                            <Input\n                            type=\"text\"\n                            id=\"username\"\n                            value={ this.state.username }\n                            name=\"username\"\n                            onChange={this.handleInputChange}\n                            aria-describedby=\"username-text\"\n                            value={ this.state.username }\n                            />\n                            {errors.username && (<FormHelperText id=\"username-text\" style={{color: 'red'}}>{errors.username}</FormHelperText>)}\n                        </FormControl>\n                        <FormControl className={classes.formControl} fullWidth={true} >\n                            <InputLabel htmlFor=\"completename\">Nome Completo</InputLabel>\n                            <Input\n                            type=\"text\"\n                            id=\"completename\"\n                            value={ this.state.completename }\n                            name=\"completename\"\n                            onChange={this.handleInputChange}\n                            aria-describedby=\"completename-text\"\n                            value={ this.state.completename }\n                            />\n                            {errors.completename && (<FormHelperText id=\"completename-text\" style={{color: 'red'}}>{errors.completename}</FormHelperText>)}\n                        </FormControl>\n                        <FormControl className={classes.formControl} fullWidth={true} >\n                            <InputLabel htmlFor=\"cpf\">CPF/CNPJ</InputLabel>\n                            <Input\n                            type=\"text\"\n                            id=\"cpf\"\n                            value={ this.state.cpf }\n                            name=\"cpf\"\n                            onChange={this.handleInputChange}\n                            aria-describedby=\"cpf-text\"\n                            value={ this.state.cpf }\n                            />\n                            {errors.cpf && (<FormHelperText id=\"cpf-text\" style={{color: 'red'}}>{errors.cpf}</FormHelperText>)}\n                        </FormControl>\n                        {this.state.type != 3 && (\n                            <FormControl className={classes.formControl} fullWidth={true} >\n                                <InputLabel htmlFor=\"address\">Endereço</InputLabel>\n                                <Input\n                                type=\"text\"\n                                id=\"address\"\n                                value={ this.state.address }\n                                name=\"address\"\n                                onChange={this.handleInputChange}\n                                aria-describedby=\"address-text\"\n                                value={ this.state.address }\n                                />\n                                {errors.address && (<FormHelperText id=\"address-text\" style={{color: 'red'}}>{errors.address}</FormHelperText>)}\n                            </FormControl>\n                        )\n                        }\n                        <FormControl className={classes.formControl} fullWidth={true} >\n                            <InputLabel htmlFor=\"phone\">Telephone de Contato</InputLabel>\n                            <Input\n                            type=\"text\"\n                            id=\"phone\"\n                            value={ this.state.phone }\n                            name=\"phone\"\n                            onChange={this.handleInputChange}\n                            aria-describedby=\"phone-text\"\n                            value={ this.state.phone }\n                            />\n                            {errors.phone && (<FormHelperText id=\"phone-text\" style={{color: 'red'}}>{errors.phone}</FormHelperText>)}\n                        </FormControl>\n                        {(this.state.type == 2 || this.state.type == 3)  && (\n                        <FormControl className={classes.formControl} fullWidth={true} >\n                            <InputLabel htmlFor=\"crmv\">CRMV</InputLabel>\n                            <Input\n                            type=\"text\"\n                            id=\"crmv\"\n                            value={ this.state.crmv }\n                            name=\"crmv\"\n                            onChange={this.handleInputChange}\n                            aria-describedby=\"crmv-text\"\n                            value={ this.state.crmv }\n                            />\n                            {errors.crmv && (<FormHelperText id=\"crmv-text\" style={{color: 'red'}}>{errors.crmv}</FormHelperText>)}\n                        </FormControl>\n                        )}\n                        {this.state.type == 2 && (\n                            <FormControl className={classes.formControl} fullWidth={true} >\n                                <InputLabel htmlFor=\"technicalSupport\">Responsável Tecnico</InputLabel>\n                                <Input\n                                type=\"text\"\n                                id=\"technicalSupport\"\n                                value={ this.state.technicalSupport }\n                                name=\"technicalSupport\"\n                                onChange={this.handleInputChange}\n                                aria-describedby=\"technicalSupport-text\"\n                                value={ this.state.technicalSupport }\n                                />\n                                {errors.technicalSupport && (<FormHelperText id=\"technicalSupport-text\" style={{color: 'red'}}>{errors.technicalSupport}</FormHelperText>)}\n                            </FormControl>\n                        )}\n                    <CardActions>\n                        {!this.state.isFetching && (<Button fullWidth={true} variant=\"contained\" color=\"primary\" type=\"submit\" >\n                            Cadastrar\n                        </Button> )}\n                        {this.state.isFetching && (\n                            <Grid\n                            container\n                            spacing={0}\n                            direction=\"column\"\n                            alignItems=\"center\"\n                            justify=\"center\"\n                            style={{marginTop: 30}}\n                          >\n                                <CircularProgress />\n                            </Grid>\n                        )}\n                    </CardActions>\n                    </form>\n                    </CardContent>\n                </Card>\n            </Grid>      \n          </Grid>\n        )\n    }\n}\n\nconst styles = theme => ({\n    button: {\n    //  margin: theme.spacing(1),\n    },\n    input: {\n      display: 'none',\n    },\n    formControl:{\n        marginTop:200\n    }\n  })\nRegister.propTypes = {\n    registerUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(mapStateToProps,{ registerUser })(withRouter(Register), withStyles(styles))","import React, { Component } from 'react';\nimport { loadUsersRequest } from '../actions/actions'\nimport { connect } from 'react-redux'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Card from '@material-ui/core/Grid'\nimport CardContent from '@material-ui/core/Grid'\nimport MaterialTable from 'material-table'\nimport Moment from 'moment'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport axios from 'axios'\nimport Grow from '@material-ui/core/Grow'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Button from '@material-ui/core/Button'\nimport dotenv from 'dotenv'\ndotenv.config()\n\nclass Users extends Component {\n    \n    constructor(props){\n        super(props)\n        this.state = {\n            collapse: true,\n            isFetchingForDeleting: false\n        }\n    }\n    \n    componentDidMount(){\n        this.props.loadUsers()\n    }\n\n    render() {\n        return (\n            <div style={{marginLeft:10, marginTop: 40, width:'100%', height:'100%'}}>\n            {this.props.isFetching || this.state.isFetchingForDeleting && (\n                            <Grid\n                            container\n                            spacing={0}\n                            direction=\"column\"\n                            alignItems=\"center\"\n                            justify=\"center\"\n                            style={{flex:1, marginTop:100,justifyContent: 'center', alignContent: 'center', alignItems: 'center'}}\n                          >\n                                <CircularProgress />\n                            </Grid>\n                        )}\n               {!this.props.isFetching && (\n               <Grow\n                in={!this.props.isFetching && !this.state.isFetchingForDeleting }\n                style={{ transformOrigin: '0 0 0' }}\n                {...(!this.props.isFetching ? { timeout: 1000 } : {})}\n                >\n                <Grid\n                    container\n                    spacing={0}\n                    direction=\"column\"\n                    alignItems=\"center\"\n                    justify=\"center\"\n                    style={{ minHeight: '100vh',  }}\n                >\n                \n                    <Grid item xs={12}>\n                    <div style={{flex: 1, alignContent: 'center', margin: 10}}><Button onClick={()=>{ this.setState({ collapse: !this.state.collapse})}}>{this.state.collapse ? 'Ver todas Colunas' :  'Ocultar Colunas'}</Button></div>\n               \n                    <MaterialTable\n                        title=\"Usuários\"\n                        columns={!this.state.collapse ? columns : collapsedColumns}\n                        data={this.props.users}\n                        editable={{\n\n                            onRowUpdate: (newData, oldData) =>\n                                new Promise((resolve, reject) => {\n                                    if(!this.state.collapse){\n                                        axios.patch(process.env.REACT_APP_API_HOST + '/api/users/' + oldData._id, newData)\n                                        .then(res => {\n                                            this.props.loadUsers()\n                                            resolve()\n                                        })\n                                       .catch(err => {\n                                            reject()\n                                       })\n                                    }else{\n                                        alert('Habilite todas as colunas para realizar essa ação')\n                                        resolve()\n                                    }\n                                    \n                                }),\n                            onRowDelete: oldData =>\n                                new Promise((resolve, reject) => {\n                                    setTimeout(() => {\n                                        {\n                                            var password = prompt('Tem certeza que está querendo deletar o usuário ' + oldData.completename + '? Serão eliminados todos os exames e bate-papos desse usuário. Se quiser prosseguir com a eliminação deste usuário por favor, digite a sua senha de administrador:')\n                                            if(password != null && password && password.length > 0){\n                                                this.setState({\n                                                    isFetchingForDeleting: true\n                                                })\n                                                axios.delete(process.env.REACT_APP_API_HOST + '/api/users/' + oldData._id, {data: {password}})\n                                                            .then(res => {\n                                                                \n                                                                setTimeout(()=>{\n                                                                    this.setState({\n                                                                        isFetchingForDeleting: false\n                                                                    })\n                                                                    window.location.reload()\n                                                                }, 5000)\n                                                                \n                                                                resolve(res)\n                                                                \n                                                            })\n                                                            .catch(err => {\n                                                               \n                                                                setTimeout(()=>{\n                                                                    this.setState({\n                                                                        isFetchingForDeleting: false\n                                                                    })\n                                                                    window.location.reload()    \n                                                                }, 5000)\n                                                                reject(err)\n                                                            })\n                                            }\n                                        }\n                                        resolve();\n                                    }, 1000);\n                                })\n                        }}\n                        detailPanel={[\n                            {\n                              tooltip: 'Ver Exames',\n                              render: rowData => {\n                                return (\n                                    <Grow\n                                        in={!this.props.isFetching}\n                                        style={{ transformOrigin: '0 0 0' }}\n                                        {...(!this.props.isFetching ? { timeout: 1000 } : {})}\n                                        >\n                                  <div\n                                    style={{\n                                      fontSize: 100,\n                                      textAlign: 'center',\n                                      color: 'white',\n                                      backgroundColor: '#43A047',\n                                      padding: 20\n                                    }}\n                                  >\n                                    <MaterialTable\n                                            title=\"Exames\"\n                                            columns={columnsFiles}\n                                            data={rowData.files}\n                                            actions={[\n                                                {\n                                                icon: 'remove_red_eye',\n                                                tooltip: 'Visualizar Arquivo',\n                                                onClick: (event, rowData) => {\n                                                axios(process.env.REACT_APP_API_HOST + '/api/files/' + rowData._id, {\n                                                        method: 'GET',\n                                                        responseType: 'blob' //Force to receive data in a Blob Format\n                                                    })\n                                                    .then(response => {\n                                                        const file = new Blob(\n                                                        [response.data], \n                                                        {type: 'application/pdf'})\n                                                        \n                                                        const fileURL = URL.createObjectURL(file)\n                                                    var anchor = document.createElement(\"a\");\n                                                    anchor.download = rowData.displayName + '.' + rowData.type;\n                                                    anchor.href = fileURL;\n                                                    anchor.click()\n                                                    //    window.open(fileURL);\n                                                    })\n                                                    .catch(error => {\n                                                        console.log(error);\n                                                    });\n                                                }\n                                                }\n                                            ]}\n                                            editable={{\n\n                                                onRowDelete: oldData =>\n                                                    new Promise((resolve, reject) => {\n                                                        axios.delete(process.env.REACT_APP_API_HOST + '/api/files/' + oldData._id)\n                                                            .then(res => {\n                                                                this.props.loadAdminExams()\n                                                                resolve(res)\n                                                            })\n                                                            .catch(err => {\n                                                                reject(err)\n                                                            })\n                                                    })\n                                            }}\n                                    options={{\n                                        actionsColumnIndex: -1,\n                                        exportButton: true,\n                                        exportFileName: 'Lista de Exames'\n                                    }}\n                                    localization={{\n                                        header: {\n                                            actions: 'Ações'\n                                        },\n                                        body: {\n                                        emptyDataSourceMessage: 'Sem dados para mostrar',\n                                        editRow: {\n                                            deleteText: 'Tem certeza que quer deletar o exame?'\n                                        }\n                                        },\n                                        toolbar: {\n                                        searchTooltip: 'Procurar',\n                                        searchPlaceholder: 'Procurar',\n                                        exportTitle: 'Exportar CSV',\n                                        exportAriaLabel: 'Exportar CSV',\n                                        exportName: 'Exportar CSV'\n\n                                        },\n                                        pagination: {\n                                        labelRowsSelect: 'Filas',\n                                        labelDisplayedRows: '{count} de {from}-{to} ',\n                                        firstTooltip: 'Primeira',\n                                        previousTooltip: 'Anterior',\n                                        nextTooltip: 'Seguinte',\n                                        lastTooltip: 'Última Página'\n                                        }\n                                    }}\n                                    />\n                                  </div>\n                                 </Grow>\n                                )\n                              },\n                            },]}\n                        options={{\n                            actionsColumnIndex: -1,\n                            exportButton: true,\n                            exportFileName: 'Usuarios'\n                          }}\n                          localization={{\n                            header: {\n                                actions: 'Ações'\n                            },\n                            body: {\n                              emptyDataSourceMessage: 'Sem dados para mostrar',\n                              editRow: {\n                                deleteText: 'Tem certeza que quer deletar o usuário?'\n                              }\n                            },\n                            toolbar: {\n                              searchTooltip: 'Procurar',\n                              searchPlaceholder: 'Procurar',\n                              exportTitle: 'Exportar CSV',\n                              exportAriaLabel: 'Exportar CSV',\n                              exportName: 'Exportar CSV'\n\n                            },\n                            pagination: {\n                              labelRowsSelect: 'Filas',\n                              labelDisplayedRows: '{count} de {from}-{to} ',\n                              firstTooltip: 'Primeira',\n                              previousTooltip: 'Anterior',\n                              nextTooltip: 'Seguinte',\n                              lastTooltip: 'Última Página'\n                            }\n                          }}\n                        />\n                    </Grid>\n             </Grid>\n             </Grow>\n             )}\n            \n            </div>\n        );\n    }\n}\nfunction convertDateMin(date){\n    return  Moment(date).format('DD/MM/YY')\n }\n function convertDateMax(date){\n    return  Moment(date).format('DD/MM/YYYY hh:mm A')\n }\nconst columns = [\n{ title: 'E-mail', field: 'username' },\n{ title: 'Nome', field: 'completename' },\n{\n    title: 'Tipo',\n    field: 'type',\n    lookup: { 1: 'Cliente', 2: 'Clínica', 3: 'Veterinário', 4: 'Admin' },\n},\n{ title: 'CPF/CNPJ', field: 'cpf' },\n{ title: 'Endereço',\n  field: 'address' },\n // render: rowData => <Tooltip title={rowData.address ? rowData.address : 'Sem Endereço definido'} placement=\"top\"><div> {( rowData.address && rowData.address.length > 5) ? (rowData.address.substring(0,5) + '...') : rowData.address} </div></Tooltip>  },\n{ title: 'Atividade', \n  field: 'lastActivity',\n  type: 'datetime', \n  render: rowData => <Tooltip title={convertDateMax(rowData.lastActivity)}><div> {convertDateMin(rowData.lastActivity) }</div></Tooltip> },\n{ title: 'Fone', field: 'phone' },\n{ title: 'Responsável  Tecnico', field: 'technicalSupport' },\n{ title: 'CRMV', field: 'crmv' },\n]\nconst collapsedColumns = [\n    { title: 'Nome', field: 'completename' },\n    {\n        title: 'Tipo',\n        field: 'type',\n        lookup: { 1: 'Cliente', 2: 'Clínica', 3: 'Veterinário', 4: 'Admin' },\n    },\n    \n    { title: 'Atividade', \n      field: 'lastActivity',\n      type: 'datetime', \n      render: rowData => <Tooltip title={convertDateMax(rowData.lastActivity)}><div> {convertDateMax(rowData.lastActivity) }</div></Tooltip> },\n   \n    ]\n\nconst columnsFiles = [\n    { title: 'Nome', field: 'displayName' },\n    { title: 'Tipo', field: 'type' },\n    { title: 'Lido', field: 'read', type: 'boolean' },\n    { title: 'Data subida', \n      field: 'lastActivity',\n      type: 'datetime', \n      render: rowData => <Tooltip title={convertDateMax(rowData.lastActivity)}><div> {convertDateMax(rowData.lastActivity) }</div></Tooltip> },\n    ]\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        isFetching: state.users.isFetching,\n        users: state.users.data,\n        error: state.users.error\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        loadUsers: () => dispatch(loadUsersRequest())\n    }\n} \n\nexport default connect(mapStateToProps, mapDispatchToProps)(Users)","import React, { Component } from 'react';\nimport { loadProfileRequest } from '../actions/actions'\nimport { connect } from 'react-redux'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Box from '@material-ui/core/Box'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport PropTypes from 'prop-types'\nimport Paper from '@material-ui/core/Paper'\nimport MenuItem   from '@material-ui/core/MenuItem'\nimport Select   from '@material-ui/core/Select'\nimport FormControl   from '@material-ui/core/FormControl'\nimport InputLabel   from '@material-ui/core/InputLabel'\nimport Input   from '@material-ui/core/Input'\nimport FormHelperText   from '@material-ui/core/FormHelperText'\nimport Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport CircularProgress from '@material-ui/core/CircularProgress' \nimport AppBar from  '@material-ui/core/AppBar' \nimport { minWidth } from '@material-ui/system';\nimport axios from 'axios'\nimport dotenv from 'dotenv'\ndotenv.config()\n\nclass Profile extends Component {\n    \n    constructor(props){\n        \n        super(props)\n        this.state = {\n            isEditing: false,\n            tab: 0,\n            errors: false,\n            message: false,\n            isSaving: false,\n            password: '',\n            confirmPassword: ''\n        }\n        \n        this.handleTabsChange = this.handleTabsChange.bind(this)\n        this.changeToEditProfile = this.changeToEditProfile.bind(this)\n        this.handleInputChange = this.handleInputChange.bind(this)\n        this.saveProfile = this.saveProfile.bind(this)\n        this.postPassword = this.postPassword.bind(this)\n        this.handleInputPasswordChange = this.handleInputPasswordChange.bind(this)\n    }\n    \n    componentDidMount(){\n        this.props.loadProfile()\n    }\n    postPassword(){\n        if(!this.state.password || !this.state.confirmPassword){\n            this.setState({\n                errors: 'Por favor, escrever senha e confirmar a mesma'\n            })\n        }else if(this.state.password.length < 6){\n            this.setState({\n                errors: 'A senha deve ter minimo 6 carateres'\n            })\n        }else if(this.state.password != this.state.confirmPassword){\n            this.setState({\n                errors: 'A senhas não coincidem'\n            })\n        }else{\n            this.setState({\n                isSaving: true\n            })\n            axios.post(process.env.REACT_APP_API_HOST + '/api/users/reset_password', {password: this.state.password,\n                                                     confirmPassword: this.state.confirmPassword})\n                  .then(res => {\n                        this.setState({\n                            password: '',\n                            confirmPassword: '',\n                            isSaving: false,\n                            message: 'Sua senha foi redefinida com sucesso'\n                        })\n                  })\n                  .catch(err => {\n                      if(err && err.response){\n                          this.setState({\n                              errors: JSON.stringify(err.response),\n                              isSaving: false\n                          })\n                      }\n                  })\n        }\n        \n    }\n    saveProfile(){\n        this.setState({\n            isSaving: true\n        })\n        axios.post(process.env.REACT_APP_API_HOST + '/api/users/me', this.props.profile)\n            .then(res => {\n                \n                this.props.profile.address = res.data.address\n                this.props.profile.cpf = res.data.cpf\n                this.props.profile.completename = res.data.completename\n                \n                this.setState({\n                    isSaving: false,\n                    isEditing: false\n                })\n            })\n            .catch(err => {\n                this.setState({\n                    errors: JSON.stringify(err.response)\n                })\n            })\n    }\n    handleInputChange(e) {\n        const varName = e.target.name\n        this.props.profile[varName] = e.target.value\n        this.setState({})\n    }\n    handleInputPasswordChange(e){\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    handleSelectTypeChange(e){\n        this.setState({\n            type: e.target.value\n        })\n    }\n    handleSubmitProfile(e) {\n        e.preventDefault();\n    }\n    handleTabsChange(event, newValue){\n        this.setState({\n            tab: newValue\n        })\n    }\n    changeToEditProfile(){\n        this.setState({\n            isEditing : true\n        })\n    }\n    render() {\n        return (\n            <div style={{marginTop: 80, marginLeft: 30, width: '100%', height: '100%', flex: 1, justifyContent: 'center', alignContent:'center'}}>\n               <Typography>\n                   Meu Perfil\n               </Typography>\n               \n               <Paper style={{marginTop:10, width: '70%'}}>\n                    <Tabs \n                    value={this.state.tab} onChange={this.handleTabsChange} aria-label=\"Meu Perfil\">\n                    <Tab label=\"Detalhes Conta\" {...a11yProps(0)} />\n                    <Tab label=\"Modificar Senha\" {...a11yProps(1)} />\n                    </Tabs>\n                <TabPanel value={this.state.tab} index={0}>\n                {!this.props.isFetching &&(\n                        <form onSubmit={ this.handleSubmitProfile }>\n                            <FormControl className={classes.formControl} fullWidth={true} >\n                                <InputLabel htmlFor=\"type-error\">Tipo de Usuário</InputLabel>\n                                <Select\n                                value={this.props.profile.type}\n                                onChange={this.handleSelectTypeChange}\n                                name=\"type\"\n                                disabled={true}\n                                >\n                                    <MenuItem value={0}>\n                                        <em>Escolha tipo de usuário</em>\n                                    </MenuItem>\n                                    <MenuItem value={1}>Cliente</MenuItem>\n                                    <MenuItem value={2}>Clínica</MenuItem>\n                                    <MenuItem value={3}>Veterinário</MenuItem>\n                                    <MenuItem value={4}>Administrador</MenuItem>\n                                </Select>\n                                \n                            </FormControl>\n                                <FormControl className={classes.formControl} fullWidth={true} margin={PropTypes.margin}>\n                                    <InputLabel htmlFor=\"username\">E-mail</InputLabel>\n                                    <Input\n                                    type=\"text\"\n                                    id=\"username\"\n                                    name=\"username\"\n                                    onChange={this.handleInputChange}\n                                    aria-describedby=\"username-text\"\n                                    onChange={ this.handleInputChange }\n                                    value={ this.props.profile.username }\n                                    disabled={true}\n                                    />\n                                    \n                                </FormControl>\n                                <FormControl className={classes.formControl} fullWidth={true} >\n                                    <InputLabel htmlFor=\"completename\">Nome Completo</InputLabel>\n                                    <Input\n                                    type=\"text\"\n                                    id=\"completename\"\n                                    name=\"completename\"\n                                    onChange={this.handleInputChange}\n                                    aria-describedby=\"completename-text\"\n                                    value={ this.props.profile.completename }\n                                    disabled={!this.state.isEditing}\n                                    />\n                                    {this.props.error.completename && (<FormHelperText id=\"completename-text\">{this.props.error.completename}</FormHelperText>)}\n                                </FormControl>\n                                <FormControl className={classes.formControl} fullWidth={true} >\n                                    <InputLabel htmlFor=\"cpf\">CPF/CNPJ</InputLabel>\n                                    <Input\n                                    type=\"text\"\n                                    id=\"cpf\"\n                                    name=\"cpf\"\n                                    aria-describedby=\"cpf-text\"\n                                    onChange={ this.handleInputChange }\n                                    value={ this.props.profile.cpf }\n                                    disabled={!this.state.isEditing}\n                                    />\n                                    {this.props.error.cpf && (<FormHelperText id=\"cpf-text\">{this.props.error.cpf}</FormHelperText>)}\n                                </FormControl>\n                                <FormControl className={classes.formControl} fullWidth={true} >\n                                    <InputLabel htmlFor=\"address\">Endereço</InputLabel>\n                                    <Input\n                                    type=\"text\"\n                                    id=\"address\"\n                                    name=\"address\"\n                                    aria-describedby=\"address-text\"\n                                    onChange={ this.handleInputChange }\n                                    value={ this.props.profile.address }\n                                    disabled={!this.state.isEditing}\n                                    />\n                                    {this.props.error.address && (<FormHelperText id=\"address-text\">{this.props.error.address}</FormHelperText>)}\n                                </FormControl>\n                            \n                            <CardActions>\n                                {!this.state.isSaving && !this.state.isEditing && \n                                    (<Button \n                                        onClick={this.changeToEditProfile}\n                                        fullWidth={true} variant=\"outlined\" color=\"primary\" type=\"submit\" >\n                                        Modificar Perfil\n                                </Button> )}\n                                {!this.state.isSaving && this.state.isEditing &&\n                                    (<Button \n                                        onClick={this.saveProfile}\n                                        fullWidth={true} variant=\"contained\" color=\"primary\" type=\"submit\" >\n                                        Salvar\n                                </Button> )}\n                                \n                                {this.state.isSaving && (\n                                    <Grid\n                                    container\n                                    spacing={0}\n                                    direction=\"column\"\n                                    alignItems=\"center\"\n                                    justify=\"center\"\n                                    style={{marginTop: 30}}\n                                >\n                                        <CircularProgress />\n                                    </Grid>\n                                )}\n                            </CardActions>\n                            </form>\n                            )}\n                </TabPanel>\n                <TabPanel value={this.state.tab} index={1}>\n                {!this.props.isFetching &&(\n                        <form onSubmit={ this.handleSubmitProfile }>\n                            \n                                <FormControl className={classes.formControl} fullWidth={true} margin={PropTypes.margin}>\n                                    <InputLabel htmlFor=\"password\">Nova senha</InputLabel>\n                                    <Input\n                                    type=\"password\"\n                                    id=\"password\"\n                                    name=\"password\"\n                                    onChange={this.handleInputPasswordChange}\n                                    aria-describedby=\"password-text\"\n                                    value={ this.state.password }\n                                    />\n                                </FormControl>\n                                <FormControl className={classes.formControl} fullWidth={true} margin={PropTypes.margin}>\n                                    <InputLabel htmlFor=\"confirmPassword\">Confirmar Nova senha</InputLabel>\n                                    <Input\n                                    type=\"password\"\n                                    id=\"confirmPassword\"\n                                    name=\"confirmPassword\"\n                                    onChange={this.handleInputPasswordChange}\n                                    aria-describedby=\"confirmPassword-text\"\n                                    value={ this.state.confirmPassword }\n                                    />\n                                </FormControl>\n                                {this.state.errors && (<FormHelperText id=\"password-text\" style={{color: 'red'}}>{this.state.errors}</FormHelperText>)}\n                                {this.state.message && (<FormHelperText id=\"password-text\" style={{color: 'green'}}>{this.state.message}</FormHelperText>)}\n                            <CardActions>\n                                {!this.state.isSaving &&\n                                    (<Button \n                                        onClick={this.postPassword}\n                                        fullWidth={true} variant=\"contained\" color=\"primary\" type=\"submit\" >\n                                        Redefinir Senha\n                                </Button> )}\n                                \n                                {this.state.isSaving && (\n                                    <Grid\n                                    container\n                                    spacing={0}\n                                    direction=\"column\"\n                                    alignItems=\"center\"\n                                    justify=\"center\"\n                                    style={{marginTop: 30}}\n                                >\n                                        <CircularProgress />\n                                    </Grid>\n                                )}\n                            </CardActions>\n                            </form>\n                            )}\n                </TabPanel>\n                </Paper>\n            </div>\n        );\n    }\n}\nconst classes = {}\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <Typography\n        component=\"div\"\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        <Box p={3}>{children}</Box>\n      </Typography>\n    );\n  }\n  \n  TabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n  };\n  \n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n\n  \n  \n\nconst mapStateToProps = (state) => {\n    return {\n        isFetching: state.profile.isFetching,\n        profile: state.profile.data,\n        error: state.profile.error\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        loadProfile: () => dispatch(loadProfileRequest())\n    }\n} \n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile)","import React, { Component } from 'react';\nimport { loadChatDialogRequest } from '../actions/actions'\nimport { connect } from 'react-redux'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\nimport { useTheme } from '@material-ui/core/styles'\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close'\nimport Button from '@material-ui/core/Button'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport SendIcon from '@material-ui/icons/Send'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport TextField from '@material-ui/core/TextField'\nimport Grow from  '@material-ui/core/Grow'\nimport ListItem from '@material-ui/core/ListItem'\nimport List from '@material-ui/core/List'\nimport axios from 'axios'\nimport dotenv from 'dotenv'\nimport PropTypes from 'prop-types'\nimport Avatar from '@material-ui/core/Avatar'\nimport AssigmentIdIcon from '@material-ui/icons/AssignmentInd'\nimport { blue, deepOrange } from '@material-ui/core/colors'\nimport Moment from 'moment'\nimport Card from  '@material-ui/core/Card'\nimport CardHeader from  '@material-ui/core/CardHeader'\nimport CardContent from  '@material-ui/core/CardContent'\ndotenv.config()\n\nconst styles = theme => ({\n    title: {\n      color: 'red',\n    }\n  });\n\nclass ChatDialog extends Component {\n    constructor(props){\n        super(props)\n        \n        this.state = {\n            openDialog: true,\n            scroll: 'paper',\n            message: '',\n            noReadMessageTag: false,\n            noReadSendToServer: false,\n            maxChatRefresh: 10,\n            refreshIntervalTime: 15000,\n            chatRefreshInterval: false,\n            currentChatRefresh: 0\n        }\n        this.renderMessage = this.renderMessage.bind(this)\n        this.handleClose = this.handleClose.bind(this)\n        this.handleMessageChange = this.handleMessageChange.bind(this)\n        this.postMessage = this.postMessage.bind(this)\n        this.getMessages = this.getMessages.bind(this)\n        this.messagesEndRef = React.createRef() \n        this.messagesNoReadRef = React.createRef() \n        this.messagesList = React.createRef()\n    }\n    \n    componentDidMount(){\n            this.props.loadChatDialogExams(this.props.file._id)\n    }\n    componentDidUpdate() {\n        if(this.messagesNoReadRef && this.messagesNoReadRef.current){\n            if(document.getElementById('messages-container')){\n                document.getElementById('messages-container').addEventListener('scroll', this.trackScrolling, false)\n                this.messagesNoReadRef.current.scrollIntoView({behavior: 'smooth'})\n                if(this.props && this.props.comments && this.props.comments && this.props.comments.length < 4 \n                    && !this.state.noReadSendToServer){\n                    this.postMessagesRead()\n                }\n            }\n            \n        }else{\n            if(this.messagesEndRef && this.messagesEndRef.current)\n            this.messagesEndRef.current.scrollIntoView({behavior: 'smooth'})\n        }\n        if(!this.state.chatRefreshInterval){\n            this.state.chatRefreshInterval = setInterval(this.getMessages, this.state.refreshIntervalTime);\n        }\n      }\n      getMessages(){\n          console.log('getMessages!')\n        axios.get(process.env.REACT_APP_API_HOST + '/api/comments/file/' + this.props.file._id)\n        .then((data) => {\n            var comments = data.data\n            if(comments && comments.length > this.props.comments.length){\n                var commentsToAdd = []\n                comments.forEach(comment => {\n                    var exists = false\n                    this.props.comments.forEach(commentProp => {\n                        if(comment._id === commentProp._id) exists = true\n                    })\n                    if(!exists) commentsToAdd.push(comment)\n                })\n                commentsToAdd.forEach(comment => {\n                    this.props.comments.push(comment)\n                })\n                \n                this.state.noReadMessageTag = false\n                this.state.noReadSendToServer = false\n            }\n            this.setState({\n                currentChatRefresh: this.state.currentChatRefresh ++\n            })\n            if(this.state.currentChatRefresh >= this.state.maxChatRefresh){\n                clearInterval(this.state.chatRefreshInterval)\n                this.setState({\n                    chatRefreshInterval: false\n                })\n                console.log('clearInterval because -> this.state.currentChatRefresh >= this.state.maxChatRefresh')\n            }\n        })\n        .catch((error) => {\n            clearInterval(this.state.chatRefreshInterval)\n            this.setState({\n                chatRefreshInterval: false\n            })\n            console.log('clearInterval because ERROR', JSON.stringify(error))\n        })\n      }\n    componentWillReceiveProps(newProps){\n        /*\n        setTimeout(()=> {\n            console.log(\"document.getElementById('messages-container')\",document.getElementById('messages-container'))\n            if(this.messagesNoReadRef && this.messagesNoReadRef.current){\n                if(document.getElementById('messages-container')){\n                    document.getElementById('messages-container').addEventListener('scroll', this.trackScrolling, false)\n                }\n                \n            }else{\n                if(this.messagesEndRef && this.messagesEndRef.current)\n                this.messagesEndRef.current.scrollIntoView({behavior: 'smooth'})\n            }\n            \n        }, 1500)\n        */\n    }\n    isBottom(element) {\n        if(element){\n            console.log( 'element.clientHeight', element.clientHeight)\n            console.log( 'element.scrollHeight - element.scrollTop', element.scrollHeight - element.scrollTop)\n            return Math.abs((element.scrollHeight - element.scrollTop)  - element.clientHeight) < 60;\n        }else{\n            console.log('in the scrolling element doesnt exist !!!!!!!')\n        }\n      }\n      \n      componentWillUnmount() {\n          if(document.getElementById('messages-container')){\n            document.getElementById('messages-container').removeEventListener('scroll', this.trackScrolling);\n          }\n          clearInterval(this.state.chatRefreshInterval)\n            this.setState({\n                chatRefreshInterval: false\n            })\n            console.log('clearInterval because UNMOUNT')\n      }\n      \n      trackScrolling = () => {\n        const wrappedElement = document.getElementById('messages-container');\n        console.log('scrooling')\n        if (this.isBottom(wrappedElement)) {\n            if(this.state.noReadMessageTag && !this.state.noReadSendToServer) this.postMessagesRead()\n\n            if(document.getElementById('messages-container')){\n                document.getElementById('messages-container').addEventListener('scroll', this.trackScrolling, false)\n            }\n        }\n    }\n    handleClose(){\n        this.setState({\n            openDialog: false,\n            noReadMessageTag: false\n        })\n        this.props.removeDialog()\n    }\n    handleMessageChange(e){\n        this.setState({\n            message: e.target.value\n        })\n    }\n    postMessagesRead(){\n        console.log('postMessagesRead')\n        axios.patch(process.env.REACT_APP_API_HOST + '/api/comments/read/file/' + this.props.file._id, {})\n                .then(file => {\n                    this.setState({\n                        noReadSendToServer: true\n                    })\n                    if(file && file.data){\n                        this.props.updateFile(file.data)\n                    }\n                    \n                })\n                .catch(err => {\n                    console.log('error trying to update as read messages')\n                })\n    }\n    renderMessage(comment, index){\n        const { classes } = this.props\n        console.log(comment == null)\n        return (\n\n          <div key={comment._id}  >\n          {!this.state.noReadMessageTag && !comment.read && comment.sender._id != this.props.auth.user._id && (\n              <ListItem  style={{width: '100%'}} ref={this.messagesNoReadRef}>\n              <Card style={{marginLeft: 'auto', marginRight: 'auto', background: blue[10]}}>\n                      <span style={{fontSize: 10, marginTop: -5, marginLeft:5, marginRight: 5}}>Mensagens não lidas</span>\n                  \n              </Card>\n              </ListItem>\n          )}\n            <Grow \n                in={true}\n                style={{ transformOrigin: '0 0 0' }}\n                {...(true ? { timeout: 1000 } : {})}\n            >\n                <ListItem  style={{width: '100%'}}>\n                    <span style={{marginLeft: comment.sender._id === this.props.auth.user._id ? '' : 'auto'}}>\n                {comment.sender.admin && \n                (\n                        <IconButton style={{float: comment.sender._id === this.props.auth.user._id ? 'left' : 'right'}} onClick={()=>{ \n                                                                                                                                console.log('comment.sender._id', comment.sender._id)\n                                                                                                                                console.log('this.props.auth.user._id', this.props.auth.user._id)\n                                                                                                                            }}>\n                            <Avatar aria-label=\"Recipe\" style={{ color: '#fff', backgroundColor: blue[500], }}>\n                                <AssigmentIdIcon />\n                            </Avatar>\n                        </IconButton>\n                )\n                }\n                {!comment.sender.admin && \n                        (\n                            <IconButton style={{float: comment.sender._id === this.props.auth.user._id ? 'left' : 'right'}} onClick={()=>{ \n                                                                                                                                    }}>\n                                <Avatar style={{color: '#fff',backgroundColor: deepOrange[500]}}>\n                                {comment.sender.completename \n                                && comment.sender.completename.length\n                                && comment.sender.completename.length > 0 ? \n                                comment.sender.completename.substring(0,1) : comment.sender.username.substring(0,1)}\n                                </Avatar>\n                            </IconButton>\n                        )\n                }\n                <Card style={{background: comment.sender.admin ? blue[50] : 'white'}}>\n                    <CardContent>\n                        <div><span style={{fontSize:11, float: 'left',marginRight:10}}>{comment.sender.completename}</span>   <span  style={{fontSize:10, float: 'left', color: 'gray'}}>{convertDate(comment.sentTime) }</span></div>\n                        <Typography variant=\"body2\"  component=\"p\" style={{marginTop: 20}}>\n                                {comment.message}\n                        </Typography>\n                    </CardContent>\n                     </Card>\n                </span>\n                </ListItem>\n            </Grow>\n            {!this.state.noReadMessageTag && !comment.read && comment.sender._id != this.props.auth.user._id && (this.state.noReadMessageTag = true)}\n          </div>\n        )\n    }\n\n    \n    postMessage(){\n        if(this.state.message && this.state.message.length > 0){\n            const comment = {\n                message: this.state.message,\n                file: this.props.file._id,\n                sender: this.props.auth.user._id,\n                receiver: this.props.auth.user._id === this.props.file.user._id ? this.props.file.admin._id : this.props.file.user._id,\n            }\n            this.setState({\n                message: ''\n            })\n            axios.post(process.env.REACT_APP_API_HOST + '/api/comments/file/' + this.props.file._id, comment)\n                    .then(res => {\n                        this.props.loadChatDialogExams(this.props.file._id)\n                    })\n                    .catch(err => {\n                        alert('error')\n                    })\n        }\n    }\n    render() { \n        return (\n            <Dialog\n                fullScreen={false}\n                fullWidth={true}\n                maxWidth='lg'\n                style={{ height: '90% !important' }}\n                open={this.state.openDialog}\n                scroll={this.state.scroll}\n                onClose={this.handleClose}\n                aria-labelledby=\"scroll-dialog-title\"\n            >\n                <DialogTitle id=\"scroll-dialog-title\">\n                        Messagens do exame: {this.props.file.displayName} \n                    <IconButton edge=\"end\" color=\"inherit\" onClick={this.handleClose} aria-label=\"close\" style={{float:'right'}}>\n                    <CloseIcon />\n                    </IconButton>\n                </DialogTitle>\n                    <DialogContent dividers={this.state.scroll === 'paper'} style={{background: '#eee'}} id=\"messages-container\">\n                        <List style={{width:'100%', minHeight: 310, margin:10,}} ref={this.messagesList}>\n                                {(this.state.noReadMessageTag = false)}\n                                {this.props.comments && this.props.comments.length > 0 && this.props.comments.map(this.renderMessage) }\n                                <ListItem ref={this.messagesEndRef} onBlur={()=>{ console.log('focused')}}/>\n                        </List>\n                        \n                    </DialogContent>\n                    <DialogActions style={{paddingLeft:25, paddingRight: 25, }}>\n                                <TextField\n                                    label=\"Faça sua pergunta...\"\n                                    multiline\n                                    rowsMax=\"3\"\n                                    value={this.state.message}\n                                    onChange={this.handleMessageChange}\n                                    margin=\"normal\"\n                                    variant=\"outlined\"\n                                    fullWidth={true}\n                                />\n                                <IconButton edge=\"end\" color=\"inherit\" onClick={this.postMessage} style={{float: 'right'}}>\n                                    <SendIcon />\n                                </IconButton>\n                    </DialogActions>\n            </Dialog>\n        );\n    }\n}\nChatDialog.propTypes = {\n    auth: PropTypes.object.isRequired\n}\nfunction convertDate(date){\n    return  Moment(date).format('DD/MM/YYYY hh:mm A')\n    }\nconst mapStateToProps = (state) => {\n    return {\n        isFetching: state.chatDialog.isFetching,\n        comments: state.chatDialog.data,\n        error: state.chatDialog.error,\n        auth: state.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        loadChatDialogExams: (file_id) => dispatch(loadChatDialogRequest(file_id))\n    }\n} \nexport default connect(mapStateToProps, mapDispatchToProps)(ChatDialog)","import React, { Component } from 'react';\nimport { loadExamsRequest } from '../actions/actions'\nimport { connect } from 'react-redux'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Card from '@material-ui/core/Grid'\nimport CardContent from '@material-ui/core/Grid'\nimport MaterialTable from 'material-table'\nimport Moment from 'moment'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport axios from 'axios'\nimport Grow from '@material-ui/core/Grow'\nimport Badge from '@material-ui/core/Badge'\nimport MailIcon from '@material-ui/icons/Mail'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport dotenv from 'dotenv'\nimport ChatDialog from './ChatDialog'\n\ndotenv.config()\n\nclass Exams extends Component {\n    \n    constructor(props){\n        super(props)\n        this.state = {\n            currentDialog: null\n        }\n        this.removeDialog = this.removeDialog.bind(this)\n        this.updateFile = this.updateFile.bind(this)\n    }\n    updateFile(fileUpdated){\n        console.log('updateFile', JSON.stringify(fileUpdated))\n        for(var i=0;i<this.props.exams.length;i++){\n            if(this.props.exams[i]._id === fileUpdated._id){\n                this.props.exams[i] = fileUpdated\n                console.log('coinciden! intento cambiar! despues del cambio...', this.props.exams[i])\n            }\n        }\n        this.setState({})\n    }\n    componentDidMount(){\n        this.props.loadExams()\n    }\n    removeDialog(){\n        this.setState({\n            currentDialog: null\n        })\n    }\n    render() {\n        return (\n            <div style={{marginLeft:10, marginTop: 40, width:'100%', height:'100%'}}>\n            {this.props.isFetching && (\n                            <Grid\n                            container\n                            spacing={0}\n                            direction=\"column\"\n                            alignItems=\"center\"\n                            justify=\"center\"\n                            style={{flex:1, marginTop:100,justifyContent: 'center', alignContent: 'center', alignItems: 'center'}}\n                          >\n                                <CircularProgress />\n                            </Grid>\n                        )}\n               {!this.props.isFetching && (\n               <Grow\n                in={!this.props.isFetching}\n                style={{ transformOrigin: '0 0 0' }}\n                {...(!this.props.isFetching ? { timeout: 1000 } : {})}\n                >\n                    <Grid\n                            container\n                            spacing={0}\n                            direction=\"column\"\n                            alignItems=\"center\"\n                            justify=\"center\"\n                            style={{ minHeight: '100vh',  }}\n                        >\n                        \n                            <Grid item xs={12}>\n                            <MaterialTable\n                                title=\"Exames\"\n                                columns={columns}\n                                data={this.props.exams}\n                                actions={[\n                                    {\n                                    icon: 'remove_red_eye',\n                                    tooltip: 'Visualizar Arquivo',\n                                    onClick: (event, rowData) => {\n                                    axios(process.env.REACT_APP_API_HOST + '/api/files/' + rowData._id, {\n                                            method: 'GET',\n                                            responseType: 'blob' //Force to receive data in a Blob Format\n                                        })\n                                        .then(response => {\n                                            \n                                            const file = new Blob(\n                                            [response.data], \n                                            {type: 'application/pdf'});\n                                            const fileURL = URL.createObjectURL(file);\n                                            var anchor = document.createElement(\"a\");\n                                            anchor.download = rowData.displayName + '.' + rowData.type;\n                                            anchor.href = fileURL;\n                                            anchor.click()\n                                        //    window.open(fileURL);\n                                        })\n                                        .catch(error => {\n                                            console.log(error);\n                                        });\n                                    }\n                                    },\n                                    rowData => ({\n                                        icon: rowData.commentsEnabled ?  (rowData.customerNoReadCommentsCount === 0 || !rowData.customerNoReadCommentsCount ? badgeEmailNoMessages : (rowData.customerNoReadCommentsCount === 1 ? badgeEmail1Messages : (rowData.customerNoReadCommentsCount === 2 ? badgeEmail2Messages : (rowData.customerNoReadCommentsCount === 3 ? badgeEmail3Messages : badgeEmailMoreThan3Messages)))) : '',\n                                        tooltip: rowData.commentsEnabled ? 'Mensagens' : '',\n                                        onClick: (event, rowData) => {\n                                            this.setState({\n                                                currentDialog: <ChatDialog updateFile={this.updateFile} file={rowData} removeDialog={this.removeDialog}/>\n                                            })\n                                        },\n                                        disabled: !rowData.commentsEnabled ,\n                                        \n                                      })\n                                ]}\n                                \n                                options={{\n                                    actionsColumnIndex: -1,\n                                    exportButton: true,\n                                    exportFileName: 'Lista de Exames',\n                                    rowStyle: rowData => {\n                                        if(rowData.read) {\n                                          return {backgroundColor: '#EEE'};\n                                        }else{\n                                           return { backgroundColor: 'white' }\n                                        }\n                                      },\n                                      \n                                }}\n                                localization={{\n                                    header: {\n                                        actions: 'Ações'\n                                    },\n                                    body: {\n                                    emptyDataSourceMessage: 'Sem dados para mostrar',\n                                    editRow: {\n                                        deleteText: 'Tem certeza que quer deletar o exame?'\n                                    }\n                                    },\n                                    toolbar: {\n                                    searchTooltip: 'Procurar',\n                                    searchPlaceholder: 'Procurar',\n                                    exportTitle: 'Exportar CSV',\n                                    exportAriaLabel: 'Exportar CSV',\n                                    exportName: 'Exportar CSV'\n\n                                    },\n                                    pagination: {\n                                    labelRowsSelect: 'Filas',\n                                    labelDisplayedRows: '{count} de {from}-{to} ',\n                                    firstTooltip: 'Primeira',\n                                    previousTooltip: 'Anterior',\n                                    nextTooltip: 'Seguinte',\n                                    lastTooltip: 'Última Página'\n                                    }\n                                }}\n                                />\n                            </Grid>\n                    </Grid>\n                    \n             </Grow>\n             )}\n             <div>\n                        {this.state.currentDialog}\n                    </div>\n            </div>\n        );\n    }\n}\nconst badgeEmailNoMessages = () => \n (\n    <Badge  color=\"primary\">\n          <MailIcon />\n        </Badge>\n  )\n  const badgeEmail1Messages = () => (\n    <Badge  badgeContent={1} color=\"primary\">\n          <MailIcon />\n        </Badge>\n  )\n  const badgeEmail2Messages = () => (\n    <Badge  badgeContent={2} color=\"primary\">\n          <MailIcon />\n        </Badge>\n  )\n  const badgeEmail3Messages = () => (\n    <Badge  badgeContent={3} color=\"primary\">\n          <MailIcon />\n        </Badge>\n  )\n  const badgeEmailMoreThan3Messages = () => (\n    <Badge  badgeContent=\"+3\" color=\"primary\">\n          <MailIcon />\n        </Badge>\n  )\nfunction convertDateMin(date){\n    return  Moment(date).format('DD/MM/YY')\n }\n function convertDateMax(date){\n    return  Moment(date).format('DD/MM/YYYY hh:mm A')\n }\nconst columns = [\n{ title: 'Nome', field: 'displayName' },\n{ title: 'Tipo', field: 'type' },\n{ title: 'Lido', field: 'read', type: 'boolean' },\n{ title: 'Data subida', \n  field: 'lastActivity',\n  type: 'datetime', \n  render: rowData => <Tooltip title={convertDateMax(rowData.lastActivity)}><div> {convertDateMax(rowData.lastActivity) }</div></Tooltip> },\n]\nconst mapStateToProps = (state) => {\n    return {\n        isFetching: state.exams.isFetching,\n        exams: state.exams.data,\n        error: state.exams.error\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        loadExams: () => dispatch(loadExamsRequest())\n    }\n} \n\nexport default connect(mapStateToProps, mapDispatchToProps)(Exams)","import React, { Component } from 'react';\nimport { loadAdminExamsRequest } from '../actions/actions'\nimport { connect } from 'react-redux'\nimport ChatDialog from './ChatDialog'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Card from '@material-ui/core/Grid'\nimport CardContent from '@material-ui/core/Grid'\nimport MaterialTable from 'material-table'\nimport Moment from 'moment'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport axios from 'axios'\nimport Grow from '@material-ui/core/Grow'\nimport Button from '@material-ui/core/Button'\nimport Badge from '@material-ui/core/Badge'\nimport MailIcon from '@material-ui/icons/Mail'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport dotenv from 'dotenv'\ndotenv.config()\n\nclass AdminExams extends Component {\n    \n    constructor(props){\n        super(props)\n        this.state= {\n\n        }\n        this.removeDialog = this.removeDialog.bind(this)\n        this.updateFile = this.updateFile.bind(this)\n    }\n    updateFile(fileUpdated){\n        console.log('updateFile', JSON.stringify(fileUpdated))\n        for(var i=0;i<this.props.adminExams.length;i++){\n            if(this.props.adminExams[i]._id === fileUpdated._id){\n                this.props.adminExams[i] = fileUpdated\n                console.log('coinciden! intento cambiar! despues del cambio...', this.props.adminExams[i])\n            }\n        }\n        this.setState({})\n    }\n    componentDidMount(){\n        this.props.loadAdminExams()\n    }\n    removeDialog(){\n        this.setState({\n            currentDialog: null\n        })\n    }\n    render() {\n        return (\n            <div style={{marginLeft:10, marginTop: 40, width:'100%', height:'100%'}}>\n            {this.props.isFetching && (\n                            <Grid\n                            container\n                            spacing={0}\n                            direction=\"column\"\n                            alignItems=\"center\"\n                            justify=\"center\"\n                            style={{flex:1, marginTop:100,justifyContent: 'center', alignContent: 'center', alignItems: 'center'}}\n                          >\n                                <CircularProgress />\n                            </Grid>\n                        )}\n               {!this.props.isFetching && (\n               <Grow\n                in={!this.props.isFetching}\n                style={{ transformOrigin: '0 0 0' }}\n                {...(!this.props.isFetching ? { timeout: 1000 } : {})}\n                >\n               <Grid\n                    container\n                    spacing={0}\n                    direction=\"column\"\n                    alignItems=\"center\"\n                    justify=\"center\"\n                    style={{ minHeight: '100vh',  }}\n                >\n                \n                    <Grid item xs={12}>\n                    <MaterialTable\n                        title=\"Exames\"\n                        columns={columns}\n                        data={this.props.adminExams}\n                        actions={[\n                            {\n                              icon: 'remove_red_eye',\n                              tooltip: 'Visualizar Arquivo',\n                              onClick: (event, rowData) => {\n                               axios(process.env.REACT_APP_API_HOST + '/api/files/' + rowData._id, {\n                                    method: 'GET',\n                                    responseType: 'blob' //Force to receive data in a Blob Format\n                                })\n                                .then(response => {\n                                    const file = new Blob(\n                                      [response.data], \n                                      {type: 'application/pdf'})\n                                      \n                                const fileURL = URL.createObjectURL(file)\n                                var anchor = document.createElement(\"a\");\n                                anchor.download = rowData.displayName + '.' + rowData.type;\n                                anchor.href = fileURL;\n                                anchor.click()\n                                //    window.open(fileURL);\n                                })\n                                .catch(error => {\n                                    console.log(error);\n                                });\n                              }\n                            },\n                            rowData => ({\n                                icon: rowData.commentsEnabled ?  (rowData.adminNoReadCommentsCount === 0 || !rowData.adminNoReadCommentsCount ? badgeEmailNoMessages : (rowData.adminNoReadCommentsCount === 1 ? badgeEmail1Messages : (rowData.adminNoReadCommentsCount === 2 ? badgeEmail2Messages : (rowData.adminNoReadCommentsCount === 3 ? badgeEmail3Messages : badgeEmailMoreThan3Messages)))) : '',\n                                tooltip: rowData.commentsEnabled ? 'Mensagens' : '',\n                                onClick: (event, rowData) => {\n                                    this.setState({\n                                        currentDialog: <ChatDialog updateFile={this.updateFile} file={rowData} removeDialog={this.removeDialog}/>\n                                    })\n                                },\n                                disabled: !rowData.commentsEnabled ,\n                                \n                              })\n                          ]}\n                          components={[\n                                  {\n                                    Action: props => (\n                                    <Button\n                                        onClick={(event) => props.action.onClick(event, props.data)}\n                                        color=\"primary\"\n                                        variant=\"contained\"\n                                        style={{textTransform: 'none'}}\n                                        size=\"small\"\n                                    >\n                                        Olhar\n                                    </Button>\n                                    ),\n                                },\n                                {\n                                    Action: props => (\n                                    <Button\n                                        onClick={(event) => props.action.onClick(event, props.data)}\n                                        color=\"primary\"\n                                        variant=\"contained\"\n                                        style={{textTransform: 'none'}}\n                                        size=\"small\"\n                                    >\n                                        Deletar\n                                    </Button>\n                                    ),\n                                }\n                        ]}\n                        editable={{\n                            onRowUpdate: (newData, oldData) =>\n                                new Promise((resolve, reject) => {\n                                        console.log('newData', newData)\n                                        \n                                        axios.patch(process.env.REACT_APP_API_HOST + '/api/files/' + oldData._id, newData)\n                                        .then(res => {\n                                            this.props.loadAdminExams()\n                                            resolve()\n                                        })\n                                       .catch(err => {\n                                            reject()\n                                       })\n                                      \n                                    }),\n                            onRowDelete: oldData =>\n                                new Promise((resolve, reject) => {\n                                    axios.delete(process.env.REACT_APP_API_HOST + '/api/files/' + oldData._id)\n                                        .then(res => {\n                                            this.props.loadAdminExams()\n                                            resolve(res)\n                                        })\n                                        .catch(err => {\n                                            reject(err)\n                                        })\n                                })\n                        }}\n                        options={{\n                            actionsColumnIndex: -1,\n                            exportButton: true,\n                            exportFileName: 'Lista de Exames'\n                          }}\n                          localization={{\n                            header: {\n                                actions: 'Ações'\n                            },\n                            body: {\n                              emptyDataSourceMessage: 'Sem dados para mostrar',\n                              editRow: {\n                                deleteText: 'Tem certeza que quer deletar o exame?'\n                              }\n                            },\n                            toolbar: {\n                              searchTooltip: 'Procurar',\n                              searchPlaceholder: 'Procurar',\n                              exportTitle: 'Exportar CSV',\n                              exportAriaLabel: 'Exportar CSV',\n                              exportName: 'Exportar CSV'\n\n                            },\n                            pagination: {\n                              labelRowsSelect: 'Filas',\n                              labelDisplayedRows: '{count} de {from}-{to} ',\n                              firstTooltip: 'Primeira',\n                              previousTooltip: 'Anterior',\n                              nextTooltip: 'Seguinte',\n                              lastTooltip: 'Última Página'\n                            }\n                          }}\n                        />\n                    </Grid>\n             </Grid>\n             </Grow>\n             )}\n             <div>\n                {this.state.currentDialog}\n            </div>\n            </div>\n        );\n    }\n}\nconst badgeEmailNoMessages = () => \n (\n    <Badge  color=\"primary\">\n          <MailIcon />\n        </Badge>\n  )\n  const badgeEmail1Messages = () => (\n    <Badge  badgeContent={1} color=\"primary\">\n          <MailIcon />\n        </Badge>\n  )\n  const badgeEmail2Messages = () => (\n    <Badge  badgeContent={2} color=\"primary\">\n          <MailIcon />\n        </Badge>\n  )\n  const badgeEmail3Messages = () => (\n    <Badge  badgeContent={3} color=\"primary\">\n          <MailIcon />\n        </Badge>\n  )\n  const badgeEmailMoreThan3Messages = () => (\n    <Badge  badgeContent=\"+3\" color=\"primary\">\n          <MailIcon />\n        </Badge>\n  )\nfunction convertDateMin(date){\n    if(date != null){\n        return  Moment(date).format('DD/MM/YY')\n    }else{\n        return '-'\n    }\n }\n function convertDateMax(date){\n    if(date != null){\n        return  Moment(date).format('DD/MM/YYYY hh:mm A')\n    }else{\n        return '-'\n    }\n }\nconst columns = [\n{ title: 'Nome', field: 'displayName' },\n{ title: 'Subido', \n  field: 'lastActivity',\n  type: 'datetime', \n  render: rowData => <Tooltip title={convertDateMax(rowData.lastActivity)}><div> {convertDateMin(rowData.lastActivity) }</div></Tooltip> },\n{ title: 'Usuário', field: 'user.completename' },\n//{ title: 'Tipo', field: 'type' },\n{ title: 'Lido', field: 'read', type: 'boolean' },\n\n{ title: 'Arquivo lido', \n  field: 'lastRead',\n  type: 'datetime', \n  render: rowData => <Tooltip title={convertDateMax(rowData.lastRead)}><div> {convertDateMin(rowData.lastRead) }</div></Tooltip> },\n  { title: 'Mensagens', field: 'commentsEnabled', type: 'boolean' },\n  { title: 'Msgs Não lidas', field: 'adminNoReadCommentsCount'},\n\n]\nconst mapStateToProps = (state) => {\n    return {\n        isFetching: state.adminExams.isFetching,\n        adminExams: state.adminExams.data,\n        error: state.adminExams.error\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        loadAdminExams: () => dispatch(loadAdminExamsRequest())\n    }\n} \n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminExams)","import React, { Component } from \"react\";\nimport CloudUpload from '@material-ui/icons/CloudUpload'\n\nclass Dropzone extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { hightlight: false };\n    this.fileInputRef = React.createRef();\n\n    this.openFileDialog = this.openFileDialog.bind(this);\n    this.onFilesAdded = this.onFilesAdded.bind(this);\n    this.onDragOver = this.onDragOver.bind(this);\n    this.onDragLeave = this.onDragLeave.bind(this);\n    this.onDrop = this.onDrop.bind(this);\n  }\n\n  openFileDialog() {\n    if (this.props.disabled) return;\n    this.fileInputRef.current.click();\n  }\n\n  onFilesAdded(evt) {\n    if (this.props.disabled) return;\n    const files = evt.target.files;\n    if (this.props.onFilesAdded) {\n      const array = this.fileListToArray(files);\n      this.props.onFilesAdded(array);\n    }\n  }\n\n  onDragOver(event) {\n    event.preventDefault();\n    if (this.props.disabed) return;\n    this.setState({ hightlight: true });\n  }\n\n  onDragLeave(event) {\n    this.setState({ hightlight: false });\n  }\n\n  onDrop(event) {\n    event.preventDefault();\n    if (this.props.disabed) return;\n    const files = event.dataTransfer.files;\n    if (this.props.onFilesAdded) {\n      const array = this.fileListToArray(files);\n      this.props.onFilesAdded(array);\n    }\n    this.setState({ hightlight: false });\n  }\n\n  fileListToArray(list) {\n    const array = [];\n    for (var i = 0; i < list.length; i++) {\n      array.push(list.item(i));\n    }\n    return array;\n  }\n\n  render() {\n    return (\n      <div \n        style={{height: 200,width: 200, backgroundColor: '#fff', border: '2px dashed rgb(187, 186, 186)', borderRadius: '50%', display: 'flex', alignItems: 'center', justifyContent: 'center',flexDirection: 'column', fontSize: 16,  backgroundColor: this.state.hightlight ? 'rgb(157, 216, 255)' : '' , cursor: this.props.disabled ? \"default\" : \"pointer\"}}\n        onDragOver={this.onDragOver}\n        onDragLeave={this.onDragLeave}\n        onDrop={this.onDrop}\n        onClick={this.openFileDialog}\n      >\n        <input\n          ref={this.fileInputRef}\n          style={{display: 'none'}}\n          type=\"file\"\n          accept=\"application/pdf\"\n          onChange={this.onFilesAdded}\n        />\n        <CloudUpload\n          \n        />\n        <span>Upload Exames </span>\n      </div>\n    );\n  }\n}\n\nexport default Dropzone;","import React, { Component } from \"react\";\n\nclass Progress extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <div style ={{width: '87%', height: 8, backgroundColor:'#3863ff', borderRadius: 5,marginRight: 15, marginTop: 5, float: 'right'}}>\n        <div style={{ backgroundColor: '#3d67fd', height: '100%',  margin: 0, borderRadius: 5, width: this.props.progress + \"%\" }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Progress;","import React, { Component } from 'react'\nimport styles from './css/Upload.css'\nimport Dropzone from './Dropzone'\nimport Progress from \"./Progress\";\nimport CheckCircle from '@material-ui/icons/CheckCircle'\nimport Button from '@material-ui/core/Button'\nimport axios from 'axios'\nimport Typography from '@material-ui/core/Typography'\nimport PersonIcon from '@material-ui/icons/Person'\nimport PdfIcon from '@material-ui/icons/PictureAsPdf'\nimport EditIcon from '@material-ui/icons/Edit'\nimport { ListItem, List } from '@material-ui/core';\nimport dotenv from 'dotenv'\ndotenv.config()\n\nclass Upload extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        files: [],\n        uploading: false,\n        uploadProgress: {},\n        successfullUploaded: false\n      };\n  \n      this.onFilesAdded = this.onFilesAdded.bind(this);\n      this.uploadFiles = this.uploadFiles.bind(this);\n      this.sendRequest = this.sendRequest.bind(this);\n      this.renderActions = this.renderActions.bind(this);\n      this.sendRequest = this.sendRequest.bind(this)\n    }\n    componentDidMount(){\n      console.log(this.props)\n      console.log(JSON.stringify(styles))\n    }\n    onFilesAdded(files) {\n      this.setState(prevState => ({\n        files: prevState.files.concat(files)\n      }));\n    }\n  \n    async uploadFiles() {\n      this.setState({ uploadProgress: {}, uploading: true });\n      const promises = [];\n      this.state.files.forEach(file => {\n        promises.push(this.sendRequest(file));\n      });\n      try {\n        await Promise.all(promises);\n  \n        this.setState({ successfullUploaded: true, uploading: false });\n      } catch (e) {\n        // Not Production ready! Do some error handling here instead...\n        this.setState({ successfullUploaded: true, uploading: false });\n      }\n    }\n  \n    sendRequest(file) {\n      return new Promise((resolve, reject) => {\n        \n  \n        const data = new FormData()\n        data.append('userId', this.props.data.userId)\n        data.append('displayName', this.props.data.displayName)\n        data.append('commentsEnabled', this.props.data.commentsEnabled)\n        data.append('adminId', this.props.admin._id)\n        data.append('file', file)\n        data.append('size', file.size)\n   console.log('fileee', JSON.stringify(file))\n        for (var key of data.entries()) {\n          console.log(key[0] + ', ' + key[1]);\n      }\n        const ttthis = this\n        axios({\n            method: 'post',\n            url: process.env.REACT_APP_API_HOST + '/api/files',\n            data: data,\n            config: { headers: {'Content-Type': 'multipart/form-data' }},\n            onUploadProgress: ProgressEvent => {\n                  if(ProgressEvent.loaded === ProgressEvent.total*100){\n                    const copy = { ...this.state.uploadProgress };\n                    copy[file.name] = { state: \"done\", percentage: 100 };\n                    this.setState({ uploadProgress: copy })\n                  }else{\n                    const copy = { ...this.state.uploadProgress };\n                    copy[file.name] = {\n                      state: \"pending\",\n                      percentage: (ProgressEvent.loaded / ProgressEvent.total) * 100\n                    };\n                    this.setState({ uploadProgress: copy });\n                  }\n              }\n            })\n            .then(function (response) {\n                const copy = { ...ttthis.state.uploadProgress };\n                copy[file.name] = { state: \"done\", percentage: 100 };\n                ttthis.setState({ uploadProgress: copy })\n                ttthis.props.triggerUploadedFinished()\n                console.log(response);\n            })\n            .catch(function (response) {\n                //handle error\n                console.log(JSON.stringify(response.response))\n            });\n\n\n      });\n    }\n  \n    renderProgress(file) {\n      const uploadProgress = this.state.uploadProgress[file.name];\n      console.log('renderProgress', uploadProgress)\n      if (this.state.uploading || this.state.successfullUploaded) {\n        return (\n          <div className={styles.ProgressWrapper}>\n            <Progress progress={uploadProgress ? uploadProgress.percentage : 0} style={{float: 'right'}}/>\n            <CheckCircle\n              \n              style={{\n                opacity: uploadProgress && uploadProgress.state === \"done\" ? 0.5 : 0,\n                float: 'left',\n                marginLeft: 10\n\n              }}\n            />\n          </div>\n        );\n      }\n    }\n  \n    renderActions() {\n      if (this.state.successfullUploaded) {\n        return (\n          <Button\n            onClick={() =>\n              this.setState({ files: [], successfullUploaded: false })\n            }\n          >\n            Limpar\n          </Button>\n        );\n      } else {\n        return (\n          <Button\n            disabled={this.state.files.length < 0 || this.state.uploading}\n            onClick={this.uploadFiles}\n          >\n            Fazer Upload\n          </Button>\n        );\n      }\n    }\n  \n    render() {\n      return (\n        <div className={styles.Upload} style={{padding: 20}}>\n          <div style={{display: 'flex', flexDirection: 'row', paddingTop: '16px', boxSizing: 'border-box', width: '100%'}}>\n            <div>\n              <Dropzone\n                onFilesAdded={this.onFilesAdded}\n                disabled={this.state.uploading || this.state.successfullUploaded}\n              />\n            </div>\n            <div style={{marginLeft: 32, alignItems: 'flex-start', justifyItems: 'flex-start', flex: 1,overflowY: 'auto'}}>\n              <List>\n                    <ListItem >\n                    <PersonIcon style={{float: 'left', color: '#2a2a2a', marginRight: 5}}/>\n                    <Typography \n                        variant=\"subtitle1\" style={{float: 'left', color: '#2a2a2a'}}>\n                        Arquivo para: {this.props.data.user.completename}\n                    </Typography>\n                      </ListItem>\n                    <ListItem >\n                    <EditIcon style={{float: 'left', color: '#2a2a2a', marginRight: 5}}/>\n                    <Typography \n                        variant=\"subtitle1\" style={{float: 'left', color: '#2a2a2a'}}>\n                        Nome do Arquivo: {this.props.data.displayName.length > 0 ? this.props.data.displayName : 'Manter nome original do Arquivo'} \n                    </Typography>\n                      </ListItem>\n                  </List>\n              {this.state.files.map(file => {\n                return (\n                  <div key={file.name} className={styles.Row}>\n                  <List>\n                    <ListItem >\n                    <PdfIcon style={{float: 'left', color: '#2a2a2a', marginRight: 5}}/>\n                    <Typography \n                        variant=\"subtitle1\" style={{float: 'left', color: '#2a2a2a'}}>\n                        {file.name}\n                    </Typography>\n                      </ListItem>\n                  </List>\n                   \n                    < br/>\n                    {this.renderProgress(file)}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n          <div style={{display: 'flex', flex: 1, width: '100%', alignItems: 'flex-end' , flexDirection: 'column', marginTop: 32}}>\n            {this.renderActions()}</div>\n        </div>\n      );\n    }\n  }\n  \n  export default Upload;","import React, { Component } from 'react';\nimport Upload from './Upload'\nimport Card from '@material-ui/core/Card'\nimport Grid from '@material-ui/core/Grid'\nimport \"./css/AdminExams.css\"\nimport Button from '@material-ui/core/Button'\nimport FormControl  from '@material-ui/core/FormControl'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Select from  '@material-ui/core/Select'\nimport CircularProgress from  '@material-ui/core/CircularProgress'\nimport MenuItem from  '@material-ui/core/MenuItem'\nimport { connect } from 'react-redux'\nimport { loadUsersRequest } from '../actions/actions'\nimport TextField from '@material-ui/core/TextField'\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Typography from '@material-ui/core/Typography'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport axios from 'axios'\nimport dotenv from 'dotenv'\nimport PropTypes from 'prop-types'\ndotenv.config()\n\nclass AddAdminExams extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            user: false,\n            displayName : '',\n            userId: 0,\n            commentsEnabled: false,\n            activeStep: 0,\n            skipped: new Set(),\n            steps : this.getSteps(),\n            showStepper: true,\n            userFilter: '',\n            filteredUsers: [],\n            firstTimeUpdated: false\n        }\n        \n        this.handleSelectedUser = this.handleSelectedUser.bind(this)\n        this.handleNext = this.handleNext.bind(this)\n        this.handleBack = this.handleBack.bind(this)\n        this.handleSkip = this.handleSkip.bind(this)\n        this.handleReset = this.handleReset.bind(this)\n        this.getStepContent = this.getStepContent.bind(this)\n        this.handledisplayName = this.handledisplayName.bind(this)\n        this.triggerUploadedFinished = this.triggerUploadedFinished.bind(this)\n        this.handleSelectedCommentsEnabled = this.handleSelectedCommentsEnabled.bind(this)\n        this.handleUserFilterChange = this.handleUserFilterChange.bind(this)\n    }\n    componentDidMount(){\n        this.props.loadUsers()\n    }\n    handledisplayName(e){\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    componentDidUpdate(){\n        if(!this.state.firstTimeUpdated){\n            if(this.props.users && this.props.users.length > 0){\n                this.setState({\n                    firstTimeUpdated: true,\n                    filteredUsers: this.props.users\n                })\n            }\n        }\n    }\n    handleSelectedUser(e){\n        if(e && e.target.value != 0){\n            var userOk = ''\n            this.props.users.map((user, index)=>{\n                if(user._id === e.target.value) userOk = user\n            })\n            this.setState({\n                userId: e.target.value,\n                user: userOk\n            })\n        }else{\n            this.setState({\n                userNameSelected: false,\n                userId: 0\n            })\n        }\n        \n    }\n    handleSelectedCommentsEnabled(e){\n        this.setState({\n            commentsEnabled: e.target.value\n        })\n    }\n    getSteps() {\n        return ['Seleciona Usuário', 'Nome para o arquivo', 'Upload arquivo'];\n      }\n    getStepContent(step) {\n        switch (step) {\n            case 0:\n            return this.renderSelectUser();\n            case 1:\n            return this.renderdisplayName();\n            case 2:\n            return this.renderUploadFile();\n            default:\n            return 'Passo desconhecido, reiniciar pagina';\n        }\n    }\n    handleUserFilterChange(e){\n        var tempUsers = []\n        this.props.users.forEach((user)=> {\n            if(user.completename.toLowerCase().includes(e.target.value.toLowerCase())){\n                tempUsers.push(user)\n            }\n        })\n        this.setState({\n            filteredUsers: tempUsers,\n            userFilter: e.target.value\n        })\n    }\n    renderSelectUser(){\n        return (\n            <Card style={{minHeight: 300}}\n            alignitems=\"center\"\n                        justify=\"center\">\n                         {this.props.isFetchingUsers && (\n                     <Grid\n                        container\n                        spacing={0}\n                        direction=\"column\"\n                        alignItems=\"center\"\n                        justify=\"center\"\n                        style={{marginTop: 30}}\n                    >\n                            <CircularProgress />\n                        </Grid>\n            )}\n            { !this.props.isFetchingUsers && (\n                <div>\n                <FormControl style={{marginLeft: 50, marginTop:10}}>\n                        <TextField\n                        label=\"Filtrar Usuário\"\n                        type=\"text\"\n                        id=\"userFilter\"\n                        value={ this.state.userFilter }\n                        name=\"userFilter\"\n                        onChange={this.handleUserFilterChange}\n                        aria-describedby=\"userFilter-text\"\n                        />\n                </FormControl>\n            <FormControl fullWidth={true} style={{paddingLeft: 50, paddingRight:50, paddingTop:10, paddingBottom:10}}>\n                    <Select\n                    native\n                    variant=\"outlined\"\n                    value={this.state.userId}\n                    onChange={this.handleSelectedUser}\n                    >\n                    <option value={0} > Escolher Usuário </option>\n                        {this.state.filteredUsers.map( (user, index) => {\n                            return (\n                                <option key={user._id} value={user._id}>{user.completename} \n                                </option>\n                            )\n                        })}\n                    </Select>\n                    {this.state.errors && (<FormHelperText id=\"username-text\" style={{color: 'red'}}>{this.state.errors}</FormHelperText>)}\n                </FormControl>\n                </div>\n                )} \n            </Card>\n        )\n    }\n    renderdisplayName(){\n        return (\n            <Card style={{minHeight: 300}}>\n                <FormControl fullWidth={true} style={{padding: 50}}>\n                        <TextField\n                            label=\"Nome para o Arquivo\"\n                            placeholder=\"Nome para o Arquivo\"\n                            helpertext=\"Se quiser manter o nome do arquivo original, pode clicar em Pular\"\n                            margin=\"normal\"\n                            name=\"displayName\"\n                            variant=\"outlined\"\n                            onChange={this.handledisplayName}\n                        />\n                        {this.state.errors && (<FormHelperText id=\"username-text\" style={{color: 'red'}}>{this.state.errors}</FormHelperText>)}\n                </FormControl>\n                <FormControl  style={{padding: 50}}>\n                    <InputLabel  style={{marginLeft:50, minWidth: 150}}>Habilitar Bate Papo</InputLabel>\n                    <Select\n                    style={{marginTop: -27, minWidth: 150}}\n                    value={this.state.commentsEnabled}\n                    onChange={this.handleSelectedCommentsEnabled}\n                    >\n                        <MenuItem value={false} >Não</MenuItem>\n                        <MenuItem value={true} >Sim</MenuItem>\n                        \n                    </Select>\n                </FormControl>\n            </Card>\n        )\n    }\n    renderUploadFile(){\n        return (\n            <Card >\n                <Upload data={this.state} triggerUploadedFinished={this.triggerUploadedFinished} admin={this.props.auth.user}/>\n            </Card>\n        )\n    }\n    isStepOptional(step) {\n        return step === 1;\n    }\n    isStepSkipped(step) {\n        return this.state.skipped.has(step);\n    }\n    handleNext() {\n        let newSkipped = this.state.skipped;\n        if (this.isStepSkipped(this.state.activeStep)) {\n            newSkipped = new Set(newSkipped.values());\n            newSkipped.delete(this.state.activeStep);\n        }\n        \n        if(this.state.activeStep === 0 && this.state.userId === 0){\n            this.setState({\n                errors: 'Por favor, escolha um usuário da lista'    \n            })\n        }\n        else if(this.state.activeStep === 1 && this.state.displayName.length === 0){\n            this.setState({\n                errors: 'Por favor, se quiser manter o nome original clique em Pular'    \n            })\n        }else if(this.state.activeStep === 1 && this.state.displayName.length > 0){\n            axios.get(process.env.REACT_APP_API_HOST + '/api/files/' + this.state.displayName + '/user/' + this.state.userId)\n                .then(res => {\n                    this.setState({\n                        activeStep: this.state.activeStep + 1,\n                        errors: false,\n                        newSkipped\n                    })\n                })\n                .catch(err => {\n                    \n                    this.setState({\n                        errors: err.response.data.err\n                    })\n                })\n        }\n        else{\n            this.setState({\n                activeStep: this.state.activeStep + 1,\n                errors: false,\n                newSkipped\n            })\n        }\n        \n    }\n    handleBack() {\n        this.setState({\n            activeStep: this.state.activeStep - 1\n        })\n    }\n    handleSkip() {\n        if (!this.isStepOptional(this.state.activeStep)) {\n          // You probably want to guard against something like this,\n          // it should never occur unless someone's actively trying to break something.\n          throw new Error(\"Não pode pular este passo porque não é opcional.\");\n        }\n    \n        this.setState({\n            activeStep: this.state.activeStep + 1,\n            displayName: ''\n        })\n    \n        const newSkipped = new Set( this.state.skipped.values());\n        newSkipped.add(this.state.activeStep)\n        this.setState({\n            skipped: newSkipped\n        })\n\n      }\n      handleReset() {\n        this.setState({\n            activeStep: 0\n        })\n      }\n      triggerUploadedFinished(){\n          this.setState({\n              uploadFinished : true\n          })\n      }\n    render() {\n        return (\n            <div style={{width: '80%',margin: 40, marginTop:100}}>\n                { this.state.showStepper && \n                ( \n                    <div>\n                    <Stepper activeStep={this.state.activeStep}>\n                        {this.state.steps.map((label, index) => {\n                        const stepProps = {};\n                        const labelProps = {};\n                        if (this.isStepOptional(index)) {\n                            labelProps.optional = <Typography variant=\"caption\" component=\"span\">Opcional</Typography>;\n                        }\n                        if (this.isStepSkipped(index)) {\n                            stepProps.completed = false;\n                        }\n                        return (\n                            <Step key={label} {...stepProps}>\n                            <StepLabel {...labelProps}>{label}</StepLabel>\n                            </Step>\n                        );\n                        })}\n                    </Stepper>\n                    <div>\n                        {this.state.activeStep === this.state.steps.length ? (\n                        <div>\n                            <Typography style={{marginTop: 3, marginBottom: 3,}}  component=\"span\">\n                            Upload realizado com sucesso!\n                            </Typography>\n                            <Button onClick={this.handleReset} style={{marginRight: 3}}  component=\"span\">\n                            Adicionar mais\n                            </Button>\n                        </div>\n                        ) : (\n                        <div>\n                            <Typography  component=\"span\" style={{marginTop: 3, marginBottom: 3,}}>{this.getStepContent(this.state.activeStep)}</Typography>\n                            <div>\n                            <Button disabled={this.state.activeStep === 0} onClick={this.handleBack} style={{marginRight: 3}}>\n                                Voltar\n                            </Button>\n                            {this.isStepOptional(this.state.activeStep) && (\n                                <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={this.handleSkip}\n                                style={{marginRight: 3}}\n                                >\n                                Pular\n                                </Button>\n                            )}\n\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={this.handleNext}\n                                style={{marginRight: 3}}\n                                disabled={this.state.activeStep === this.state.steps.length - 1 && !this.state.uploadFinished}\n                            >\n                                {this.state.activeStep === this.state.steps.length - 1 ? 'Finalizar' : 'Seguinte'}\n                            </Button>\n                            </div>\n                        </div>\n                    )}\n                </div>\n                </div>\n          )}\n            </div>\n        );\n    }\n}\nAddAdminExams.propTypes = {\n    auth: PropTypes.object.isRequired\n}\nconst mapStateToProps = (state) => {\n    return {\n        isFetchingUsers: state.users.isFetching,\n        users: state.users.data,\n        error: state.users.error,\n        auth: state.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        loadUsers: () => dispatch(loadUsersRequest())\n    }\n} \n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddAdminExams)","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText'\nimport GroupIcon from '@material-ui/icons/Group'\nimport ContactMailIcon from '@material-ui/icons/ContactMail'\nimport ExistToAppIcon from '@material-ui/icons/ExitToApp'\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf'\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd'\n\nimport Register from './Register'\nimport Users from './Users'\nimport Profile from './Profile'\nimport Exams from './Exams'\nimport AdminExams from './AdminExams'\nimport AddAdminExams from './AddAdminExams'\nimport { Link } from 'react-router-dom';\nimport AddNoteIcon from '@material-ui/icons/NoteAdd'\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default function MiniDrawer(props) {\n \n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  function handleDrawerOpen() {\n    setOpen(true);\n  }\n\n  function handleDrawerClose() {\n    setOpen(false);\n  }\n  function onLogout() {\n    props.logoutUser(props.history)\n  }\n  return (\n    <div className={classes.root}>\n    \n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Vets\n          </Typography>\n          <div className={classes.sectionDesktop} style={{ position: 'absolute', right: '0', top: 15, marginRight:50}}>\n            {props.user.completename}\n            </div>\n            <div className={classes.sectionDesktop} style={{ fontSize: 10, position: 'absolute', right: '0',top:38, marginRight:50}}>\n            {props.user.username}\n            </div>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        {props.user.admin && ( \n            <div>\n                <List>\n                    <ListItem button component={ Link } color=\"inherit\" to=\"/register\" >\n                        <ListItemIcon><PersonAddIcon /></ListItemIcon>\n                        <ListItemText primary='Adicionar Usuário'/>\n                    </ListItem>\n                    <ListItem button component={ Link } color=\"inherit\" to=\"/users\" >\n                        <ListItemIcon><GroupIcon /></ListItemIcon>\n                        <ListItemText primary='Usuários'/>\n                    </ListItem>\n                    \n                </List>\n                <Divider />\n                <List>\n                    <ListItem button component={ Link } color=\"inherit\" to=\"/add_admin_exams\" >\n                        <ListItemIcon><AddNoteIcon /></ListItemIcon>\n                        <ListItemText primary='Adicionar Exame'/>\n                    </ListItem>\n                    <ListItem button component={ Link } color=\"inherit\" to=\"/admin_exams\" >\n                        <ListItemIcon><PictureAsPdfIcon /></ListItemIcon>\n                        <ListItemText primary='Exames'/>\n                    </ListItem>\n                </List>\n                <Divider />\n                <List>\n                    <ListItem button component={ Link } color=\"inherit\" to=\"/profile\" >\n                        <ListItemIcon><ContactMailIcon /></ListItemIcon>\n                        <ListItemText primary='Perfil'/>\n                    </ListItem>\n                </List>\n                <Divider />\n                <List>\n                    <ListItem button  onClick={onLogout} color=\"inherit\"  >\n                        <ListItemIcon><ExistToAppIcon /></ListItemIcon>\n                        <ListItemText primary='Sair'/>\n                    </ListItem>\n                </List>\n            </div>\n        )}\n        {!props.user.admin && ( \n            <div>\n                <List>\n                    <ListItem button component={ Link } color=\"inherit\" to=\"/exams\" >\n                        <ListItemIcon><PictureAsPdfIcon /></ListItemIcon>\n                        <ListItemText primary='Exames'/>\n                    </ListItem>\n                </List>\n                <Divider />\n                <List>\n                    <ListItem button component={ Link } color=\"inherit\" to=\"/profile\" >\n                        <ListItemIcon><ContactMailIcon /></ListItemIcon>\n                        <ListItemText primary='Perfil'/>\n                    </ListItem>\n                </List>\n                <Divider />\n                <List>\n                    <ListItem button color=\"inherit\" onClick={onLogout}  >\n                        <ListItemIcon><ExistToAppIcon /></ListItemIcon>\n                        <ListItemText primary='Sair'/>\n                    </ListItem>\n                </List>\n            </div>\n        )}\n      </Drawer>\n      </div>\n  );\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { logoutUser } from '../actions/authentication';\nimport { withRouter } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport clsx from 'clsx'\nimport Drawer from './Drawer'\n\nconst drawerWidth = 240;\n\nconst classes = makeStyles(theme => ({\n    root: {\n        display: \"flex\"\n      },\n      appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen\n        })\n      },\n      appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.enteringScreen\n        })\n      },\n      menuButton: {\n        marginLeft: 12,\n        marginRight: 36\n      },\n      hide: {\n        display: \"none\"\n      },\n      drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: \"nowrap\"\n      },\n      drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create(\"width\", {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.enteringScreen\n        })\n      },\n      drawerClose: {\n        transition: theme.transitions.create(\"width\", {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen\n        }),\n        overflowX: \"hidden\",\n        width: theme.spacing.unit * 7 + 1,\n        [theme.breakpoints.up(\"sm\")]: {\n          width: theme.spacing.unit * 9 + 1\n        }\n      },\n      toolbar: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-end\",\n        padding: \"0 8px\",\n        ...theme.mixins.toolbar\n      },\n      content: {\n        flexGrow: 1,\n        padding: theme.spacing.unit * 3\n      },\n    sectionDesktop: {\n        display: 'none',\n        [theme.breakpoints.up('md')]: {\n          display: 'flex',\n        },\n        float: 'right',\n        position: 'absolute',\n         right: '0'\n      },\n    title: {\n      flexGrow: 1,\n      marginLeft: 300\n    },\n  }))\n\nclass Navbar extends Component {\n  \n    render() {\n       \n        const {isAuthenticated, user} = this.props.auth;   \n        \n        const authLinks = (\n     //       <div className={classes.sectionDesktop} style={{ position: 'absolute', right: '0'}}>\n     //           <Button  onClick={this.onLogout.bind(this)} color=\"inherit\" style={{ marginRight:30}} >Sair</Button>\n     //       </div>\n     ''\n        )\n      const guestLinks = (\n        <div style={{margin:'auto'}}>\n    \n              <Button style={{marginLeft: -40, marginRight: 40, textTransform: 'none', fontSize: 20 }} component={ Link } color=\"inherit\" to=\"/#about-us\" >Sobre nós</Button>\n              <Button style={{marginLeft: 40, marginRight: 40, textTransform: 'none', fontSize: 20 }} component={ Link } color=\"inherit\" to=\"/#exams\" >Exames</Button>\n              <Button style={{marginLeft: 40, marginRight: 40, textTransform: 'none', fontSize: 20 }} component={ Link } color=\"inherit\" to=\"/partners\" >Parceiros</Button>\n              <Button style={{marginLeft: 40, marginRight: 40, textTransform: 'none', fontSize: 20 }}  component={ Link } color=\"inherit\" to=\"/#contact\" >Contato</Button>\n              \n              <Button style={{position: 'absolute', right: 10, textTransform: 'none', fontSize: 20 }} component={ Link } color=\"inherit\" to=\"/login\" >Consulte seu exame</Button>\n \n          \n        </div>\n      )\n      \n        return(\n            <div className={classes.root}>\n            <CssBaseline />\n                <AppBar position=\"fixed\" className={clsx(classes.appBar, {\n                        [classes.appBarShift]: false,\n                        })} style={{padding: 15}}>\n                    <Toolbar>\n                    \n                  <Typography variant=\"h6\" className={classes.title} >\n                        Vets\n                    </Typography>  \n                    <div />\n\n                        {isAuthenticated ? authLinks : guestLinks}\n                    </Toolbar>\n                </AppBar>\n                { isAuthenticated ? (\n                    <Drawer logoutUser={this.props.logoutUser} history={this.props.history} user={user}/>\n\n                ) : ''}\n            </div>\n          \n        )\n    }\n}\n\nNavbar.propTypes = {\n    logoutUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth\n})\n\n//ResponsiveDrawer.propTypes = {\n    /**\n     * Injected by the documentation to work in an iframe.\n     * You won't need it on your project.\n     */\n //   container: PropTypes.object,\n // };\nexport default connect(mapStateToProps, { logoutUser })(withRouter(Navbar));","import React, { Component } from 'react'\n\nimport FormControl   from '@material-ui/core/FormControl'\nimport InputLabel   from '@material-ui/core/InputLabel'\nimport Input   from '@material-ui/core/Input'\nimport FormHelperText   from '@material-ui/core/FormHelperText'\nimport Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport axios from  'axios'\nimport dotenv from 'dotenv'\ndotenv.config()\n\nexport default class ForgotPassword extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            username: '',\n            message: false,\n            errors: false,\n            isFetching: false,\n            emailSent: false\n        }\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleInputChange = this.handleInputChange.bind(this)\n    }\n    handleSubmit(e){\n        e.preventDefault()\n        if(this.state.username && this.state.username.length > 4 \n            && this.state.username.indexOf('@') != -1 && this.state.username.indexOf('.') != -1 ){\n                this.setState({\n                    isFetching: true\n                })\n                axios.post(process.env.REACT_APP_API_HOST + '/api/users/forgot', {username: this.state.username })\n                        .then(res => {\n                            this.setState({\n                                message: res.data.msg,\n                                errors: false,\n                                isFetching: false,\n                                emailSent: true\n                            })\n                        })\n                        .catch(err => {\n                            this.setState({\n                                errors: err && err.response && err.response.data ? JSON.stringify(err.response.data.msg) : 'Erro desconhecido, tente mais tarde',\n                                isFetching: false\n                            })\n                        })\n\n        }else{\n            this.setState({\n                errors: 'email invalido',\n                isFetching: false\n            })\n        }\n    }\n    handleInputChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    render() {\n        return (\n                <Grid\n                container\n                spacing={0}\n                direction=\"column\"\n                alignItems=\"center\"\n                justify=\"center\"\n                style={{ minHeight: '100vh' }}\n            >\n            \n                <Grid item xs={6}>\n                        <Card  style={{width: '100%'}}>\n                        <CardContent>\n                        <Typography \n                               color=\"textSecondary\" gutterBottom>\n                            Vets\n                        </Typography>\n                        <Typography \n                                variant=\"h5\" component=\"h2\">\n                            Recuperar Senha\n                        </Typography>\n                        <form onSubmit={ this.handleSubmit }>\n                            <FormControl  fullWidth={true} >\n                                <InputLabel htmlFor=\"username\">E-mail</InputLabel>\n                                <Input\n                                type=\"username\"\n                                id=\"username\"\n                                value={ this.state.username }\n                                name=\"username\"\n                                onChange={this.handleInputChange}\n                                aria-describedby=\"username-text\"\n                                onChange={ this.handleInputChange }\n                                value={ this.state.username }\n                                />\n                                {this.state.errors && (<FormHelperText id=\"username-text\" style={{color: 'red'}}>{this.state.errors}</FormHelperText>)}\n                                {this.state.message && (<FormHelperText id=\"username-text\"  style={{color: 'green'}}>{this.state.message}</FormHelperText>)}\n                            </FormControl>\n                        <CardActions>\n                           {this.state.isFetching && (\n                            <Grid\n                                container\n                                spacing={0}\n                                direction=\"column\"\n                                alignItems=\"center\"\n                                justify=\"center\"\n                                style={{marginTop: 30}}\n                               fullWidth={true}\n                            >\n                                    <CircularProgress />\n                                </Grid>\n                           )}\n                           {!this.state.isFetching && (\n                            <Button \n                            disabled={this.state.emailSent}\n                            fullWidth={true} variant=\"contained\" color=\"primary\" type=\"submit\" >\n                                    Enviar E-mail de Recuperação de Senha\n                            </Button>\n                            )}\n                        </CardActions>\n                        </form>\n                        </CardContent>\n                        \n                    </Card>\n                </Grid>      \n            </Grid>\n        );\n    }\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../actions/authentication'\nimport { makeStyles } from '@material-ui/core/styles'\nimport FormControl   from '@material-ui/core/FormControl'\nimport InputLabel   from '@material-ui/core/InputLabel'\nimport Input   from '@material-ui/core/Input'\nimport FormHelperText   from '@material-ui/core/FormHelperText'\nimport Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Link from '@material-ui/core/Link'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport ResetPassword from './ForgotPassword'\n\nclass Login extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            username: '',\n            password: '',\n            errors: {}\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    \n    handleInputChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleSubmit(e) {\n        e.preventDefault()\n        console.log()\n        const user = {\n            username: this.state.username,\n            password: this.state.password,\n        }\n        this.props.loginUser(user);\n    }\n\n    componentDidMount() {\n        if(this.props.auth.isAuthenticated) {\n            this.props.history.push('/');\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.auth.isAuthenticated) {\n            this.props.history.push('/')\n        }\n        if(nextProps.errors) {\n            this.setState({\n                errors: nextProps.errors\n            });\n        }\n    }\n\n    render() {\n        \n\n        const {errors} = this.state\n\n    //    React.useEffect(() => {\n    //        setLabelWidth(labelRef.current.offsetWidth)\n    //      }, [])\n\n        return(\n            \n                <Grid\n                container\n                spacing={0}\n                direction=\"column\"\n                alignItems=\"center\"\n                justify=\"center\"\n                style={{ minHeight: '100vh' }}\n            >\n            \n                <Grid item xs={6}>\n                        <Card className={classes.card}>\n                        <CardContent>\n                        <Typography \n                                className={classes.title} color=\"textSecondary\" gutterBottom>\n                            Vets\n                        </Typography>\n                        <Typography \n                                variant=\"h5\" component=\"h2\">\n                            Login\n                        </Typography>\n                        <form onSubmit={ this.handleSubmit }>\n                            <FormControl className={classes.formControl} fullWidth={true} >\n                                <InputLabel htmlFor=\"username\">E-mail</InputLabel>\n                                <Input\n                                type=\"username\"\n                                id=\"username\"\n                                value={ this.state.username }\n                                name=\"username\"\n                                onChange={this.handleInputChange}\n                                aria-describedby=\"username-text\"\n                                onChange={ this.handleInputChange }\n                                value={ this.state.username }\n                                />\n                                {errors.username && (<FormHelperText id=\"username-text\" style={{color: 'red'}}>{errors.username}</FormHelperText>)}\n                            </FormControl>\n                            <FormControl  fullWidth={true} className={classes.formControl} >\n                                <InputLabel htmlFor=\"password\">Senha</InputLabel>\n                                <Input\n                                type=\"password\"\n                                id=\"password\"\n                                value={ this.state.password }\n                                name=\"password\"\n                                onChange={this.handleInputChange}\n                                aria-describedby=\"password-text\"\n                                onChange={ this.handleInputChange }\n                                value={ this.state.password }\n                                />\n                                {errors.password && (<FormHelperText id=\"password-text\" style={{color: 'red'}}>{errors.password}</FormHelperText>)}\n                            </FormControl>\n                            \n                            \n                        <CardActions>\n                            <Button fullWidth={true} variant=\"contained\" color=\"primary\" type=\"submit\" >\n                                Login\n                            </Button>\n                        </CardActions>\n                        </form>\n                        </CardContent>\n                        <CardActions>\n                                <Link component={ AdapterLink } to=\"/forgot_password\">\n                                    Esqueceu sua senha?\n                                </Link>\n                        </CardActions>\n\n                    </Card>\n                </Grid>      \n            </Grid>\n        )\n    }\n}\nconst AdapterLink = React.forwardRef((props, ref) => <RouterLink innerRef={ref} {...props} />);\n\nconst classes = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n      },\n      formControl: {\n        margin: theme.spacing(1),\n        width: '100%'\n      },\n    card: {\n        minWidth: 275,\n        maxWidth:400\n      },\n    button: {\n      margin: theme.spacing(1),\n      width: '100%'\n    },\n    input: {\n      display: 'none',\n      width: '100%'\n    },\n    title: {\n        alignItems: \"center\",\n        justify: \"center\"\n    }\n  }))\n\n//  const [labelWidth, setLabelWidth] = React.useState(0)\n//  const [name, setName] = React.useState('Composed TextField')\n// /  const labelRef = React.useRef(null)\n  \nLogin.propTypes = {\n    loginUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    errors: state.errors\n})\n\nexport  default connect(mapStateToProps, { loginUser })(Login)","import React, { Component } from 'react';\nimport Slider from 'react-animated-slider';\nimport 'react-animated-slider/build/horizontal.css';\nimport './css/carousel.css'\n\nclass Home extends Component {\n    constructor(props){\n        super(props)\n        this.aboutUsRef = React.createRef()\n        this.examsRef = React.createRef()\n        this.contactRef = React.createRef()\n\n        this.scrollIfNecessary =this.scrollIfNecessary.bind(this)\n    }\n    \n    componentDidMount(){\n        this.scrollIfNecessary()\n    }\n    componentDidUpdate(){\n        this.scrollIfNecessary()\n    }\n    scrollIfNecessary(){\n        if(window.location.href.includes('#about-us')){\n            console.log('estoy dentro about us')\n            this.aboutUsRef.current.scrollIntoView({\n                behavior: 'smooth',\n                block: 'start',\n              });\n        }else if(window.location.href.includes('#exams')){\n            console.log('estoy dentro exams')\n            this.examsRef.current.scrollIntoView({\n                behavior: 'smooth',\n                block: 'start',\n              });\n        }else if(window.location.href.includes('#contact')){\n            console.log('estoy dentro contact')\n            this.contactRef.current.scrollIntoView({\n                behavior: 'smooth',\n                block: 'start',\n              });\n        }\n    }\n    render() {\n\n        const content = [\n            {\n                title: 'CONSULTE',\n                description:\n                'SEU EXAME',\n                button: 'CONSULTA',\n                image: 'https://i.imgur.com/ZXBtVw7.jpg',\n                user: 'Luan Gjokaj',\n                userProfile: 'https://i.imgur.com/JSW6mEk.png'\n            },\n            {\n                title: 'Tortor Dapibus Commodo Aenean Quam',\n                description:\n                'Nullam id dolor id nibh ultricies vehicula ut id elit. Cras mattis consectetur purus sit amet fermentum. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Donec sed odio dui.',\n                button: 'Discover',\n                image: 'https://i.imgur.com/DCdBXcq.jpg',\n                user: 'Erich Behrens',\n                userProfile: 'https://i.imgur.com/0Clfnu7.png'\n            },\n            {\n                title: 'Phasellus volutpat metus',\n                description:\n                'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Duis mollis, est non commodo luctus, nisi erat porttitor ligula.',\n                button: 'Buy now',\n                image: 'https://i.imgur.com/DvmN8Hx.jpg',\n                user: 'Bruno Vizovskyy',\n                userProfile: 'https://i.imgur.com/4KeKvtH.png'\n            }\n        ];\n\n        return (\n            <div>\n               <div  style={{backgroundColor: 'yellow', marginTop:90}}>\n                    <Slider className=\"slider-wrapper\" >\n                            {content.map((item, index) => (\n                                <div\n                                    key={index}\n                                    className=\"slider-content\"\n                                    style={{ background: `url('${item.image}') no-repeat center center` }}\n                                >\n                                    <div className=\"inner\" style={{textAlign: 'right'}}>\n                                        <div fontWeight='fontWeightLight' style={{fontWeight: '300 !important', fontSize: 50, lineHeight:0.7, color: 'white'}}>{item.title}</div>\n                                        <div fontWeight='fontWeightMedium' style={{fontWeight: 'bold', fontSize: 50, color: 'white'}}>{item.description}</div>\n                                        <button>{item.button} &nbsp;&nbsp;&nbsp; <i style={{fontWeight: 'light'}} class=\"fas fa-angle-right\"></i></button>\n                                    </div>\n                                    \n                                </div>\n                            ))}\n                        </Slider>\n                </div>\n                <div ref={this.aboutUsRef} style={{backgroundColor: 'green',minHeight:500 , marginTop:100}}>\n                    this is about us\n                </div>\n                <div ref={this.examsRef} style={{backgroundColor: 'pink',minHeight:500 , marginTop:100}}>\n                    this is Exams\n                </div>\n                <div ref={this.contactRef} style={{backgroundColor: 'orange',minHeight:500 , marginTop:100}}>\n                    this is Contacts\n                </div>\n            </div>\n        );\n    }\n    \n}\nexport default Home","import React, { Component } from 'react'\n\nimport FormControl   from '@material-ui/core/FormControl'\nimport InputLabel   from '@material-ui/core/InputLabel'\nimport Input   from '@material-ui/core/Input'\nimport FormHelperText   from '@material-ui/core/FormHelperText'\nimport Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport axios from  'axios'\nimport dotenv from 'dotenv'\ndotenv.config()\n\nexport default class ResetPassword extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            password: '',\n            confirmPassword: '',\n            message: false,\n            errors: false,\n            isFetching: false,\n            passwordReseted: false\n        }\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleInputChange = this.handleInputChange.bind(this)\n    }\n    handleSubmit(e){\n        e.preventDefault()\n        if(this.state.password && this.state.password.length < 6){\n            this.setState({\n                errors: 'A senha deve ter mínimo 6 carateres'\n            })\n        }else if(this.state.password != this.state.confirmPassword){\n            this.setState({\n                erros: 'A senhas digitadas não coincidem'\n            })\n        }else{\n                this.setState({\n                    isFetching: true\n                })\n                var url = process.env.REACT_APP_API_HOST + '/api/users/reset_password/'\n                if(this.props.location.search.split('=').length == 2){\n                    url += 'token/' + this.props.location.search.split('=')[1]\n                }\n                axios.post(url, {password: this.state.password, \n                                    confirmPassword : this.state.confirmPassword })\n                                    .then(res => {\n                                        this.setState({\n                                            message: res.data.msg,\n                                            errors: false,\n                                            isFetching: false,\n                                            passwordReseted: true\n                                        })\n                                    })\n                                    .catch(err => {\n                                        this.setState({\n                                            errors: JSON.stringify(err.response.data.msg),\n                                            isFetching: false\n                                        })\n                                    })\n\n        }\n    }\n    handleInputChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    render() {\n        return (\n                <Grid\n                container\n                spacing={0}\n                direction=\"column\"\n                alignItems=\"center\"\n                justify=\"center\"\n                style={{ minHeight: '100vh' }}\n            >\n            \n                <Grid item xs={6}>\n                        <Card  style={{width: '100%'}}>\n                        <CardContent>\n                        <Typography \n                               color=\"textSecondary\" gutterBottom>\n                            Vets\n                        </Typography>\n                        <Typography \n                                variant=\"h5\" component=\"h2\">\n                            Resetar Senha\n                        </Typography>\n                        <form onSubmit={ this.handleSubmit }>\n                            <FormControl  fullWidth={true} >\n                                <InputLabel htmlFor=\"password\">Senha</InputLabel>\n                                <Input\n                                type=\"password\"\n                                id=\"password\"\n                                value={ this.state.password }\n                                name=\"password\"\n                                onChange={this.handleInputChange}\n                                aria-describedby=\"password-text\"\n                                onChange={ this.handleInputChange }\n                                />\n                                \n                            </FormControl>\n                            <FormControl  fullWidth={true} >\n                                <InputLabel htmlFor=\"confirmPassword\">Confirmar Senha</InputLabel>\n                                <Input\n                                type=\"password\"\n                                id=\"confirmPassword\"\n                                value={ this.state.confirmPassword }\n                                name=\"confirmPassword\"\n                                onChange={this.handleInputChange}\n                                aria-describedby=\"confirmPassword-text\"\n                                onChange={ this.handleInputChange }\n                                />\n                                {this.state.errors && (<FormHelperText id=\"confirmPassword-text\" style={{color: 'red'}}>{this.state.errors}</FormHelperText>)}\n                                {this.state.message && (<FormHelperText id=\"confirmPassword-text\"  style={{color: 'green'}}>{this.state.message}</FormHelperText>)}\n                            </FormControl>\n                        <CardActions>\n                           {this.state.isFetching && (\n                            <Grid\n                                container\n                                spacing={0}\n                                direction=\"column\"\n                                alignItems=\"center\"\n                                justify=\"center\"\n                                style={{marginTop: 30}}\n                               fullWidth={true}\n                            >\n                                    <CircularProgress />\n                                </Grid>\n                           )}\n                           {!this.state.isFetching && (\n                            <Button fullWidth={true} \n                                    variant=\"contained\" color=\"primary\" type=\"submit\"\n                                     disabled={this.state.passwordReseted}>\n                                    Redefinir Senha\n                            </Button>\n                            )}\n                        </CardActions>\n                        </form>\n                        </CardContent>\n                        \n                    </Card>\n                </Grid>      \n            </Grid>\n        );\n    }\n}","import React, { Component } from 'react';\n\nexport default class Partners extends Component {\n    render() {\n        return (\n            <div  style={{backgroundColor: 'blue', marginTop:100}}>\n                Partners Component \n            </div>\n        );\n    }\n}","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport jwt_decode from 'jwt-decode';\nimport setAuthToken from './setAuthToken'\nimport { setCurrentUser, logoutUser } from './actions/authentication';\n\nimport Navbar from './components/Navbar';\nimport Register from './components/Register';\nimport Login from './components/Login';\nimport Home from './components/Home';\nimport Users from './components/Users'\nimport Profile from './components/Profile'\nimport Exams from './components/Exams'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { makeStyles,createMuiTheme } from '@material-ui/core/styles'\nimport { ThemeProvider } from '@material-ui/styles'\nimport ForgotPassword from './components/ForgotPassword'\nimport ResetPassword from './components/ResetPassword'\nimport Partners from './components/Partners'\nimport AdminExams from './components/AdminExams'\nimport AddAdminExams from './components/AddAdminExams'\nif(localStorage.jwtToken) {\n  setAuthToken(localStorage.jwtToken);\n  const decoded = jwt_decode(localStorage.jwtToken);\n  store.dispatch(setCurrentUser(decoded));\n\n  const currentTime = Date.now() / 1000;\n  if(decoded.exp < currentTime) {\n    store.dispatch(logoutUser());\n    window.location.href = '/login'\n  }\n}\n\nfunction App() {\n  const [theme, setTheme] = useState({\n    typography: {\n      fontFamily: \"Open Sans\",\n      fontSize: 14,\n      fontWeightLight: 100,\n      fontWeightRegular: 400,\n      fontWeightMedium: 500\n     },\n    palette: {\n      type: \"light\",\n      primary: {\n        main: '#018AC0'\n      },\n      secondary: {\n        main: '#E33E7F'\n      },\n      accent: {\n        main: '#E33E7F'\n      },\n      background: {\n        default: \"#e6e6e6\"\n      }\n    }\n  })\n  const muiTheme = createMuiTheme(theme);\n\n    return (\n      <Provider store = { store }>\n        <ThemeProvider theme={muiTheme}>\n        <CssBaseline />\n        <Router>\n            <div>\n              <Navbar />\n                <div style={{marginLeft:0}}>\n                  <Route exact path=\"/login\" component={ Login } />\n                  <Route exact path=\"/\" component={ Home } />\n                  <Route exact path=\"/partners\" component={ Partners } />\n                  <Route exact path=\"/forgot_password\" component={ ForgotPassword } />\n                  <Route exact path=\"/reset_password\" component={ ResetPassword } />\n                  <Route exact path=\"/users\" component={ Users } />\n                  <Route exact path=\"/profile\" component={ Profile } />\n                  <Route exact path=\"/exams\" component={ Exams } />\n                  <Route exact path=\"/add_admin_exams\" component = { AddAdminExams } />\n                  <Route exact path=\"/admin_exams\" component={ AdminExams } />\n                  <Route exact path=\"/register\" component={ Register } />\n                </div>\n            </div>\n          </Router>\n          </ThemeProvider>\n        </Provider>\n    );\n  }\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}