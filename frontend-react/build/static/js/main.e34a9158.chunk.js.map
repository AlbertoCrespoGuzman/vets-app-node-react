{"version":3,"sources":["reducers/errorReducer.js","validation/is-empty.js","reducers/authReducer.js","reducers/usersReducer.js","reducers/profileReducer.js","reducers/adminExamsReducer.js","reducers/examsReducer.js","reducers/chatDialogReducer.js","reducers/index.js","actions/types.js","actions/actions.js","sagas/usersSagas.js","sagas/profileSagas.js","sagas/examsSagas.js","sagas/adminExamsSagas.js","sagas/chatDialogSagas.js","sagas/index.js","store.js","setAuthToken.js","actions/authentication.js","components/Register.js","components/Users.js","components/Profile.js","components/ChatDialog.js","components/Exams.js","components/AdminExams.js","components/Dropzone.js","components/Progress.js","components/Upload.js","components/AddAdminExams.js","components/Drawer.js","components/Navbar.js","components/ForgotPassword.js","components/Login.js","components/Home.js","components/ResetPassword.js","App.js","registerServiceWorker.js","index.js"],"names":["initialState","isEmpty","value","undefined","Object","keys","length","trim","isAuthenticated","user","INITIAL_STATE","data","isFetching","error","users","state","arguments","action","type","profile","adminExams","exams","file_id","chatDialog","combineReducers","errors","payload","auth","objectSpread","usersReducer","profileReducer","adminExamsReducer","examsReducer","chatDialogReducer","loadUsersSuccess","loadProfileSuccess","loadAdminExamsSuccess","loadExamsSuccess","loadChatDialogSuccess","getUsers","axios","actions","dados","regenerator_default","a","wrap","_context","prev","next","console","log","get","process","sent","put","stop","_marked","dotenv","config","getProfile","profileSagas_marked","getExams","examsSagas_marked","getAdminExams","adminExamsSagas_marked","getChatDialog","chatDialogSagas_marked","index","takeLatest","sagas_marked","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","compose","applyMiddleware","thunk","run","indexSaga","setAuthToken","token","defaults","headers","common","setCurrentUser","decoded","logoutUser","history","dispatch","localStorage","removeItem","push","Register","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","username","completename","cpf","address","crmv","technicalSupport","phone","handleInputChange","bind","assertThisInitialized","handleSubmit","handleSelectTypeChange","e","setState","defineProperty","target","name","preventDefault","props","registerUser","nextProps","errorsToSend","i","param","msg","password","confirmPassword","admin","classes","styles","react_default","createElement","Grid","container","spacing","direction","alignItems","justify","style","minHeight","marginTop","item","xs","Card","className","card","CardContent","Typography","variant","component","onSubmit","FormControl","formControl","fullWidth","InputLabel","htmlFor","Select","onChange","MenuItem","FormHelperText","id","color","margin","PropTypes","Input","aria-describedby","CardActions","Button","CircularProgress","Component","theme","button","input","display","connect","getItem","post","then","res","catch","err","JSON","stringify","response","withRouter","withStyles","Users","collapse","loadUsers","_this2","marginLeft","width","height","flex","justifyContent","alignContent","Grow","assign","in","transformOrigin","timeout","onClick","dist_default","title","columns","collapsedColumns","editable","onRowUpdate","newData","oldData","Promise","resolve","reject","alert","patch","_id","onRowDelete","setTimeout","detailPanel","tooltip","render","rowData","fontSize","textAlign","backgroundColor","padding","columnsFiles","files","icon","event","method","responseType","file","Blob","fileURL","URL","createObjectURL","anchor","document","download","displayName","href","click","delete","loadAdminExams","options","actionsColumnIndex","exportButton","exportFileName","localization","header","body","emptyDataSourceMessage","editRow","deleteText","toolbar","searchTooltip","searchPlaceholder","exportTitle","exportAriaLabel","exportName","pagination","labelRowsSelect","labelDisplayedRows","firstTooltip","previousTooltip","nextTooltip","lastTooltip","convertDateMax","date","Moment","format","field","lookup","1","2","3","4","Tooltip","lastActivity","Profile","isEditing","tab","message","isSaving","handleTabsChange","changeToEditProfile","saveProfile","postPassword","handleInputPasswordChange","loadProfile","_this3","varName","newValue","_React$createElement","Paper","Tabs","aria-label","Tab","label","a11yProps","TabPanel","handleSubmitProfile","disabled","children","other","objectWithoutProperties","role","hidden","concat","aria-labelledby","Box","p","aria-controls","ChatDialog","trackScrolling","wrappedElement","getElementById","isBottom","noReadMessageTag","noReadSendToServer","postMessagesRead","addEventListener","openDialog","scroll","maxChatRefresh","refreshIntervalTime","chatRefreshInterval","currentChatRefresh","renderMessage","handleClose","handleMessageChange","postMessage","getMessages","messagesEndRef","React","createRef","messagesNoReadRef","messagesList","loadChatDialogExams","current","scrollIntoView","behavior","comments","setInterval","commentsToAdd","forEach","comment","exists","commentProp","clearInterval","newProps","element","clientHeight","scrollHeight","scrollTop","Math","abs","removeEventListener","removeDialog","updateFile","_this4","key","read","sender","ListItem","ref","marginRight","background","blue","IconButton","float","Avatar","AssignmentInd_default","deepOrange","substring","sentTime","_this5","receiver","Dialog","fullScreen","maxWidth","open","onClose","DialogTitle","edge","Close_default","DialogContent","dividers","List","map","onBlur","DialogActions","paddingLeft","paddingRight","TextField","multiline","rowsMax","Send_default","loadChatDialogRequest","Exams","currentDialog","fileUpdated","loadExams","commentsEnabled","customerNoReadCommentsCount","badgeEmail1Messages","badgeEmail2Messages","badgeEmail3Messages","badgeEmailMoreThan3Messages","badgeEmailNoMessages","components_ChatDialog","rowStyle","Badge","Mail_default","badgeContent","AdminExams","adminNoReadCommentsCount","components","Action","textTransform","size","convertDateMin","lastRead","Dropzone","hightlight","fileInputRef","openFileDialog","onFilesAdded","onDragOver","onDragLeave","onDrop","evt","array","fileListToArray","disabed","dataTransfer","list","_ref","border","borderRadius","flexDirection","accept","CloudUpload_default","Progress","progress","Upload","uploading","uploadProgress","successfullUploaded","uploadFiles","sendRequest","renderActions","prevState","promises","all","FormData","append","userId","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","Symbol","iterator","done","return","ttthis","url","Content-Type","onUploadProgress","ProgressEvent","loaded","total","copy","percentage","triggerUploadedFinished","ProgressWrapper","components_Progress","CheckCircle_default","opacity","paddingTop","boxSizing","components_Dropzone","justifyItems","overflowY","Person_default","Edit_default","Row","PictureAsPdf_default","renderProgress","AddAdminExams","activeStep","skipped","Set","steps","getSteps","showStepper","userFilter","filteredUsers","firstTimeUpdated","handleSelectedUser","handleNext","handleBack","handleSkip","handleReset","getStepContent","handledisplayName","handleSelectedCommentsEnabled","handleUserFilterChange","userOk","userNameSelected","step","renderSelectUser","renderdisplayName","renderUploadFile","tempUsers","toLowerCase","includes","alignitems","isFetchingUsers","paddingBottom","native","placeholder","helpertext","minWidth","components_Upload","has","newSkipped","isStepSkipped","values","isStepOptional","Error","add","uploadFinished","Stepper","stepProps","labelProps","optional","completed","Step","StepLabel","marginBottom","useStyles","makeStyles","root","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","mixins","content","flexGrow","MiniDrawer","_clsx3","_clsx4","useTheme","_React$useState","useState","_React$useState2","slicedToArray","setOpen","onLogout","CssBaseline","react_router_dom","AppBar","position","clsx","Toolbar","Menu_default","noWrap","sectionDesktop","right","top","Drawer","paper","ChevronRight_default","ChevronLeft_default","Divider","Link","to","ListItemIcon","PersonAdd_default","ListItemText","primary","Group_default","NoteAdd_default","ContactMail_default","ExitToApp_default","react_router","exact","path","_sectionDesktop","unit","Navbar","_this$props$auth","guestLinks","ForgotPassword","emailSent","indexOf","gutterBottom","Login","loginUser","_React$createElement2","AdapterLink","forwardRef","innerRef","flexWrap","setItem","jwt_decode","Home","ResetPassword","passwordReseted","erros","location","search","split","jwtToken","currentTime","Date","now","exp","window","App","_useState","palette","main","secondary","accent","default","_useState2","muiTheme","createMuiTheme","es","ThemeProvider","components_Navbar","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","src_App","origin","fetch","status","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e34a9158.chunk.js","sourcesContent":["import { GET_ERRORS } from '../actions/types';\n\nconst initialState = {};\n\nexport default function(state = initialState, action ) {\n    switch(action.type) {\n        case GET_ERRORS:\n            return action.payload;\n        default: \n            return state;\n    }\n}","const isEmpty = (value) => {\n    return (\n        value === undefined ||\n        value === null ||\n        (typeof value === 'object' && Object.keys(value).length === 0) ||\n        (typeof value === 'string' && value.trim().length === 0)\n    );\n}\nexport default isEmpty;","import { SET_CURRENT_USER } from '../actions/types';\nimport isEmpty from '../validation/is-empty';\n\nconst initialState = {\n    isAuthenticated: false,\n    user: {}\n}\n\nexport default function(state = initialState, action ) {\n    switch(action.type) {\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                isAuthenticated: !isEmpty(action.payload),\n                user: action.payload\n            }\n        default: \n            return state;\n    }\n}","const INITIAL_STATE = {\n    data: [],\n    isFetching: false,\n    error:false\n}\n\nconst users = ( state = INITIAL_STATE, action) => {\n    if(action.type === 'LOAD_USERS_REQUEST' ){\n        return {\n            isFetching: true,\n            data: [],\n            error: false\n        }\n    }\n    if(action.type === 'LOAD_USERS_SUCCESS' ){\n        return {\n            isFetching: false,\n            data: action.data,\n            error: false,\n        }\n    }\n    if(action.type === 'LOAD_USERS_ERROR' ){\n        return {\n            isFetching: false,\n            data: [],\n            error: true\n        }\n    }\n    return state\n}\n\nexport default users","const INITIAL_STATE = {\n    data: [],\n    isFetching: false,\n    error:false\n}\n\nconst profile = ( state = INITIAL_STATE, action) => {\n    if(action.type === 'LOAD_PROFILE_REQUEST' ){\n        return {\n            isFetching: true,\n            data: [],\n            error: false\n        }\n    }\n    if(action.type === 'LOAD_PROFILE_SUCCESS' ){\n        return {\n            isFetching: false,\n            data: action.data,\n            error: false,\n        }\n    }\n    if(action.type === 'LOAD_PROFILE_ERROR' ){\n        return {\n            isFetching: false,\n            data: [],\n            error: true\n        }\n    }\n    return state\n}\n\nexport default profile","const INITIAL_STATE = {\n    data: [],\n    isFetching: false,\n    error:false\n}\n\nconst adminExams = ( state = INITIAL_STATE, action) => {\n    if(action.type === 'LOAD_ADMIN_EXAMS_REQUEST' ){\n        return {\n            isFetching: true,\n            data: [],\n            error: false\n        }\n    }\n    if(action.type === 'LOAD_ADMIN_EXAMS_SUCCESS' ){\n        return {\n            isFetching: false,\n            data: action.data,\n            error: false,\n        }\n    }\n    if(action.type === 'LOAD_ADMIN_EXAMS_ERROR' ){\n        return {\n            isFetching: false,\n            data: [],\n            error: true\n        }\n    }\n    return state\n}\n\nexport default adminExams","const INITIAL_STATE = {\n    data: [],\n    isFetching: false,\n    error:false\n}\n\nconst exams = ( state = INITIAL_STATE, action) => {\n    if(action.type === 'LOAD_EXAMS_REQUEST' ){\n        return {\n            isFetching: true,\n            data: [],\n            error: false\n        }\n    }\n    if(action.type === 'LOAD_EXAMS_SUCCESS' ){\n        return {\n            isFetching: false,\n            data: action.data,\n            error: false,\n        }\n    }\n    if(action.type === 'LOAD_EXAMS_ERROR' ){\n        return {\n            isFetching: false,\n            data: [],\n            error: true\n        }\n    }\n    return state\n}\n\nexport default exams","const INITIAL_STATE = {\n    data: [],\n    isFetching: false,\n    error:false,\n    file_id: null,\n}\n\nconst chatDialog = ( state = INITIAL_STATE, action) => {\n    if(action.type === 'LOAD_CHATDIALOG_REQUEST' ){\n        return {\n            isFetching: true,\n            data: [],\n            error: false,\n            file_id: action.file_id\n        }\n    }\n    if(action.type === 'LOAD_CHATDIALOG_SUCCESS' ){\n        return {\n            isFetching: false,\n            data: action.data,\n            error: false,\n            file_id: action.file_id,\n        }\n    }\n    if(action.type === 'LOAD_CHATDIALOG_ERROR' ){\n        return {\n            isFetching: false,\n            data: [],\n            error: true\n        }\n    }\n    return state\n}\n\nexport default chatDialog","import { combineReducers } from 'redux';\nimport errorReducer from './errorReducer';\nimport authReducer from './authReducer';\nimport usersReducer from './usersReducer'\nimport profileReducer from './profileReducer'\nimport adminExamsReducer from  './adminExamsReducer'\nimport examsReducer from  './examsReducer'\nimport chatDialogReducer from './chatDialogReducer'\n\nexport default combineReducers({\n    errors: errorReducer,\n    auth: authReducer,\n    users: usersReducer,\n    profile: profileReducer,\n    adminExams: adminExamsReducer,\n    exams: examsReducer,\n    chatDialog: chatDialogReducer,\n});","export const GET_ERRORS = 'GET_ERRORS';\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';","\nexport const loadUsersRequest = () => {\n    return {\n        type : 'LOAD_USERS_REQUEST'\n    }\n}\nexport const loadUsersSuccess = (data) => {\n    return {\n        type : 'LOAD_USERS_SUCCESS',\n        data\n    }   \n}\n\nexport const loadProfileRequest = () => {\n    return {\n        type : 'LOAD_PROFILE_REQUEST'\n    }\n}\nexport const loadProfileSuccess = (data) => {\n    return {\n        type : 'LOAD_PROFILE_SUCCESS',\n        data\n    }   \n}\n\nexport const loadAdminExamsRequest = () => {\n    return {\n        type : 'LOAD_ADMIN_EXAMS_REQUEST'\n    }\n}\nexport const loadAdminExamsSuccess = (data) => {\n    return {\n        type : 'LOAD_ADMIN_EXAMS_SUCCESS',\n        data\n    }   \n}\nexport const loadExamsRequest = () => {\n    return {\n        type : 'LOAD_EXAMS_REQUEST'\n    }\n}\nexport const loadExamsSuccess = (data) => {\n    return {\n        type : 'LOAD_EXAMS_SUCCESS',\n        data\n    }   \n}\nexport const loadChatDialogRequest = (file_id) => {\n    return {\n        type : 'LOAD_CHATDIALOG_REQUEST',\n        file_id\n    }\n}\nexport const loadChatDialogSuccess = (data, file_id) => {\n    return {\n        type : 'LOAD_CHATDIALOG_SUCCESS',\n        data,\n        file_id\n    }   \n}","import { put } from 'redux-saga/effects'\nimport  { loadUsersSuccess } from './../actions/actions'\nimport dotenv from 'dotenv'\ndotenv.config()\n\nfunction *getUsers(axios, actions){\n    console.log('usersSagas')    \n    const dados = yield axios.get(process.env.REACT_APP_API_HOST + '/api/users/')\n        console.log(dados.data)\n        yield put(loadUsersSuccess(dados.data))\n    \n}\nexport default getUsers","import { put } from 'redux-saga/effects'\nimport  { loadProfileSuccess } from './../actions/actions'\nimport dotenv from 'dotenv'\ndotenv.config()\n\nfunction *getProfile(axios, actions){\n    console.log('profileSagas')    \n    const dados = yield axios.get(process.env.REACT_APP_API_HOST + '/api/users/me')\n        console.log('eeeee', dados.data)\n        yield put(loadProfileSuccess(dados.data))\n    \n}\nexport default getProfile","import { put } from 'redux-saga/effects'\nimport  { loadExamsSuccess } from './../actions/actions'\nimport dotenv from 'dotenv'\ndotenv.config()\n\nfunction *getExams(axios, actions){\n    \n    const dados = yield axios.get(process.env.REACT_APP_API_HOST + '/api/files/')\n        console.log(dados.data)\n        yield put(loadExamsSuccess(dados.data))\n    \n}\nexport default getExams","import { put } from 'redux-saga/effects'\nimport  { loadAdminExamsSuccess } from './../actions/actions'\nimport dotenv from 'dotenv'\ndotenv.config()\n\nfunction *getAdminExams(axios){\n\n    const dados = yield axios.get(process.env.REACT_APP_API_HOST + '/api/files/')\n        console.log(dados.data)\n        yield put(loadAdminExamsSuccess(dados.data))\n    \n}\nexport default getAdminExams\n","import { put } from 'redux-saga/effects'\nimport  { loadChatDialogSuccess } from './../actions/actions'\nimport dotenv from 'dotenv'\ndotenv.config()\n\nfunction *getChatDialog(axios, actions){\n        const dados = yield axios.get(process.env.REACT_APP_API_HOST + '/api/comments/file/' + actions.file_id)\n        \n        yield put(loadChatDialogSuccess(dados.data, actions.file_id))\n    \n}\nexport default getChatDialog","import { takeLatest } from 'redux-saga/effects'\nimport getUsers from './usersSagas'\nimport getProfile from './profileSagas'\nimport getExams from './examsSagas'\nimport getAdminExams from './adminExamsSagas'\nimport getChatDialog from './chatDialogSagas'\n\nimport axios from 'axios'\n\nfunction *index(){\n    \n    yield takeLatest('LOAD_USERS_REQUEST', getUsers, axios)\n    yield takeLatest('LOAD_PROFILE_REQUEST', getProfile, axios)\n    yield takeLatest('LOAD_ADMIN_EXAMS_REQUEST', getAdminExams, axios)\n    yield takeLatest('LOAD_EXAMS_REQUEST', getExams, axios)\n    yield takeLatest('LOAD_CHATDIALOG_REQUEST', getChatDialog, axios)\n}\n\nexport default index","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport  createSagaMiddleware from 'redux-saga' \nimport indexSaga from './sagas/index'\n\nconst inititalState = {};\n\nconst sagaMiddleware = createSagaMiddleware()\n\n\nconst store = createStore(\n        rootReducer, \n        inititalState, \n        compose(applyMiddleware(thunk,sagaMiddleware), \n              /*  window.__REDUX_DEVTOOLS_EXTENSION__&& window.__REDUX_DEVTOOLS_EXTENSION__() */));\n\nsagaMiddleware.run(indexSaga)\n\nexport default store;","import axios from 'axios';\n\nconst setAuthToken = token => {\n   \n    if(token) {\n        axios.defaults.headers.common['Authorization'] = token;\n    }\n    else {\n        delete axios.defaults.headers.common['Authorization'];\n    }\n}\n\nexport default setAuthToken;","import axios from 'axios';\nimport { GET_ERRORS, SET_CURRENT_USER } from './types';\nimport setAuthToken from '../setAuthToken';\nimport jwt_decode from 'jwt-decode'\nimport dotenv from 'dotenv'\ndotenv.config()\n\nexport const registerUser = (user, history) => dispatch => {\n    \n    if(localStorage.getItem('jwtToken')){\n        axios.defaults.headers.common['Authorization'] = localStorage.getItem('jwtToken')\n        console.log(axios.defaults.headers.common['Authorization'])\n        axios.post(process.env.REACT_APP_API_HOST + '/api/users/register', user)\n                .then(res => history.push('/users?registrationSucessfull=true'))\n                .catch(err => {\n                    console.log(JSON.stringify(err.response))\n                    dispatch({\n                        type: GET_ERRORS,\n                        payload: err.response.data\n                    });\n                });\n    }else{\n        history.push('/login')\n    }\n    \n}\n\nexport const loginUser = (user) => dispatch => {\n    \n    axios.post(process.env.REACT_APP_API_HOST + '/api/users/login', user)\n            .then(res => {\n                console.log('res', res.data)\n                const { token } = res.data;\n                localStorage.setItem('jwtToken', token);\n                setAuthToken(token);\n                const decoded = jwt_decode(token);\n                dispatch(setCurrentUser(decoded));\n            })\n            .catch((err) => {\n                console.log(err)\n                console.log(err.response)\n                if(err && err.response){\n                    dispatch({\n                        type: GET_ERRORS,\n                        payload: err.response.data\n                    })\n                }else{\n                    console.log(err)\n                }\n                \n            });\n}\n\nexport const setCurrentUser = decoded => {\n    return {\n        type: SET_CURRENT_USER,\n        payload: decoded\n    }\n}\n\nexport const logoutUser = (history) => dispatch => {\n    localStorage.removeItem('jwtToken');\n    setAuthToken(false);\n    dispatch(setCurrentUser({}));\n    history.push('/login');\n}","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { withRouter } from 'react-router-dom'\nimport { registerUser } from '../actions/authentication'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { withStyles } from '@material-ui/styles'\nimport MenuItem   from '@material-ui/core/MenuItem'\nimport Select   from '@material-ui/core/Select'\nimport FormControl   from '@material-ui/core/FormControl'\nimport InputLabel   from '@material-ui/core/InputLabel'\nimport Input   from '@material-ui/core/Input'\nimport FormHelperText   from '@material-ui/core/FormHelperText'\nimport Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport CircularProgress from '@material-ui/core/CircularProgress' \n\nclass Register extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            username: '',\n            type: 0,\n            completename: '',\n            cpf: '',\n            address: '',\n            crmv: '',\n            technicalSupport: '',\n            phone: '',\n    //        password: '',\n    //        confirmPassword: '',\n            errors: {},\n            isFetching: false\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleSelectTypeChange = this.handleSelectTypeChange.bind(this)\n    }\n    \n    handleInputChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    handleSelectTypeChange(e){\n        console.log('e ', e)\n        this.setState({\n            type: e.target.value\n        })\n    }\n    handleSubmit(e) {\n        e.preventDefault();\n        const user = {\n            username: this.state.username,\n            type: this.state.type,\n            completename: this.state.completename,\n            cpf: this.state.cpf,\n            address: this.state.address,\n            phone: this.state.phone,\n            crmv: this.state.crmv,\n            technicalSupport: this.state.technicalSupport\n        }\n        this.setState({\n            isFetching: true\n        })\n        this.props.registerUser(user, this.props.history);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.auth.isAuthenticated) {\n    //        this.props.history.push('/')\n        }\n        this.setState({\n            isFetching: false\n        })\n        if(nextProps.errors) {\n            var errors = nextProps.errors.errors\n            console.log(errors)\n            var errorsToSend = {\n\n            }\n            if(errors && errors.length){\n                for(var i=0;i<errors.length;i++){\n                    console.log(errors[i].param)\n                    if(errors[i].param === 'username'){\n                        errorsToSend.username = errors[i].msg\n                    }else if(errors[i].param === 'password'){\n                        errorsToSend.password = errors[i].msg\n                    }\n                    else if(errors[i].param === 'confirmPassword'){\n                        errorsToSend.confirmPassword = errors[i].msg\n                    }\n                    else if(errors[i].param === 'type'){\n                        errorsToSend.type = errors[i].msg\n                    }\n                }\n                console.log(errorsToSend)\n                this.setState({\n                    errors: errorsToSend\n                })\n            }\n        }\n    }\n\n    componentDidMount() {\n        if(this.props.auth.isAuthenticated && !this.props.auth.user.admin) {\n            this.props.history.push('/');\n        }\n    }\n    \n    render() {\n        \n        \n        const { errors } = this.state\n        const classes = styles()\n  //      React.useEffect(() => {\n  //          setLabelWidth(labelRef.current.offsetWidth)\n  //        }, [])\n\n\n        return(\n            <Grid\n            container\n            spacing={0}\n            direction=\"column\"\n            alignItems=\"center\"\n            justify=\"center\"\n            style={{ minHeight: '100vh', marginTop: 50 }}\n           >\n          \n            <Grid item xs={5}>\n                    <Card className={classes.card}>\n                    <CardContent>\n                    <Typography \n                            variant=\"h5\" component=\"h2\">\n                        Casdastrar novo usuário\n\n                    </Typography>\n                    <form onSubmit={ this.handleSubmit }>\n                    <FormControl className={classes.formControl} fullWidth={true} >\n                        <InputLabel htmlFor=\"type-error\">Tipo de Usuário</InputLabel>\n                        <Select\n                        value={this.state.type}\n                        onChange={this.handleSelectTypeChange}\n                        name=\"type\"\n                        \n                        >\n                        <MenuItem value={0}>\n                            <em>Escolha tipo de usuário</em>\n                        </MenuItem>\n                        <MenuItem value={1}>Cliente</MenuItem>\n                        <MenuItem value={2}>Clínica</MenuItem>\n                        <MenuItem value={3}>Veterinário</MenuItem>\n                        <MenuItem value={4}>Administrador</MenuItem>\n                        </Select>\n                        {errors.type && (<FormHelperText id=\"type-text\" style={{color: 'red'}}>{errors.type}</FormHelperText>)}\n                    </FormControl>\n                        <FormControl className={classes.formControl} fullWidth={true} margin={PropTypes.margin}>\n                            <InputLabel htmlFor=\"username\">E-mail</InputLabel>\n                            <Input\n                            type=\"text\"\n                            id=\"username\"\n                            value={ this.state.username }\n                            name=\"username\"\n                            onChange={this.handleInputChange}\n                            aria-describedby=\"username-text\"\n                            value={ this.state.username }\n                            />\n                            {errors.username && (<FormHelperText id=\"username-text\" style={{color: 'red'}}>{errors.username}</FormHelperText>)}\n                        </FormControl>\n                        <FormControl className={classes.formControl} fullWidth={true} >\n                            <InputLabel htmlFor=\"completename\">Nome Completo</InputLabel>\n                            <Input\n                            type=\"text\"\n                            id=\"completename\"\n                            value={ this.state.completename }\n                            name=\"completename\"\n                            onChange={this.handleInputChange}\n                            aria-describedby=\"completename-text\"\n                            value={ this.state.completename }\n                            />\n                            {errors.completename && (<FormHelperText id=\"completename-text\" style={{color: 'red'}}>{errors.completename}</FormHelperText>)}\n                        </FormControl>\n                        <FormControl className={classes.formControl} fullWidth={true} >\n                            <InputLabel htmlFor=\"cpf\">CPF/CNPJ</InputLabel>\n                            <Input\n                            type=\"text\"\n                            id=\"cpf\"\n                            value={ this.state.cpf }\n                            name=\"cpf\"\n                            onChange={this.handleInputChange}\n                            aria-describedby=\"cpf-text\"\n                            value={ this.state.cpf }\n                            />\n                            {errors.cpf && (<FormHelperText id=\"cpf-text\" style={{color: 'red'}}>{errors.cpf}</FormHelperText>)}\n                        </FormControl>\n                        {this.state.type != 3 && (\n                            <FormControl className={classes.formControl} fullWidth={true} >\n                                <InputLabel htmlFor=\"address\">Endereço</InputLabel>\n                                <Input\n                                type=\"text\"\n                                id=\"address\"\n                                value={ this.state.address }\n                                name=\"address\"\n                                onChange={this.handleInputChange}\n                                aria-describedby=\"address-text\"\n                                value={ this.state.address }\n                                />\n                                {errors.address && (<FormHelperText id=\"address-text\" style={{color: 'red'}}>{errors.address}</FormHelperText>)}\n                            </FormControl>\n                        )\n                        }\n                        <FormControl className={classes.formControl} fullWidth={true} >\n                            <InputLabel htmlFor=\"phone\">Telephone de Contato</InputLabel>\n                            <Input\n                            type=\"text\"\n                            id=\"phone\"\n                            value={ this.state.phone }\n                            name=\"phone\"\n                            onChange={this.handleInputChange}\n                            aria-describedby=\"phone-text\"\n                            value={ this.state.phone }\n                            />\n                            {errors.phone && (<FormHelperText id=\"phone-text\" style={{color: 'red'}}>{errors.phone}</FormHelperText>)}\n                        </FormControl>\n                        {(this.state.type == 2 || this.state.type == 3)  && (\n                        <FormControl className={classes.formControl} fullWidth={true} >\n                            <InputLabel htmlFor=\"crmv\">CRMV</InputLabel>\n                            <Input\n                            type=\"text\"\n                            id=\"crmv\"\n                            value={ this.state.crmv }\n                            name=\"crmv\"\n                            onChange={this.handleInputChange}\n                            aria-describedby=\"crmv-text\"\n                            value={ this.state.crmv }\n                            />\n                            {errors.crmv && (<FormHelperText id=\"crmv-text\" style={{color: 'red'}}>{errors.crmv}</FormHelperText>)}\n                        </FormControl>\n                        )}\n                        {this.state.type == 2 && (\n                            <FormControl className={classes.formControl} fullWidth={true} >\n                                <InputLabel htmlFor=\"technicalSupport\">Responsável Tecnico</InputLabel>\n                                <Input\n                                type=\"text\"\n                                id=\"technicalSupport\"\n                                value={ this.state.technicalSupport }\n                                name=\"technicalSupport\"\n                                onChange={this.handleInputChange}\n                                aria-describedby=\"technicalSupport-text\"\n                                value={ this.state.technicalSupport }\n                                />\n                                {errors.technicalSupport && (<FormHelperText id=\"technicalSupport-text\" style={{color: 'red'}}>{errors.technicalSupport}</FormHelperText>)}\n                            </FormControl>\n                        )}\n                    <CardActions>\n                        {!this.state.isFetching && (<Button fullWidth={true} variant=\"contained\" color=\"primary\" type=\"submit\" >\n                            Cadastrar\n                        </Button> )}\n                        {this.state.isFetching && (\n                            <Grid\n                            container\n                            spacing={0}\n                            direction=\"column\"\n                            alignItems=\"center\"\n                            justify=\"center\"\n                            style={{marginTop: 30}}\n                          >\n                                <CircularProgress />\n                            </Grid>\n                        )}\n                    </CardActions>\n                    </form>\n                    </CardContent>\n                </Card>\n            </Grid>      \n          </Grid>\n        )\n    }\n}\n\nconst styles = theme => ({\n    button: {\n    //  margin: theme.spacing(1),\n    },\n    input: {\n      display: 'none',\n    },\n    formControl:{\n        marginTop:200\n    }\n  })\nRegister.propTypes = {\n    registerUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(mapStateToProps,{ registerUser })(withRouter(Register), withStyles(styles))","import React, { Component } from 'react';\nimport { loadUsersRequest } from '../actions/actions'\nimport { connect } from 'react-redux'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Card from '@material-ui/core/Grid'\nimport CardContent from '@material-ui/core/Grid'\nimport MaterialTable from 'material-table'\nimport Moment from 'moment'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport axios from 'axios'\nimport Grow from '@material-ui/core/Grow'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Button from '@material-ui/core/Button'\nimport dotenv from 'dotenv'\ndotenv.config()\n\nclass Users extends Component {\n    \n    constructor(props){\n        super(props)\n        this.state = {\n            collapse: true\n        }\n    }\n    \n    componentDidMount(){\n        this.props.loadUsers()\n    }\n\n    render() {\n        return (\n            <div style={{marginLeft:10, marginTop: 40, width:'100%', height:'100%'}}>\n            {this.props.isFetching && (\n                            <Grid\n                            container\n                            spacing={0}\n                            direction=\"column\"\n                            alignItems=\"center\"\n                            justify=\"center\"\n                            style={{flex:1, marginTop:100,justifyContent: 'center', alignContent: 'center', alignItems: 'center'}}\n                          >\n                                <CircularProgress />\n                            </Grid>\n                        )}\n               {!this.props.isFetching && (\n               <Grow\n                in={!this.props.isFetching}\n                style={{ transformOrigin: '0 0 0' }}\n                {...(!this.props.isFetching ? { timeout: 1000 } : {})}\n                >\n                <Grid\n                    container\n                    spacing={0}\n                    direction=\"column\"\n                    alignItems=\"center\"\n                    justify=\"center\"\n                    style={{ minHeight: '100vh',  }}\n                >\n                \n                    <Grid item xs={12}>\n                    <div style={{flex: 1, alignContent: 'center', margin: 10}}><Button onClick={()=>{ this.setState({ collapse: !this.state.collapse})}}>{this.state.collapse ? 'Ver todas Colunas' :  'Ocultar Colunas'}</Button></div>\n               \n                    <MaterialTable\n                        title=\"Usuários\"\n                        columns={!this.state.collapse ? columns : collapsedColumns}\n                        data={this.props.users}\n                        editable={{\n\n                            onRowUpdate: (newData, oldData) =>\n                                new Promise((resolve, reject) => {\n                                    if(!this.state.collapse){\n                                        axios.patch(process.env.REACT_APP_API_HOST + '/api/users/' + oldData._id, newData)\n                                        .then(res => {\n                                            this.props.loadUsers()\n                                            resolve()\n                                        })\n                                       .catch(err => {\n                                            reject()\n                                       })\n                                    }else{\n                                        alert('Habilite todas as colunas para realizar essa ação')\n                                        resolve()\n                                    }\n                                    \n                                }),\n                            onRowDelete: oldData =>\n                                new Promise((resolve, reject) => {\n                                    setTimeout(() => {\n                                        {\n                                            alert('opção não habilitada')\n                                        }\n                                        resolve();\n                                    }, 1000);\n                                })\n                        }}\n                        detailPanel={[\n                            {\n                              tooltip: 'Ver Exames',\n                              render: rowData => {\n                                return (\n                                    <Grow\n                                        in={!this.props.isFetching}\n                                        style={{ transformOrigin: '0 0 0' }}\n                                        {...(!this.props.isFetching ? { timeout: 1000 } : {})}\n                                        >\n                                  <div\n                                    style={{\n                                      fontSize: 100,\n                                      textAlign: 'center',\n                                      color: 'white',\n                                      backgroundColor: '#43A047',\n                                      padding: 20\n                                    }}\n                                  >\n                                    <MaterialTable\n                                            title=\"Exames\"\n                                            columns={columnsFiles}\n                                            data={rowData.files}\n                                            actions={[\n                                                {\n                                                icon: 'remove_red_eye',\n                                                tooltip: 'Visualizar Arquivo',\n                                                onClick: (event, rowData) => {\n                                                axios(process.env.REACT_APP_API_HOST + '/api/files/' + rowData._id, {\n                                                        method: 'GET',\n                                                        responseType: 'blob' //Force to receive data in a Blob Format\n                                                    })\n                                                    .then(response => {\n                                                        const file = new Blob(\n                                                        [response.data], \n                                                        {type: 'application/pdf'})\n                                                        \n                                                        const fileURL = URL.createObjectURL(file)\n                                                    var anchor = document.createElement(\"a\");\n                                                    anchor.download = rowData.displayName + '.' + rowData.type;\n                                                    anchor.href = fileURL;\n                                                    anchor.click()\n                                                    //    window.open(fileURL);\n                                                    })\n                                                    .catch(error => {\n                                                        console.log(error);\n                                                    });\n                                                }\n                                                }\n                                            ]}\n                                            editable={{\n\n                                                onRowDelete: oldData =>\n                                                    new Promise((resolve, reject) => {\n                                                        axios.delete(process.env.REACT_APP_API_HOST + '/api/files/' + oldData._id)\n                                                            .then(res => {\n                                                                this.props.loadAdminExams()\n                                                                resolve(res)\n                                                            })\n                                                            .catch(err => {\n                                                                reject(err)\n                                                            })\n                                                    })\n                                            }}\n                                    options={{\n                                        actionsColumnIndex: -1,\n                                        exportButton: true,\n                                        exportFileName: 'Lista de Exames'\n                                    }}\n                                    localization={{\n                                        header: {\n                                            actions: 'Ações'\n                                        },\n                                        body: {\n                                        emptyDataSourceMessage: 'Sem dados para mostrar',\n                                        editRow: {\n                                            deleteText: 'Tem certeza que quer deletar o exame?'\n                                        }\n                                        },\n                                        toolbar: {\n                                        searchTooltip: 'Procurar',\n                                        searchPlaceholder: 'Procurar',\n                                        exportTitle: 'Exportar CSV',\n                                        exportAriaLabel: 'Exportar CSV',\n                                        exportName: 'Exportar CSV'\n\n                                        },\n                                        pagination: {\n                                        labelRowsSelect: 'Filas',\n                                        labelDisplayedRows: '{count} de {from}-{to} ',\n                                        firstTooltip: 'Primeira',\n                                        previousTooltip: 'Anterior',\n                                        nextTooltip: 'Seguinte',\n                                        lastTooltip: 'Última Página'\n                                        }\n                                    }}\n                                    />\n                                  </div>\n                                 </Grow>\n                                )\n                              },\n                            },]}\n                        options={{\n                            actionsColumnIndex: -1,\n                            exportButton: true,\n                            exportFileName: 'Usuarios'\n                          }}\n                          localization={{\n                            header: {\n                                actions: 'Ações'\n                            },\n                            body: {\n                              emptyDataSourceMessage: 'Sem dados para mostrar',\n                              editRow: {\n                                deleteText: 'Tem certeza que quer deletar o usuário?'\n                              }\n                            },\n                            toolbar: {\n                              searchTooltip: 'Procurar',\n                              searchPlaceholder: 'Procurar',\n                              exportTitle: 'Exportar CSV',\n                              exportAriaLabel: 'Exportar CSV',\n                              exportName: 'Exportar CSV'\n\n                            },\n                            pagination: {\n                              labelRowsSelect: 'Filas',\n                              labelDisplayedRows: '{count} de {from}-{to} ',\n                              firstTooltip: 'Primeira',\n                              previousTooltip: 'Anterior',\n                              nextTooltip: 'Seguinte',\n                              lastTooltip: 'Última Página'\n                            }\n                          }}\n                        />\n                    </Grid>\n             </Grid>\n             </Grow>\n             )}\n            \n            </div>\n        );\n    }\n}\nfunction convertDateMin(date){\n    return  Moment(date).format('DD/MM/YY')\n }\n function convertDateMax(date){\n    return  Moment(date).format('DD/MM/YYYY hh:mm A')\n }\nconst columns = [\n{ title: 'E-mail', field: 'username' },\n{ title: 'Nome', field: 'completename' },\n{\n    title: 'Tipo',\n    field: 'type',\n    lookup: { 1: 'Cliente', 2: 'Clínica', 3: 'Veterinário', 4: 'Admin' },\n},\n{ title: 'CPF/CNPJ', field: 'cpf' },\n{ title: 'Endereço',\n  field: 'address' },\n // render: rowData => <Tooltip title={rowData.address ? rowData.address : 'Sem Endereço definido'} placement=\"top\"><div> {( rowData.address && rowData.address.length > 5) ? (rowData.address.substring(0,5) + '...') : rowData.address} </div></Tooltip>  },\n{ title: 'Atividade', \n  field: 'lastActivity',\n  type: 'datetime', \n  render: rowData => <Tooltip title={convertDateMax(rowData.lastActivity)}><div> {convertDateMin(rowData.lastActivity) }</div></Tooltip> },\n{ title: 'Fone', field: 'phone' },\n{ title: 'Responsável  Tecnico', field: 'technicalSupport' },\n{ title: 'CRMV', field: 'crmv' },\n]\nconst collapsedColumns = [\n    { title: 'Nome', field: 'completename' },\n    {\n        title: 'Tipo',\n        field: 'type',\n        lookup: { 1: 'Cliente', 2: 'Clínica', 3: 'Veterinário', 4: 'Admin' },\n    },\n    \n    { title: 'Atividade', \n      field: 'lastActivity',\n      type: 'datetime', \n      render: rowData => <Tooltip title={convertDateMax(rowData.lastActivity)}><div> {convertDateMax(rowData.lastActivity) }</div></Tooltip> },\n   \n    ]\n\nconst columnsFiles = [\n    { title: 'Nome', field: 'displayName' },\n    { title: 'Tipo', field: 'type' },\n    { title: 'Lido', field: 'read', type: 'boolean' },\n    { title: 'Data subida', \n      field: 'lastActivity',\n      type: 'datetime', \n      render: rowData => <Tooltip title={convertDateMax(rowData.lastActivity)}><div> {convertDateMax(rowData.lastActivity) }</div></Tooltip> },\n    ]\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        isFetching: state.users.isFetching,\n        users: state.users.data,\n        error: state.users.error\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        loadUsers: () => dispatch(loadUsersRequest())\n    }\n} \n\nexport default connect(mapStateToProps, mapDispatchToProps)(Users)","import React, { Component } from 'react';\nimport { loadProfileRequest } from '../actions/actions'\nimport { connect } from 'react-redux'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Box from '@material-ui/core/Box'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport PropTypes from 'prop-types'\nimport Paper from '@material-ui/core/Paper'\nimport MenuItem   from '@material-ui/core/MenuItem'\nimport Select   from '@material-ui/core/Select'\nimport FormControl   from '@material-ui/core/FormControl'\nimport InputLabel   from '@material-ui/core/InputLabel'\nimport Input   from '@material-ui/core/Input'\nimport FormHelperText   from '@material-ui/core/FormHelperText'\nimport Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport CircularProgress from '@material-ui/core/CircularProgress' \nimport AppBar from  '@material-ui/core/AppBar' \nimport { minWidth } from '@material-ui/system';\nimport axios from 'axios'\nimport dotenv from 'dotenv'\ndotenv.config()\n\nclass Profile extends Component {\n    \n    constructor(props){\n        \n        super(props)\n        this.state = {\n            isEditing: false,\n            tab: 0,\n            errors: false,\n            message: false,\n            isSaving: false,\n            password: '',\n            confirmPassword: ''\n        }\n        \n        this.handleTabsChange = this.handleTabsChange.bind(this)\n        this.changeToEditProfile = this.changeToEditProfile.bind(this)\n        this.handleInputChange = this.handleInputChange.bind(this)\n        this.saveProfile = this.saveProfile.bind(this)\n        this.postPassword = this.postPassword.bind(this)\n        this.handleInputPasswordChange = this.handleInputPasswordChange.bind(this)\n    }\n    \n    componentDidMount(){\n        this.props.loadProfile()\n    }\n    postPassword(){\n        if(!this.state.password || !this.state.confirmPassword){\n            this.setState({\n                errors: 'Por favor, escrever senha e confirmar a mesma'\n            })\n        }else if(this.state.password.length < 6){\n            this.setState({\n                errors: 'A senha deve ter minimo 6 carateres'\n            })\n        }else if(this.state.password != this.state.confirmPassword){\n            this.setState({\n                errors: 'A senhas não coincidem'\n            })\n        }else{\n            this.setState({\n                isSaving: true\n            })\n            axios.post(process.env.REACT_APP_API_HOST + '/api/users/reset_password', {password: this.state.password,\n                                                     confirmPassword: this.state.confirmPassword})\n                  .then(res => {\n                        this.setState({\n                            password: '',\n                            confirmPassword: '',\n                            isSaving: false,\n                            message: 'Sua senha foi redefinida com sucesso'\n                        })\n                  })\n                  .catch(err => {\n                      if(err && err.response){\n                          this.setState({\n                              errors: JSON.stringify(err.response),\n                              isSaving: false\n                          })\n                      }\n                  })\n        }\n        \n    }\n    saveProfile(){\n        this.setState({\n            isSaving: true\n        })\n        axios.post(process.env.REACT_APP_API_HOST + '/api/users/me', this.props.profile)\n            .then(res => {\n                \n                this.props.profile.address = res.data.address\n                this.props.profile.cpf = res.data.cpf\n                this.props.profile.completename = res.data.completename\n                \n                this.setState({\n                    isSaving: false,\n                    isEditing: false\n                })\n            })\n            .catch(err => {\n                this.setState({\n                    errors: JSON.stringify(err.response)\n                })\n            })\n    }\n    handleInputChange(e) {\n        const varName = e.target.name\n        this.props.profile[varName] = e.target.value\n        this.setState({})\n    }\n    handleInputPasswordChange(e){\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    handleSelectTypeChange(e){\n        this.setState({\n            type: e.target.value\n        })\n    }\n    handleSubmitProfile(e) {\n        e.preventDefault();\n    }\n    handleTabsChange(event, newValue){\n        this.setState({\n            tab: newValue\n        })\n    }\n    changeToEditProfile(){\n        this.setState({\n            isEditing : true\n        })\n    }\n    render() {\n        return (\n            <div style={{marginTop: 80, marginLeft: 30, width: '100%', height: '100%', flex: 1, justifyContent: 'center', alignContent:'center'}}>\n               <Typography>\n                   Meu Perfil\n               </Typography>\n               \n               <Paper style={{marginTop:10, width: '70%'}}>\n                    <Tabs \n                    value={this.state.tab} onChange={this.handleTabsChange} aria-label=\"Meu Perfil\">\n                    <Tab label=\"Detalhes Conta\" {...a11yProps(0)} />\n                    <Tab label=\"Modificar Senha\" {...a11yProps(1)} />\n                    </Tabs>\n                <TabPanel value={this.state.tab} index={0}>\n                {!this.props.isFetching &&(\n                        <form onSubmit={ this.handleSubmitProfile }>\n                            <FormControl className={classes.formControl} fullWidth={true} >\n                                <InputLabel htmlFor=\"type-error\">Tipo de Usuário</InputLabel>\n                                <Select\n                                value={this.props.profile.type}\n                                onChange={this.handleSelectTypeChange}\n                                name=\"type\"\n                                disabled={true}\n                                >\n                                    <MenuItem value={0}>\n                                        <em>Escolha tipo de usuário</em>\n                                    </MenuItem>\n                                    <MenuItem value={1}>Cliente</MenuItem>\n                                    <MenuItem value={2}>Clínica</MenuItem>\n                                    <MenuItem value={3}>Veterinário</MenuItem>\n                                    <MenuItem value={4}>Administrador</MenuItem>\n                                </Select>\n                                \n                            </FormControl>\n                                <FormControl className={classes.formControl} fullWidth={true} margin={PropTypes.margin}>\n                                    <InputLabel htmlFor=\"username\">E-mail</InputLabel>\n                                    <Input\n                                    type=\"text\"\n                                    id=\"username\"\n                                    name=\"username\"\n                                    onChange={this.handleInputChange}\n                                    aria-describedby=\"username-text\"\n                                    onChange={ this.handleInputChange }\n                                    value={ this.props.profile.username }\n                                    disabled={true}\n                                    />\n                                    \n                                </FormControl>\n                                <FormControl className={classes.formControl} fullWidth={true} >\n                                    <InputLabel htmlFor=\"completename\">Nome Completo</InputLabel>\n                                    <Input\n                                    type=\"text\"\n                                    id=\"completename\"\n                                    name=\"completename\"\n                                    onChange={this.handleInputChange}\n                                    aria-describedby=\"completename-text\"\n                                    value={ this.props.profile.completename }\n                                    disabled={!this.state.isEditing}\n                                    />\n                                    {this.props.error.completename && (<FormHelperText id=\"completename-text\">{this.props.error.completename}</FormHelperText>)}\n                                </FormControl>\n                                <FormControl className={classes.formControl} fullWidth={true} >\n                                    <InputLabel htmlFor=\"cpf\">CPF/CNPJ</InputLabel>\n                                    <Input\n                                    type=\"text\"\n                                    id=\"cpf\"\n                                    name=\"cpf\"\n                                    aria-describedby=\"cpf-text\"\n                                    onChange={ this.handleInputChange }\n                                    value={ this.props.profile.cpf }\n                                    disabled={!this.state.isEditing}\n                                    />\n                                    {this.props.error.cpf && (<FormHelperText id=\"cpf-text\">{this.props.error.cpf}</FormHelperText>)}\n                                </FormControl>\n                                <FormControl className={classes.formControl} fullWidth={true} >\n                                    <InputLabel htmlFor=\"address\">Endereço</InputLabel>\n                                    <Input\n                                    type=\"text\"\n                                    id=\"address\"\n                                    name=\"address\"\n                                    aria-describedby=\"address-text\"\n                                    onChange={ this.handleInputChange }\n                                    value={ this.props.profile.address }\n                                    disabled={!this.state.isEditing}\n                                    />\n                                    {this.props.error.address && (<FormHelperText id=\"address-text\">{this.props.error.address}</FormHelperText>)}\n                                </FormControl>\n                            \n                            <CardActions>\n                                {!this.state.isSaving && !this.state.isEditing && \n                                    (<Button \n                                        onClick={this.changeToEditProfile}\n                                        fullWidth={true} variant=\"outlined\" color=\"primary\" type=\"submit\" >\n                                        Modificar Perfil\n                                </Button> )}\n                                {!this.state.isSaving && this.state.isEditing &&\n                                    (<Button \n                                        onClick={this.saveProfile}\n                                        fullWidth={true} variant=\"contained\" color=\"primary\" type=\"submit\" >\n                                        Salvar\n                                </Button> )}\n                                \n                                {this.state.isSaving && (\n                                    <Grid\n                                    container\n                                    spacing={0}\n                                    direction=\"column\"\n                                    alignItems=\"center\"\n                                    justify=\"center\"\n                                    style={{marginTop: 30}}\n                                >\n                                        <CircularProgress />\n                                    </Grid>\n                                )}\n                            </CardActions>\n                            </form>\n                            )}\n                </TabPanel>\n                <TabPanel value={this.state.tab} index={1}>\n                {!this.props.isFetching &&(\n                        <form onSubmit={ this.handleSubmitProfile }>\n                            \n                                <FormControl className={classes.formControl} fullWidth={true} margin={PropTypes.margin}>\n                                    <InputLabel htmlFor=\"password\">Nova senha</InputLabel>\n                                    <Input\n                                    type=\"password\"\n                                    id=\"password\"\n                                    name=\"password\"\n                                    onChange={this.handleInputPasswordChange}\n                                    aria-describedby=\"password-text\"\n                                    value={ this.state.password }\n                                    />\n                                </FormControl>\n                                <FormControl className={classes.formControl} fullWidth={true} margin={PropTypes.margin}>\n                                    <InputLabel htmlFor=\"confirmPassword\">Confirmar Nova senha</InputLabel>\n                                    <Input\n                                    type=\"password\"\n                                    id=\"confirmPassword\"\n                                    name=\"confirmPassword\"\n                                    onChange={this.handleInputPasswordChange}\n                                    aria-describedby=\"confirmPassword-text\"\n                                    value={ this.state.confirmPassword }\n                                    />\n                                </FormControl>\n                                {this.state.errors && (<FormHelperText id=\"password-text\" style={{color: 'red'}}>{this.state.errors}</FormHelperText>)}\n                                {this.state.message && (<FormHelperText id=\"password-text\" style={{color: 'green'}}>{this.state.message}</FormHelperText>)}\n                            <CardActions>\n                                {!this.state.isSaving &&\n                                    (<Button \n                                        onClick={this.postPassword}\n                                        fullWidth={true} variant=\"contained\" color=\"primary\" type=\"submit\" >\n                                        Redefinir Senha\n                                </Button> )}\n                                \n                                {this.state.isSaving && (\n                                    <Grid\n                                    container\n                                    spacing={0}\n                                    direction=\"column\"\n                                    alignItems=\"center\"\n                                    justify=\"center\"\n                                    style={{marginTop: 30}}\n                                >\n                                        <CircularProgress />\n                                    </Grid>\n                                )}\n                            </CardActions>\n                            </form>\n                            )}\n                </TabPanel>\n                </Paper>\n            </div>\n        );\n    }\n}\nconst classes = {}\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <Typography\n        component=\"div\"\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        <Box p={3}>{children}</Box>\n      </Typography>\n    );\n  }\n  \n  TabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n  };\n  \n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n\n  \n  \n\nconst mapStateToProps = (state) => {\n    return {\n        isFetching: state.profile.isFetching,\n        profile: state.profile.data,\n        error: state.profile.error\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        loadProfile: () => dispatch(loadProfileRequest())\n    }\n} \n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile)","import React, { Component } from 'react';\nimport { loadChatDialogRequest } from '../actions/actions'\nimport { connect } from 'react-redux'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\nimport { useTheme } from '@material-ui/core/styles'\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close'\nimport Button from '@material-ui/core/Button'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport SendIcon from '@material-ui/icons/Send'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport TextField from '@material-ui/core/TextField'\nimport Grow from  '@material-ui/core/Grow'\nimport ListItem from '@material-ui/core/ListItem'\nimport List from '@material-ui/core/List'\nimport axios from 'axios'\nimport dotenv from 'dotenv'\nimport PropTypes from 'prop-types'\nimport Avatar from '@material-ui/core/Avatar'\nimport AssigmentIdIcon from '@material-ui/icons/AssignmentInd'\nimport { blue, deepOrange } from '@material-ui/core/colors'\nimport Moment from 'moment'\nimport Card from  '@material-ui/core/Card'\nimport CardHeader from  '@material-ui/core/CardHeader'\nimport CardContent from  '@material-ui/core/CardContent'\ndotenv.config()\n\nconst styles = theme => ({\n    title: {\n      color: 'red',\n    }\n  });\n\nclass ChatDialog extends Component {\n    constructor(props){\n        super(props)\n        \n        this.state = {\n            openDialog: true,\n            scroll: 'paper',\n            message: '',\n            noReadMessageTag: false,\n            noReadSendToServer: false,\n            maxChatRefresh: 10,\n            refreshIntervalTime: 15000,\n            chatRefreshInterval: false,\n            currentChatRefresh: 0\n        }\n        this.renderMessage = this.renderMessage.bind(this)\n        this.handleClose = this.handleClose.bind(this)\n        this.handleMessageChange = this.handleMessageChange.bind(this)\n        this.postMessage = this.postMessage.bind(this)\n        this.getMessages = this.getMessages.bind(this)\n        this.messagesEndRef = React.createRef() \n        this.messagesNoReadRef = React.createRef() \n        this.messagesList = React.createRef()\n    }\n    \n    componentDidMount(){\n            this.props.loadChatDialogExams(this.props.file._id)\n    }\n    componentDidUpdate() {\n        if(this.messagesNoReadRef && this.messagesNoReadRef.current){\n            if(document.getElementById('messages-container')){\n                document.getElementById('messages-container').addEventListener('scroll', this.trackScrolling, false)\n                this.messagesNoReadRef.current.scrollIntoView({behavior: 'smooth'})\n                if(this.props && this.props.comments && this.props.comments && this.props.comments.length < 4 \n                    && !this.state.noReadSendToServer){\n                    this.postMessagesRead()\n                }\n            }\n            \n        }else{\n            if(this.messagesEndRef && this.messagesEndRef.current)\n            this.messagesEndRef.current.scrollIntoView({behavior: 'smooth'})\n        }\n        if(!this.state.chatRefreshInterval){\n            this.state.chatRefreshInterval = setInterval(this.getMessages, this.state.refreshIntervalTime);\n        }\n      }\n      getMessages(){\n          console.log('getMessages!')\n        axios.get(process.env.REACT_APP_API_HOST + '/api/comments/file/' + this.props.file._id)\n        .then((data) => {\n            var comments = data.data\n            if(comments && comments.length > this.props.comments.length){\n                var commentsToAdd = []\n                comments.forEach(comment => {\n                    var exists = false\n                    this.props.comments.forEach(commentProp => {\n                        if(comment._id === commentProp._id) exists = true\n                    })\n                    if(!exists) commentsToAdd.push(comment)\n                })\n                commentsToAdd.forEach(comment => {\n                    this.props.comments.push(comment)\n                })\n                \n                this.state.noReadMessageTag = false\n                this.state.noReadSendToServer = false\n            }\n            this.setState({\n                currentChatRefresh: this.state.currentChatRefresh ++\n            })\n            if(this.state.currentChatRefresh >= this.state.maxChatRefresh){\n                clearInterval(this.state.chatRefreshInterval)\n                this.setState({\n                    chatRefreshInterval: false\n                })\n                console.log('clearInterval because -> this.state.currentChatRefresh >= this.state.maxChatRefresh')\n            }\n        })\n        .catch((error) => {\n            clearInterval(this.state.chatRefreshInterval)\n            this.setState({\n                chatRefreshInterval: false\n            })\n            console.log('clearInterval because ERROR', JSON.stringify(error))\n        })\n      }\n    componentWillReceiveProps(newProps){\n        /*\n        setTimeout(()=> {\n            console.log(\"document.getElementById('messages-container')\",document.getElementById('messages-container'))\n            if(this.messagesNoReadRef && this.messagesNoReadRef.current){\n                if(document.getElementById('messages-container')){\n                    document.getElementById('messages-container').addEventListener('scroll', this.trackScrolling, false)\n                }\n                \n            }else{\n                if(this.messagesEndRef && this.messagesEndRef.current)\n                this.messagesEndRef.current.scrollIntoView({behavior: 'smooth'})\n            }\n            \n        }, 1500)\n        */\n    }\n    isBottom(element) {\n        if(element){\n            console.log( 'element.clientHeight', element.clientHeight)\n            console.log( 'element.scrollHeight - element.scrollTop', element.scrollHeight - element.scrollTop)\n            return Math.abs((element.scrollHeight - element.scrollTop)  - element.clientHeight) < 60;\n        }else{\n            console.log('in the scrolling element doesnt exist !!!!!!!')\n        }\n      }\n      \n      componentWillUnmount() {\n          if(document.getElementById('messages-container')){\n            document.getElementById('messages-container').removeEventListener('scroll', this.trackScrolling);\n          }\n          clearInterval(this.state.chatRefreshInterval)\n            this.setState({\n                chatRefreshInterval: false\n            })\n            console.log('clearInterval because UNMOUNT')\n      }\n      \n      trackScrolling = () => {\n        const wrappedElement = document.getElementById('messages-container');\n        console.log('scrooling')\n        if (this.isBottom(wrappedElement)) {\n            if(this.state.noReadMessageTag && !this.state.noReadSendToServer) this.postMessagesRead()\n\n            if(document.getElementById('messages-container')){\n                document.getElementById('messages-container').addEventListener('scroll', this.trackScrolling, false)\n            }\n        }\n    }\n    handleClose(){\n        this.setState({\n            openDialog: false,\n            noReadMessageTag: false\n        })\n        this.props.removeDialog()\n    }\n    handleMessageChange(e){\n        this.setState({\n            message: e.target.value\n        })\n    }\n    postMessagesRead(){\n        console.log('postMessagesRead')\n        axios.patch(process.env.REACT_APP_API_HOST + '/api/comments/read/file/' + this.props.file._id, {})\n                .then(file => {\n                    this.setState({\n                        noReadSendToServer: true\n                    })\n                    if(file && file.data){\n                        this.props.updateFile(file.data)\n                    }\n                    \n                })\n                .catch(err => {\n                    console.log('error trying to update as read messages')\n                })\n    }\n    renderMessage(comment, index){\n        const { classes } = this.props\n        console.log(comment == null)\n        return (\n\n          <div key={comment._id}  >\n          {!this.state.noReadMessageTag && !comment.read && comment.sender._id != this.props.auth.user._id && (\n              <ListItem  style={{width: '100%'}} ref={this.messagesNoReadRef}>\n              <Card style={{marginLeft: 'auto', marginRight: 'auto', background: blue[10]}}>\n                      <span style={{fontSize: 10, marginTop: -5, marginLeft:5, marginRight: 5}}>Mensagens não lidas</span>\n                  \n              </Card>\n              </ListItem>\n          )}\n            <Grow \n                in={true}\n                style={{ transformOrigin: '0 0 0' }}\n                {...(true ? { timeout: 1000 } : {})}\n            >\n                <ListItem  style={{width: '100%'}}>\n                    <span style={{marginLeft: comment.sender._id === this.props.auth.user._id ? '' : 'auto'}}>\n                {comment.sender.admin && \n                (\n                        <IconButton style={{float: comment.sender._id === this.props.auth.user._id ? 'left' : 'right'}} onClick={()=>{ \n                                                                                                                                console.log('comment.sender._id', comment.sender._id)\n                                                                                                                                console.log('this.props.auth.user._id', this.props.auth.user._id)\n                                                                                                                            }}>\n                            <Avatar aria-label=\"Recipe\" style={{ color: '#fff', backgroundColor: blue[500], }}>\n                                <AssigmentIdIcon />\n                            </Avatar>\n                        </IconButton>\n                )\n                }\n                {!comment.sender.admin && \n                        (\n                            <IconButton style={{float: comment.sender._id === this.props.auth.user._id ? 'left' : 'right'}} onClick={()=>{ \n                                                                                                                                    }}>\n                                <Avatar style={{color: '#fff',backgroundColor: deepOrange[500]}}>\n                                {comment.sender.completename \n                                && comment.sender.completename.length\n                                && comment.sender.completename.length > 0 ? \n                                comment.sender.completename.substring(0,1) : comment.sender.username.substring(0,1)}\n                                </Avatar>\n                            </IconButton>\n                        )\n                }\n                <Card style={{background: comment.sender.admin ? blue[50] : 'white'}}>\n                    <CardContent>\n                        <div><span style={{fontSize:11, float: 'left',marginRight:10}}>{comment.sender.completename}</span>   <span  style={{fontSize:10, float: 'left', color: 'gray'}}>{convertDate(comment.sentTime) }</span></div>\n                        <Typography variant=\"body2\"  component=\"p\" style={{marginTop: 20}}>\n                                {comment.message}\n                        </Typography>\n                    </CardContent>\n                     </Card>\n                </span>\n                </ListItem>\n            </Grow>\n            {!this.state.noReadMessageTag && !comment.read && comment.sender._id != this.props.auth.user._id && (this.state.noReadMessageTag = true)}\n          </div>\n        )\n    }\n\n    \n    postMessage(){\n        if(this.state.message && this.state.message.length > 0){\n            const comment = {\n                message: this.state.message,\n                file: this.props.file._id,\n                sender: this.props.auth.user._id,\n                receiver: this.props.auth.user._id === this.props.file.user._id ? this.props.file.admin._id : this.props.file.user._id,\n            }\n            this.setState({\n                message: ''\n            })\n            axios.post(process.env.REACT_APP_API_HOST + '/api/comments/file/' + this.props.file._id, comment)\n                    .then(res => {\n                        this.props.loadChatDialogExams(this.props.file._id)\n                    })\n                    .catch(err => {\n                        alert('error')\n                    })\n        }\n    }\n    render() { \n        return (\n            <Dialog\n                fullScreen={false}\n                fullWidth={true}\n                maxWidth='lg'\n                style={{ height: '90% !important' }}\n                open={this.state.openDialog}\n                scroll={this.state.scroll}\n                onClose={this.handleClose}\n                aria-labelledby=\"scroll-dialog-title\"\n            >\n                <DialogTitle id=\"scroll-dialog-title\">\n                        Messagens do exame: {this.props.file.displayName} \n                    <IconButton edge=\"end\" color=\"inherit\" onClick={this.handleClose} aria-label=\"close\" style={{float:'right'}}>\n                    <CloseIcon />\n                    </IconButton>\n                </DialogTitle>\n                    <DialogContent dividers={this.state.scroll === 'paper'} style={{background: '#eee'}} id=\"messages-container\">\n                        <List style={{width:'100%', minHeight: 310, margin:10,}} ref={this.messagesList}>\n                                {(this.state.noReadMessageTag = false)}\n                                {this.props.comments && this.props.comments.length > 0 && this.props.comments.map(this.renderMessage) }\n                                <ListItem ref={this.messagesEndRef} onBlur={()=>{ console.log('focused')}}/>\n                        </List>\n                        \n                    </DialogContent>\n                    <DialogActions style={{paddingLeft:25, paddingRight: 25, }}>\n                                <TextField\n                                    label=\"Faça sua pergunta...\"\n                                    multiline\n                                    rowsMax=\"3\"\n                                    value={this.state.message}\n                                    onChange={this.handleMessageChange}\n                                    margin=\"normal\"\n                                    variant=\"outlined\"\n                                    fullWidth={true}\n                                />\n                                <IconButton edge=\"end\" color=\"inherit\" onClick={this.postMessage} style={{float: 'right'}}>\n                                    <SendIcon />\n                                </IconButton>\n                    </DialogActions>\n            </Dialog>\n        );\n    }\n}\nChatDialog.propTypes = {\n    auth: PropTypes.object.isRequired\n}\nfunction convertDate(date){\n    return  Moment(date).format('DD/MM/YYYY hh:mm A')\n    }\nconst mapStateToProps = (state) => {\n    return {\n        isFetching: state.chatDialog.isFetching,\n        comments: state.chatDialog.data,\n        error: state.chatDialog.error,\n        auth: state.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        loadChatDialogExams: (file_id) => dispatch(loadChatDialogRequest(file_id))\n    }\n} \nexport default connect(mapStateToProps, mapDispatchToProps)(ChatDialog)","import React, { Component } from 'react';\nimport { loadExamsRequest } from '../actions/actions'\nimport { connect } from 'react-redux'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Card from '@material-ui/core/Grid'\nimport CardContent from '@material-ui/core/Grid'\nimport MaterialTable from 'material-table'\nimport Moment from 'moment'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport axios from 'axios'\nimport Grow from '@material-ui/core/Grow'\nimport Badge from '@material-ui/core/Badge'\nimport MailIcon from '@material-ui/icons/Mail'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport dotenv from 'dotenv'\nimport ChatDialog from './ChatDialog'\n\ndotenv.config()\n\nclass Exams extends Component {\n    \n    constructor(props){\n        super(props)\n        this.state = {\n            currentDialog: null\n        }\n        this.removeDialog = this.removeDialog.bind(this)\n        this.updateFile = this.updateFile.bind(this)\n    }\n    updateFile(fileUpdated){\n        console.log('updateFile', JSON.stringify(fileUpdated))\n        for(var i=0;i<this.props.exams.length;i++){\n            if(this.props.exams[i]._id === fileUpdated._id){\n                this.props.exams[i] = fileUpdated\n                console.log('coinciden! intento cambiar! despues del cambio...', this.props.exams[i])\n            }\n        }\n        this.setState({})\n    }\n    componentDidMount(){\n        this.props.loadExams()\n    }\n    removeDialog(){\n        this.setState({\n            currentDialog: null\n        })\n    }\n    render() {\n        return (\n            <div style={{marginLeft:10, marginTop: 40, width:'100%', height:'100%'}}>\n            {this.props.isFetching && (\n                            <Grid\n                            container\n                            spacing={0}\n                            direction=\"column\"\n                            alignItems=\"center\"\n                            justify=\"center\"\n                            style={{flex:1, marginTop:100,justifyContent: 'center', alignContent: 'center', alignItems: 'center'}}\n                          >\n                                <CircularProgress />\n                            </Grid>\n                        )}\n               {!this.props.isFetching && (\n               <Grow\n                in={!this.props.isFetching}\n                style={{ transformOrigin: '0 0 0' }}\n                {...(!this.props.isFetching ? { timeout: 1000 } : {})}\n                >\n                    <Grid\n                            container\n                            spacing={0}\n                            direction=\"column\"\n                            alignItems=\"center\"\n                            justify=\"center\"\n                            style={{ minHeight: '100vh',  }}\n                        >\n                        \n                            <Grid item xs={12}>\n                            <MaterialTable\n                                title=\"Exames\"\n                                columns={columns}\n                                data={this.props.exams}\n                                actions={[\n                                    {\n                                    icon: 'remove_red_eye',\n                                    tooltip: 'Visualizar Arquivo',\n                                    onClick: (event, rowData) => {\n                                    axios(process.env.REACT_APP_API_HOST + '/api/files/' + rowData._id, {\n                                            method: 'GET',\n                                            responseType: 'blob' //Force to receive data in a Blob Format\n                                        })\n                                        .then(response => {\n                                            \n                                            const file = new Blob(\n                                            [response.data], \n                                            {type: 'application/pdf'});\n                                            const fileURL = URL.createObjectURL(file);\n                                            var anchor = document.createElement(\"a\");\n                                            anchor.download = rowData.displayName + '.' + rowData.type;\n                                            anchor.href = fileURL;\n                                            anchor.click()\n                                        //    window.open(fileURL);\n                                        })\n                                        .catch(error => {\n                                            console.log(error);\n                                        });\n                                    }\n                                    },\n                                    rowData => ({\n                                        icon: rowData.commentsEnabled ?  (rowData.customerNoReadCommentsCount === 0 || !rowData.customerNoReadCommentsCount ? badgeEmailNoMessages : (rowData.customerNoReadCommentsCount === 1 ? badgeEmail1Messages : (rowData.customerNoReadCommentsCount === 2 ? badgeEmail2Messages : (rowData.customerNoReadCommentsCount === 3 ? badgeEmail3Messages : badgeEmailMoreThan3Messages)))) : '',\n                                        tooltip: rowData.commentsEnabled ? 'Mensagens' : '',\n                                        onClick: (event, rowData) => {\n                                            this.setState({\n                                                currentDialog: <ChatDialog updateFile={this.updateFile} file={rowData} removeDialog={this.removeDialog}/>\n                                            })\n                                        },\n                                        disabled: !rowData.commentsEnabled ,\n                                        \n                                      })\n                                ]}\n                                \n                                options={{\n                                    actionsColumnIndex: -1,\n                                    exportButton: true,\n                                    exportFileName: 'Lista de Exames',\n                                    rowStyle: rowData => {\n                                        if(rowData.read) {\n                                          return {backgroundColor: '#EEE'};\n                                        }else{\n                                           return { backgroundColor: 'white' }\n                                        }\n                                      },\n                                      \n                                }}\n                                localization={{\n                                    header: {\n                                        actions: 'Ações'\n                                    },\n                                    body: {\n                                    emptyDataSourceMessage: 'Sem dados para mostrar',\n                                    editRow: {\n                                        deleteText: 'Tem certeza que quer deletar o exame?'\n                                    }\n                                    },\n                                    toolbar: {\n                                    searchTooltip: 'Procurar',\n                                    searchPlaceholder: 'Procurar',\n                                    exportTitle: 'Exportar CSV',\n                                    exportAriaLabel: 'Exportar CSV',\n                                    exportName: 'Exportar CSV'\n\n                                    },\n                                    pagination: {\n                                    labelRowsSelect: 'Filas',\n                                    labelDisplayedRows: '{count} de {from}-{to} ',\n                                    firstTooltip: 'Primeira',\n                                    previousTooltip: 'Anterior',\n                                    nextTooltip: 'Seguinte',\n                                    lastTooltip: 'Última Página'\n                                    }\n                                }}\n                                />\n                            </Grid>\n                    </Grid>\n                    \n             </Grow>\n             )}\n             <div>\n                        {this.state.currentDialog}\n                    </div>\n            </div>\n        );\n    }\n}\nconst badgeEmailNoMessages = () => \n (\n    <Badge  color=\"primary\">\n          <MailIcon />\n        </Badge>\n  )\n  const badgeEmail1Messages = () => (\n    <Badge  badgeContent={1} color=\"primary\">\n          <MailIcon />\n        </Badge>\n  )\n  const badgeEmail2Messages = () => (\n    <Badge  badgeContent={2} color=\"primary\">\n          <MailIcon />\n        </Badge>\n  )\n  const badgeEmail3Messages = () => (\n    <Badge  badgeContent={3} color=\"primary\">\n          <MailIcon />\n        </Badge>\n  )\n  const badgeEmailMoreThan3Messages = () => (\n    <Badge  badgeContent=\"+3\" color=\"primary\">\n          <MailIcon />\n        </Badge>\n  )\nfunction convertDateMin(date){\n    return  Moment(date).format('DD/MM/YY')\n }\n function convertDateMax(date){\n    return  Moment(date).format('DD/MM/YYYY hh:mm A')\n }\nconst columns = [\n{ title: 'Nome', field: 'displayName' },\n{ title: 'Tipo', field: 'type' },\n{ title: 'Lido', field: 'read', type: 'boolean' },\n{ title: 'Data subida', \n  field: 'lastActivity',\n  type: 'datetime', \n  render: rowData => <Tooltip title={convertDateMax(rowData.lastActivity)}><div> {convertDateMax(rowData.lastActivity) }</div></Tooltip> },\n]\nconst mapStateToProps = (state) => {\n    return {\n        isFetching: state.exams.isFetching,\n        exams: state.exams.data,\n        error: state.exams.error\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        loadExams: () => dispatch(loadExamsRequest())\n    }\n} \n\nexport default connect(mapStateToProps, mapDispatchToProps)(Exams)","import React, { Component } from 'react';\nimport { loadAdminExamsRequest } from '../actions/actions'\nimport { connect } from 'react-redux'\nimport ChatDialog from './ChatDialog'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Card from '@material-ui/core/Grid'\nimport CardContent from '@material-ui/core/Grid'\nimport MaterialTable from 'material-table'\nimport Moment from 'moment'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport axios from 'axios'\nimport Grow from '@material-ui/core/Grow'\nimport Button from '@material-ui/core/Button'\nimport Badge from '@material-ui/core/Badge'\nimport MailIcon from '@material-ui/icons/Mail'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport dotenv from 'dotenv'\ndotenv.config()\n\nclass AdminExams extends Component {\n    \n    constructor(props){\n        super(props)\n        this.state= {\n\n        }\n        this.removeDialog = this.removeDialog.bind(this)\n        this.updateFile = this.updateFile.bind(this)\n    }\n    updateFile(fileUpdated){\n        console.log('updateFile', JSON.stringify(fileUpdated))\n        for(var i=0;i<this.props.adminExams.length;i++){\n            if(this.props.adminExams[i]._id === fileUpdated._id){\n                this.props.adminExams[i] = fileUpdated\n                console.log('coinciden! intento cambiar! despues del cambio...', this.props.adminExams[i])\n            }\n        }\n        this.setState({})\n    }\n    componentDidMount(){\n        this.props.loadAdminExams()\n    }\n    removeDialog(){\n        this.setState({\n            currentDialog: null\n        })\n    }\n    render() {\n        return (\n            <div style={{marginLeft:10, marginTop: 40, width:'100%', height:'100%'}}>\n            {this.props.isFetching && (\n                            <Grid\n                            container\n                            spacing={0}\n                            direction=\"column\"\n                            alignItems=\"center\"\n                            justify=\"center\"\n                            style={{flex:1, marginTop:100,justifyContent: 'center', alignContent: 'center', alignItems: 'center'}}\n                          >\n                                <CircularProgress />\n                            </Grid>\n                        )}\n               {!this.props.isFetching && (\n               <Grow\n                in={!this.props.isFetching}\n                style={{ transformOrigin: '0 0 0' }}\n                {...(!this.props.isFetching ? { timeout: 1000 } : {})}\n                >\n               <Grid\n                    container\n                    spacing={0}\n                    direction=\"column\"\n                    alignItems=\"center\"\n                    justify=\"center\"\n                    style={{ minHeight: '100vh',  }}\n                >\n                \n                    <Grid item xs={12}>\n                    <MaterialTable\n                        title=\"Exames\"\n                        columns={columns}\n                        data={this.props.adminExams}\n                        actions={[\n                            {\n                              icon: 'remove_red_eye',\n                              tooltip: 'Visualizar Arquivo',\n                              onClick: (event, rowData) => {\n                               axios(process.env.REACT_APP_API_HOST + '/api/files/' + rowData._id, {\n                                    method: 'GET',\n                                    responseType: 'blob' //Force to receive data in a Blob Format\n                                })\n                                .then(response => {\n                                    const file = new Blob(\n                                      [response.data], \n                                      {type: 'application/pdf'})\n                                      \n                                const fileURL = URL.createObjectURL(file)\n                                var anchor = document.createElement(\"a\");\n                                anchor.download = rowData.displayName + '.' + rowData.type;\n                                anchor.href = fileURL;\n                                anchor.click()\n                                //    window.open(fileURL);\n                                })\n                                .catch(error => {\n                                    console.log(error);\n                                });\n                              }\n                            },\n                            rowData => ({\n                                icon: rowData.commentsEnabled ?  (rowData.adminNoReadCommentsCount === 0 || !rowData.adminNoReadCommentsCount ? badgeEmailNoMessages : (rowData.adminNoReadCommentsCount === 1 ? badgeEmail1Messages : (rowData.adminNoReadCommentsCount === 2 ? badgeEmail2Messages : (rowData.adminNoReadCommentsCount === 3 ? badgeEmail3Messages : badgeEmailMoreThan3Messages)))) : '',\n                                tooltip: rowData.commentsEnabled ? 'Mensagens' : '',\n                                onClick: (event, rowData) => {\n                                    this.setState({\n                                        currentDialog: <ChatDialog updateFile={this.updateFile} file={rowData} removeDialog={this.removeDialog}/>\n                                    })\n                                },\n                                disabled: !rowData.commentsEnabled ,\n                                \n                              })\n                          ]}\n                          components={[\n                                  {\n                                    Action: props => (\n                                    <Button\n                                        onClick={(event) => props.action.onClick(event, props.data)}\n                                        color=\"primary\"\n                                        variant=\"contained\"\n                                        style={{textTransform: 'none'}}\n                                        size=\"small\"\n                                    >\n                                        Olhar\n                                    </Button>\n                                    ),\n                                },\n                                {\n                                    Action: props => (\n                                    <Button\n                                        onClick={(event) => props.action.onClick(event, props.data)}\n                                        color=\"primary\"\n                                        variant=\"contained\"\n                                        style={{textTransform: 'none'}}\n                                        size=\"small\"\n                                    >\n                                        Deletar\n                                    </Button>\n                                    ),\n                                }\n                        ]}\n                        editable={{\n                            onRowDelete: oldData =>\n                                new Promise((resolve, reject) => {\n                                    axios.delete(process.env.REACT_APP_API_HOST + '/api/files/' + oldData._id)\n                                        .then(res => {\n                                            this.props.loadAdminExams()\n                                            resolve(res)\n                                        })\n                                        .catch(err => {\n                                            reject(err)\n                                        })\n                                })\n                        }}\n                        options={{\n                            actionsColumnIndex: -1,\n                            exportButton: true,\n                            exportFileName: 'Lista de Exames'\n                          }}\n                          localization={{\n                            header: {\n                                actions: 'Ações'\n                            },\n                            body: {\n                              emptyDataSourceMessage: 'Sem dados para mostrar',\n                              editRow: {\n                                deleteText: 'Tem certeza que quer deletar o exame?'\n                              }\n                            },\n                            toolbar: {\n                              searchTooltip: 'Procurar',\n                              searchPlaceholder: 'Procurar',\n                              exportTitle: 'Exportar CSV',\n                              exportAriaLabel: 'Exportar CSV',\n                              exportName: 'Exportar CSV'\n\n                            },\n                            pagination: {\n                              labelRowsSelect: 'Filas',\n                              labelDisplayedRows: '{count} de {from}-{to} ',\n                              firstTooltip: 'Primeira',\n                              previousTooltip: 'Anterior',\n                              nextTooltip: 'Seguinte',\n                              lastTooltip: 'Última Página'\n                            }\n                          }}\n                        />\n                    </Grid>\n             </Grid>\n             </Grow>\n             )}\n             <div>\n                {this.state.currentDialog}\n            </div>\n            </div>\n        );\n    }\n}\nconst badgeEmailNoMessages = () => \n (\n    <Badge  color=\"primary\">\n          <MailIcon />\n        </Badge>\n  )\n  const badgeEmail1Messages = () => (\n    <Badge  badgeContent={1} color=\"primary\">\n          <MailIcon />\n        </Badge>\n  )\n  const badgeEmail2Messages = () => (\n    <Badge  badgeContent={2} color=\"primary\">\n          <MailIcon />\n        </Badge>\n  )\n  const badgeEmail3Messages = () => (\n    <Badge  badgeContent={3} color=\"primary\">\n          <MailIcon />\n        </Badge>\n  )\n  const badgeEmailMoreThan3Messages = () => (\n    <Badge  badgeContent=\"+3\" color=\"primary\">\n          <MailIcon />\n        </Badge>\n  )\nfunction convertDateMin(date){\n    if(date != null){\n        return  Moment(date).format('DD/MM/YY')\n    }else{\n        return '-'\n    }\n }\n function convertDateMax(date){\n    if(date != null){\n        return  Moment(date).format('DD/MM/YYYY hh:mm A')\n    }else{\n        return '-'\n    }\n }\nconst columns = [\n{ title: 'Nome', field: 'displayName' },\n{ title: 'Subido', \n  field: 'lastActivity',\n  type: 'datetime', \n  render: rowData => <Tooltip title={convertDateMax(rowData.lastActivity)}><div> {convertDateMin(rowData.lastActivity) }</div></Tooltip> },\n{ title: 'Usuário', field: 'user.completename' },\n//{ title: 'Tipo', field: 'type' },\n{ title: 'Lido', field: 'read', type: 'boolean' },\n\n{ title: 'Arquivo lido', \n  field: 'lastRead',\n  type: 'datetime', \n  render: rowData => <Tooltip title={convertDateMax(rowData.lastRead)}><div> {convertDateMin(rowData.lastRead) }</div></Tooltip> },\n  { title: 'Mensagens', field: 'commentsEnabled', type: 'boolean' },\n  { title: 'Msgs Não lidas', field: 'adminNoReadCommentsCount'},\n\n]\nconst mapStateToProps = (state) => {\n    return {\n        isFetching: state.adminExams.isFetching,\n        adminExams: state.adminExams.data,\n        error: state.adminExams.error\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        loadAdminExams: () => dispatch(loadAdminExamsRequest())\n    }\n} \n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminExams)","import React, { Component } from \"react\";\nimport CloudUpload from '@material-ui/icons/CloudUpload'\n\nclass Dropzone extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { hightlight: false };\n    this.fileInputRef = React.createRef();\n\n    this.openFileDialog = this.openFileDialog.bind(this);\n    this.onFilesAdded = this.onFilesAdded.bind(this);\n    this.onDragOver = this.onDragOver.bind(this);\n    this.onDragLeave = this.onDragLeave.bind(this);\n    this.onDrop = this.onDrop.bind(this);\n  }\n\n  openFileDialog() {\n    if (this.props.disabled) return;\n    this.fileInputRef.current.click();\n  }\n\n  onFilesAdded(evt) {\n    if (this.props.disabled) return;\n    const files = evt.target.files;\n    if (this.props.onFilesAdded) {\n      const array = this.fileListToArray(files);\n      this.props.onFilesAdded(array);\n    }\n  }\n\n  onDragOver(event) {\n    event.preventDefault();\n    if (this.props.disabed) return;\n    this.setState({ hightlight: true });\n  }\n\n  onDragLeave(event) {\n    this.setState({ hightlight: false });\n  }\n\n  onDrop(event) {\n    event.preventDefault();\n    if (this.props.disabed) return;\n    const files = event.dataTransfer.files;\n    if (this.props.onFilesAdded) {\n      const array = this.fileListToArray(files);\n      this.props.onFilesAdded(array);\n    }\n    this.setState({ hightlight: false });\n  }\n\n  fileListToArray(list) {\n    const array = [];\n    for (var i = 0; i < list.length; i++) {\n      array.push(list.item(i));\n    }\n    return array;\n  }\n\n  render() {\n    return (\n      <div \n        style={{height: 200,width: 200, backgroundColor: '#fff', border: '2px dashed rgb(187, 186, 186)', borderRadius: '50%', display: 'flex', alignItems: 'center', justifyContent: 'center',flexDirection: 'column', fontSize: 16,  backgroundColor: this.state.hightlight ? 'rgb(157, 216, 255)' : '' , cursor: this.props.disabled ? \"default\" : \"pointer\"}}\n        onDragOver={this.onDragOver}\n        onDragLeave={this.onDragLeave}\n        onDrop={this.onDrop}\n        onClick={this.openFileDialog}\n      >\n        <input\n          ref={this.fileInputRef}\n          style={{display: 'none'}}\n          type=\"file\"\n          accept=\"application/pdf\"\n          onChange={this.onFilesAdded}\n        />\n        <CloudUpload\n          \n        />\n        <span>Upload Exames </span>\n      </div>\n    );\n  }\n}\n\nexport default Dropzone;","import React, { Component } from \"react\";\n\nclass Progress extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <div style ={{width: '87%', height: 8, backgroundColor:'#3863ff', borderRadius: 5,marginRight: 15, marginTop: 5, float: 'right'}}>\n        <div style={{ backgroundColor: '#3d67fd', height: '100%',  margin: 0, borderRadius: 5, width: this.props.progress + \"%\" }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Progress;","import React, { Component } from 'react'\nimport styles from './css/Upload.css'\nimport Dropzone from './Dropzone'\nimport Progress from \"./Progress\";\nimport CheckCircle from '@material-ui/icons/CheckCircle'\nimport Button from '@material-ui/core/Button'\nimport axios from 'axios'\nimport Typography from '@material-ui/core/Typography'\nimport PersonIcon from '@material-ui/icons/Person'\nimport PdfIcon from '@material-ui/icons/PictureAsPdf'\nimport EditIcon from '@material-ui/icons/Edit'\nimport { ListItem, List } from '@material-ui/core';\nimport dotenv from 'dotenv'\ndotenv.config()\n\nclass Upload extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        files: [],\n        uploading: false,\n        uploadProgress: {},\n        successfullUploaded: false\n      };\n  \n      this.onFilesAdded = this.onFilesAdded.bind(this);\n      this.uploadFiles = this.uploadFiles.bind(this);\n      this.sendRequest = this.sendRequest.bind(this);\n      this.renderActions = this.renderActions.bind(this);\n      this.sendRequest = this.sendRequest.bind(this)\n    }\n    componentDidMount(){\n      console.log(this.props)\n      console.log(JSON.stringify(styles))\n    }\n    onFilesAdded(files) {\n      this.setState(prevState => ({\n        files: prevState.files.concat(files)\n      }));\n    }\n  \n    async uploadFiles() {\n      this.setState({ uploadProgress: {}, uploading: true });\n      const promises = [];\n      this.state.files.forEach(file => {\n        promises.push(this.sendRequest(file));\n      });\n      try {\n        await Promise.all(promises);\n  \n        this.setState({ successfullUploaded: true, uploading: false });\n      } catch (e) {\n        // Not Production ready! Do some error handling here instead...\n        this.setState({ successfullUploaded: true, uploading: false });\n      }\n    }\n  \n    sendRequest(file) {\n      return new Promise((resolve, reject) => {\n        \n  \n        const data = new FormData()\n        data.append('userId', this.props.data.userId)\n        data.append('displayName', this.props.data.displayName)\n        data.append('commentsEnabled', this.props.data.commentsEnabled)\n        data.append('adminId', this.props.admin._id)\n        data.append('file', file)\n        data.append('size', file.size)\n   console.log('fileee', JSON.stringify(file))\n        for (var key of data.entries()) {\n          console.log(key[0] + ', ' + key[1]);\n      }\n        const ttthis = this\n        axios({\n            method: 'post',\n            url: process.env.REACT_APP_API_HOST + '/api/files',\n            data: data,\n            config: { headers: {'Content-Type': 'multipart/form-data' }},\n            onUploadProgress: ProgressEvent => {\n                  if(ProgressEvent.loaded === ProgressEvent.total*100){\n                    const copy = { ...this.state.uploadProgress };\n                    copy[file.name] = { state: \"done\", percentage: 100 };\n                    this.setState({ uploadProgress: copy })\n                  }else{\n                    const copy = { ...this.state.uploadProgress };\n                    copy[file.name] = {\n                      state: \"pending\",\n                      percentage: (ProgressEvent.loaded / ProgressEvent.total) * 100\n                    };\n                    this.setState({ uploadProgress: copy });\n                  }\n              }\n            })\n            .then(function (response) {\n                const copy = { ...ttthis.state.uploadProgress };\n                copy[file.name] = { state: \"done\", percentage: 100 };\n                ttthis.setState({ uploadProgress: copy })\n                ttthis.props.triggerUploadedFinished()\n                console.log(response);\n            })\n            .catch(function (response) {\n                //handle error\n                console.log(JSON.stringify(response.response))\n            });\n\n\n      });\n    }\n  \n    renderProgress(file) {\n      const uploadProgress = this.state.uploadProgress[file.name];\n      console.log('renderProgress', uploadProgress)\n      if (this.state.uploading || this.state.successfullUploaded) {\n        return (\n          <div className={styles.ProgressWrapper}>\n            <Progress progress={uploadProgress ? uploadProgress.percentage : 0} style={{float: 'right'}}/>\n            <CheckCircle\n              \n              style={{\n                opacity: uploadProgress && uploadProgress.state === \"done\" ? 0.5 : 0,\n                float: 'left',\n                marginLeft: 10\n\n              }}\n            />\n          </div>\n        );\n      }\n    }\n  \n    renderActions() {\n      if (this.state.successfullUploaded) {\n        return (\n          <Button\n            onClick={() =>\n              this.setState({ files: [], successfullUploaded: false })\n            }\n          >\n            Limpar\n          </Button>\n        );\n      } else {\n        return (\n          <Button\n            disabled={this.state.files.length < 0 || this.state.uploading}\n            onClick={this.uploadFiles}\n          >\n            Fazer Upload\n          </Button>\n        );\n      }\n    }\n  \n    render() {\n      return (\n        <div className={styles.Upload} style={{padding: 20}}>\n          <div style={{display: 'flex', flexDirection: 'row', paddingTop: '16px', boxSizing: 'border-box', width: '100%'}}>\n            <div>\n              <Dropzone\n                onFilesAdded={this.onFilesAdded}\n                disabled={this.state.uploading || this.state.successfullUploaded}\n              />\n            </div>\n            <div style={{marginLeft: 32, alignItems: 'flex-start', justifyItems: 'flex-start', flex: 1,overflowY: 'auto'}}>\n              <List>\n                    <ListItem >\n                    <PersonIcon style={{float: 'left', color: '#2a2a2a', marginRight: 5}}/>\n                    <Typography \n                        variant=\"subtitle1\" style={{float: 'left', color: '#2a2a2a'}}>\n                        Arquivo para: {this.props.data.user.completename}\n                    </Typography>\n                      </ListItem>\n                    <ListItem >\n                    <EditIcon style={{float: 'left', color: '#2a2a2a', marginRight: 5}}/>\n                    <Typography \n                        variant=\"subtitle1\" style={{float: 'left', color: '#2a2a2a'}}>\n                        Nome do Arquivo: {this.props.data.displayName.length > 0 ? this.props.data.displayName : 'Manter nome original do Arquivo'} \n                    </Typography>\n                      </ListItem>\n                  </List>\n              {this.state.files.map(file => {\n                return (\n                  <div key={file.name} className={styles.Row}>\n                  <List>\n                    <ListItem >\n                    <PdfIcon style={{float: 'left', color: '#2a2a2a', marginRight: 5}}/>\n                    <Typography \n                        variant=\"subtitle1\" style={{float: 'left', color: '#2a2a2a'}}>\n                        {file.name}\n                    </Typography>\n                      </ListItem>\n                  </List>\n                   \n                    < br/>\n                    {this.renderProgress(file)}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n          <div style={{display: 'flex', flex: 1, width: '100%', alignItems: 'flex-end' , flexDirection: 'column', marginTop: 32}}>\n            {this.renderActions()}</div>\n        </div>\n      );\n    }\n  }\n  \n  export default Upload;","import React, { Component } from 'react';\nimport Upload from './Upload'\nimport Card from '@material-ui/core/Card'\nimport Grid from '@material-ui/core/Grid'\nimport \"./css/AdminExams.css\"\nimport Button from '@material-ui/core/Button'\nimport FormControl  from '@material-ui/core/FormControl'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Select from  '@material-ui/core/Select'\nimport CircularProgress from  '@material-ui/core/CircularProgress'\nimport MenuItem from  '@material-ui/core/MenuItem'\nimport { connect } from 'react-redux'\nimport { loadUsersRequest } from '../actions/actions'\nimport TextField from '@material-ui/core/TextField'\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Typography from '@material-ui/core/Typography'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport axios from 'axios'\nimport dotenv from 'dotenv'\nimport PropTypes from 'prop-types'\ndotenv.config()\n\nclass AddAdminExams extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            user: false,\n            displayName : '',\n            userId: 0,\n            commentsEnabled: false,\n            activeStep: 0,\n            skipped: new Set(),\n            steps : this.getSteps(),\n            showStepper: true,\n            userFilter: '',\n            filteredUsers: [],\n            firstTimeUpdated: false\n        }\n        \n        this.handleSelectedUser = this.handleSelectedUser.bind(this)\n        this.handleNext = this.handleNext.bind(this)\n        this.handleBack = this.handleBack.bind(this)\n        this.handleSkip = this.handleSkip.bind(this)\n        this.handleReset = this.handleReset.bind(this)\n        this.getStepContent = this.getStepContent.bind(this)\n        this.handledisplayName = this.handledisplayName.bind(this)\n        this.triggerUploadedFinished = this.triggerUploadedFinished.bind(this)\n        this.handleSelectedCommentsEnabled = this.handleSelectedCommentsEnabled.bind(this)\n        this.handleUserFilterChange = this.handleUserFilterChange.bind(this)\n    }\n    componentDidMount(){\n        this.props.loadUsers()\n    }\n    handledisplayName(e){\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    componentDidUpdate(){\n        if(!this.state.firstTimeUpdated){\n            if(this.props.users && this.props.users.length > 0){\n                this.setState({\n                    firstTimeUpdated: true,\n                    filteredUsers: this.props.users\n                })\n            }\n        }\n    }\n    handleSelectedUser(e){\n        if(e && e.target.value != 0){\n            var userOk = ''\n            this.props.users.map((user, index)=>{\n                if(user._id === e.target.value) userOk = user\n            })\n            this.setState({\n                userId: e.target.value,\n                user: userOk\n            })\n        }else{\n            this.setState({\n                userNameSelected: false,\n                userId: 0\n            })\n        }\n        \n    }\n    handleSelectedCommentsEnabled(e){\n        this.setState({\n            commentsEnabled: e.target.value\n        })\n    }\n    getSteps() {\n        return ['Seleciona Usuário', 'Nome para o arquivo', 'Upload arquivo'];\n      }\n    getStepContent(step) {\n        switch (step) {\n            case 0:\n            return this.renderSelectUser();\n            case 1:\n            return this.renderdisplayName();\n            case 2:\n            return this.renderUploadFile();\n            default:\n            return 'Passo desconhecido, reiniciar pagina';\n        }\n    }\n    handleUserFilterChange(e){\n        var tempUsers = []\n        this.props.users.forEach((user)=> {\n            if(user.completename.toLowerCase().includes(e.target.value.toLowerCase())){\n                tempUsers.push(user)\n            }\n        })\n        this.setState({\n            filteredUsers: tempUsers,\n            userFilter: e.target.value\n        })\n    }\n    renderSelectUser(){\n        return (\n            <Card style={{minHeight: 300}}\n            alignitems=\"center\"\n                        justify=\"center\">\n                         {this.props.isFetchingUsers && (\n                     <Grid\n                        container\n                        spacing={0}\n                        direction=\"column\"\n                        alignItems=\"center\"\n                        justify=\"center\"\n                        style={{marginTop: 30}}\n                    >\n                            <CircularProgress />\n                        </Grid>\n            )}\n            { !this.props.isFetchingUsers && (\n                <div>\n                <FormControl style={{marginLeft: 50, marginTop:10}}>\n                        <TextField\n                        label=\"Filtrar Usuário\"\n                        type=\"text\"\n                        id=\"userFilter\"\n                        value={ this.state.userFilter }\n                        name=\"userFilter\"\n                        onChange={this.handleUserFilterChange}\n                        aria-describedby=\"userFilter-text\"\n                        />\n                </FormControl>\n            <FormControl fullWidth={true} style={{paddingLeft: 50, paddingRight:50, paddingTop:10, paddingBottom:10}}>\n                    <Select\n                    native\n                    variant=\"outlined\"\n                    value={this.state.userId}\n                    onChange={this.handleSelectedUser}\n                    >\n                    <option value={0} > Escolher Usuário </option>\n                        {this.state.filteredUsers.map( (user, index) => {\n                            return (\n                                <option key={user._id} value={user._id}>{user.completename} \n                                </option>\n                            )\n                        })}\n                    </Select>\n                    {this.state.errors && (<FormHelperText id=\"username-text\" style={{color: 'red'}}>{this.state.errors}</FormHelperText>)}\n                </FormControl>\n                </div>\n                )} \n            </Card>\n        )\n    }\n    renderdisplayName(){\n        return (\n            <Card style={{minHeight: 300}}>\n                <FormControl fullWidth={true} style={{padding: 50}}>\n                        <TextField\n                            label=\"Nome para o Arquivo\"\n                            placeholder=\"Nome para o Arquivo\"\n                            helpertext=\"Se quiser manter o nome do arquivo original, pode clicar em Pular\"\n                            margin=\"normal\"\n                            name=\"displayName\"\n                            variant=\"outlined\"\n                            onChange={this.handledisplayName}\n                        />\n                        {this.state.errors && (<FormHelperText id=\"username-text\" style={{color: 'red'}}>{this.state.errors}</FormHelperText>)}\n                </FormControl>\n                <FormControl  style={{padding: 50}}>\n                    <InputLabel  style={{marginLeft:50, minWidth: 150}}>Habilitar Bate Papo</InputLabel>\n                    <Select\n                    style={{marginTop: -27, minWidth: 150}}\n                    value={this.state.commentsEnabled}\n                    onChange={this.handleSelectedCommentsEnabled}\n                    >\n                        <MenuItem value={false} >Não</MenuItem>\n                        <MenuItem value={true} >Sim</MenuItem>\n                        \n                    </Select>\n                </FormControl>\n            </Card>\n        )\n    }\n    renderUploadFile(){\n        return (\n            <Card >\n                <Upload data={this.state} triggerUploadedFinished={this.triggerUploadedFinished} admin={this.props.auth.user}/>\n            </Card>\n        )\n    }\n    isStepOptional(step) {\n        return step === 1;\n    }\n    isStepSkipped(step) {\n        return this.state.skipped.has(step);\n    }\n    handleNext() {\n        let newSkipped = this.state.skipped;\n        if (this.isStepSkipped(this.state.activeStep)) {\n            newSkipped = new Set(newSkipped.values());\n            newSkipped.delete(this.state.activeStep);\n        }\n        \n        if(this.state.activeStep === 0 && this.state.userId === 0){\n            this.setState({\n                errors: 'Por favor, escolha um usuário da lista'    \n            })\n        }\n        else if(this.state.activeStep === 1 && this.state.displayName.length === 0){\n            this.setState({\n                errors: 'Por favor, se quiser manter o nome original clique em Pular'    \n            })\n        }else if(this.state.activeStep === 1 && this.state.displayName.length > 0){\n            axios.get(process.env.REACT_APP_API_HOST + '/api/files/' + this.state.displayName + '/user/' + this.state.userId)\n                .then(res => {\n                    this.setState({\n                        activeStep: this.state.activeStep + 1,\n                        errors: false,\n                        newSkipped\n                    })\n                })\n                .catch(err => {\n                    \n                    this.setState({\n                        errors: err.response.data.err\n                    })\n                })\n        }\n        else{\n            this.setState({\n                activeStep: this.state.activeStep + 1,\n                errors: false,\n                newSkipped\n            })\n        }\n        \n    }\n    handleBack() {\n        this.setState({\n            activeStep: this.state.activeStep - 1\n        })\n    }\n    handleSkip() {\n        if (!this.isStepOptional(this.state.activeStep)) {\n          // You probably want to guard against something like this,\n          // it should never occur unless someone's actively trying to break something.\n          throw new Error(\"Não pode pular este passo porque não é opcional.\");\n        }\n    \n        this.setState({\n            activeStep: this.state.activeStep + 1,\n            displayName: ''\n        })\n    \n        const newSkipped = new Set( this.state.skipped.values());\n        newSkipped.add(this.state.activeStep)\n        this.setState({\n            skipped: newSkipped\n        })\n\n      }\n      handleReset() {\n        this.setState({\n            activeStep: 0\n        })\n      }\n      triggerUploadedFinished(){\n          this.setState({\n              uploadFinished : true\n          })\n      }\n    render() {\n        return (\n            <div style={{width: '80%',margin: 40, marginTop:100}}>\n                { this.state.showStepper && \n                ( \n                    <div>\n                    <Stepper activeStep={this.state.activeStep}>\n                        {this.state.steps.map((label, index) => {\n                        const stepProps = {};\n                        const labelProps = {};\n                        if (this.isStepOptional(index)) {\n                            labelProps.optional = <Typography variant=\"caption\" component=\"span\">Opcional</Typography>;\n                        }\n                        if (this.isStepSkipped(index)) {\n                            stepProps.completed = false;\n                        }\n                        return (\n                            <Step key={label} {...stepProps}>\n                            <StepLabel {...labelProps}>{label}</StepLabel>\n                            </Step>\n                        );\n                        })}\n                    </Stepper>\n                    <div>\n                        {this.state.activeStep === this.state.steps.length ? (\n                        <div>\n                            <Typography style={{marginTop: 3, marginBottom: 3,}}  component=\"span\">\n                            Upload realizado com sucesso!\n                            </Typography>\n                            <Button onClick={this.handleReset} style={{marginRight: 3}}  component=\"span\">\n                            Adicionar mais\n                            </Button>\n                        </div>\n                        ) : (\n                        <div>\n                            <Typography  component=\"span\" style={{marginTop: 3, marginBottom: 3,}}>{this.getStepContent(this.state.activeStep)}</Typography>\n                            <div>\n                            <Button disabled={this.state.activeStep === 0} onClick={this.handleBack} style={{marginRight: 3}}>\n                                Voltar\n                            </Button>\n                            {this.isStepOptional(this.state.activeStep) && (\n                                <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={this.handleSkip}\n                                style={{marginRight: 3}}\n                                >\n                                Pular\n                                </Button>\n                            )}\n\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={this.handleNext}\n                                style={{marginRight: 3}}\n                                disabled={this.state.activeStep === this.state.steps.length - 1 && !this.state.uploadFinished}\n                            >\n                                {this.state.activeStep === this.state.steps.length - 1 ? 'Finalizar' : 'Seguinte'}\n                            </Button>\n                            </div>\n                        </div>\n                    )}\n                </div>\n                </div>\n          )}\n            </div>\n        );\n    }\n}\nAddAdminExams.propTypes = {\n    auth: PropTypes.object.isRequired\n}\nconst mapStateToProps = (state) => {\n    return {\n        isFetchingUsers: state.users.isFetching,\n        users: state.users.data,\n        error: state.users.error,\n        auth: state.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        loadUsers: () => dispatch(loadUsersRequest())\n    }\n} \n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddAdminExams)","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText'\nimport GroupIcon from '@material-ui/icons/Group'\nimport ContactMailIcon from '@material-ui/icons/ContactMail'\nimport ExistToAppIcon from '@material-ui/icons/ExitToApp'\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf'\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd'\n\nimport Register from './Register'\nimport Users from './Users'\nimport Profile from './Profile'\nimport Exams from './Exams'\nimport AdminExams from './AdminExams'\nimport AddAdminExams from './AddAdminExams'\nimport { Link } from 'react-router-dom';\nimport AddNoteIcon from '@material-ui/icons/NoteAdd'\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default function MiniDrawer(props) {\n \n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  function handleDrawerOpen() {\n    setOpen(true);\n  }\n\n  function handleDrawerClose() {\n    setOpen(false);\n  }\n  function onLogout() {\n    props.logoutUser(props.history)\n  }\n  return (\n    <div className={classes.root}>\n    \n      <CssBaseline />\n      <Router>\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Vets\n          </Typography>\n          <div className={classes.sectionDesktop} style={{ position: 'absolute', right: '0', top: 15, marginRight:50}}>\n            {props.user.completename}\n            </div>\n            <div className={classes.sectionDesktop} style={{ fontSize: 10, position: 'absolute', right: '0',top:38, marginRight:50}}>\n            {props.user.username}\n            </div>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        {props.user.admin && ( \n            <div>\n                <List>\n                    <ListItem button component={ Link } color=\"inherit\" to=\"/register\" >\n                        <ListItemIcon><PersonAddIcon /></ListItemIcon>\n                        <ListItemText primary='Adicionar Usuário'/>\n                    </ListItem>\n                    <ListItem button component={ Link } color=\"inherit\" to=\"/users\" >\n                        <ListItemIcon><GroupIcon /></ListItemIcon>\n                        <ListItemText primary='Usuários'/>\n                    </ListItem>\n                    \n                </List>\n                <Divider />\n                <List>\n                    <ListItem button component={ Link } color=\"inherit\" to=\"/add_admin_exams\" >\n                        <ListItemIcon><AddNoteIcon /></ListItemIcon>\n                        <ListItemText primary='Adicionar Exame'/>\n                    </ListItem>\n                    <ListItem button component={ Link } color=\"inherit\" to=\"/admin_exams\" >\n                        <ListItemIcon><PictureAsPdfIcon /></ListItemIcon>\n                        <ListItemText primary='Exames'/>\n                    </ListItem>\n                </List>\n                <Divider />\n                <List>\n                    <ListItem button component={ Link } color=\"inherit\" to=\"/profile\" >\n                        <ListItemIcon><ContactMailIcon /></ListItemIcon>\n                        <ListItemText primary='Perfil'/>\n                    </ListItem>\n                </List>\n                <Divider />\n                <List>\n                    <ListItem button  onClick={onLogout} color=\"inherit\"  >\n                        <ListItemIcon><ExistToAppIcon /></ListItemIcon>\n                        <ListItemText primary='Sair'/>\n                    </ListItem>\n                </List>\n            </div>\n        )}\n        {!props.user.admin && ( \n            <div>\n                <List>\n                    <ListItem button component={ Link } color=\"inherit\" to=\"/exams\" >\n                        <ListItemIcon><PictureAsPdfIcon /></ListItemIcon>\n                        <ListItemText primary='Exames'/>\n                    </ListItem>\n                </List>\n                <Divider />\n                <List>\n                    <ListItem button component={ Link } color=\"inherit\" to=\"/profile\" >\n                        <ListItemIcon><ContactMailIcon /></ListItemIcon>\n                        <ListItemText primary='Perfil'/>\n                    </ListItem>\n                </List>\n                <Divider />\n                <List>\n                    <ListItem button color=\"inherit\" onClick={onLogout}  >\n                        <ListItemIcon><ExistToAppIcon /></ListItemIcon>\n                        <ListItemText primary='Sair'/>\n                    </ListItem>\n                </List>\n            </div>\n        )}\n      </Drawer>\n      <Route exact path=\"/users\" component={ Users } />\n      <Route exact path=\"/profile\" component={ Profile } />\n      <Route exact path=\"/exams\" component={ Exams } />\n      <Route exact path=\"/add_admin_exams\" component = { AddAdminExams } />\n      <Route exact path=\"/admin_exams\" component={ AdminExams } />\n      <Route exact path=\"/register\" component={ Register } />\n    </Router>\n      </div>\n  );\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { logoutUser } from '../actions/authentication';\nimport { withRouter } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport clsx from 'clsx'\nimport Drawer from './Drawer'\n\nconst drawerWidth = 240;\n\nconst classes = makeStyles(theme => ({\n    root: {\n        display: \"flex\"\n      },\n      appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen\n        })\n      },\n      appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.enteringScreen\n        })\n      },\n      menuButton: {\n        marginLeft: 12,\n        marginRight: 36\n      },\n      hide: {\n        display: \"none\"\n      },\n      drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: \"nowrap\"\n      },\n      drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create(\"width\", {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.enteringScreen\n        })\n      },\n      drawerClose: {\n        transition: theme.transitions.create(\"width\", {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen\n        }),\n        overflowX: \"hidden\",\n        width: theme.spacing.unit * 7 + 1,\n        [theme.breakpoints.up(\"sm\")]: {\n          width: theme.spacing.unit * 9 + 1\n        }\n      },\n      toolbar: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-end\",\n        padding: \"0 8px\",\n        ...theme.mixins.toolbar\n      },\n      content: {\n        flexGrow: 1,\n        padding: theme.spacing.unit * 3\n      },\n    sectionDesktop: {\n        display: 'none',\n        [theme.breakpoints.up('md')]: {\n          display: 'flex',\n        },\n        float: 'right',\n        position: 'absolute',\n         right: '0'\n      },\n    title: {\n      flexGrow: 1,\n      marginLeft: 300\n    },\n  }))\n\nclass Navbar extends Component {\n    \n    render() {\n       \n        const {isAuthenticated, user} = this.props.auth;   \n        \n        const authLinks = (\n     //       <div className={classes.sectionDesktop} style={{ position: 'absolute', right: '0'}}>\n     //           <Button  onClick={this.onLogout.bind(this)} color=\"inherit\" style={{ marginRight:30}} >Sair</Button>\n     //       </div>\n     ''\n        )\n      const guestLinks = (\n        <div className={classes.sectionDesktop}  style={{ position: 'absolute', right: '0'}}>\n            <Button component={ Link } color=\"inherit\" to=\"/login\" style={{ marginRight:30}}>Consulte seu exame</Button>\n        </div>\n      )\n      \n        return(\n            <div className={classes.root}>\n            <CssBaseline />\n                <AppBar position=\"fixed\" className={clsx(classes.appBar, {\n                        [classes.appBarShift]: false,\n                        })}>\n                    <Toolbar>\n                    \n                    <Typography variant=\"h6\" className={classes.title} >\n                        Vets\n                    </Typography>\n                    <div />\n\n                        {isAuthenticated ? authLinks : guestLinks}\n                    </Toolbar>\n                </AppBar>\n                { isAuthenticated ? (\n                    <Drawer logoutUser={this.props.logoutUser} history={this.props.history} user={user}/>\n\n                ) : ''}\n            </div>\n          \n        )\n    }\n}\n\nNavbar.propTypes = {\n    logoutUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth\n})\n\n//ResponsiveDrawer.propTypes = {\n    /**\n     * Injected by the documentation to work in an iframe.\n     * You won't need it on your project.\n     */\n //   container: PropTypes.object,\n // };\nexport default connect(mapStateToProps, { logoutUser })(withRouter(Navbar));","import React, { Component } from 'react'\n\nimport FormControl   from '@material-ui/core/FormControl'\nimport InputLabel   from '@material-ui/core/InputLabel'\nimport Input   from '@material-ui/core/Input'\nimport FormHelperText   from '@material-ui/core/FormHelperText'\nimport Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport axios from  'axios'\nimport dotenv from 'dotenv'\ndotenv.config()\n\nexport default class ForgotPassword extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            username: '',\n            message: false,\n            errors: false,\n            isFetching: false,\n            emailSent: false\n        }\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleInputChange = this.handleInputChange.bind(this)\n    }\n    handleSubmit(e){\n        e.preventDefault()\n        if(this.state.username && this.state.username.length > 4 \n            && this.state.username.indexOf('@') != -1 && this.state.username.indexOf('.') != -1 ){\n                this.setState({\n                    isFetching: true\n                })\n                axios.post(process.env.REACT_APP_API_HOST + '/api/users/forgot', {username: this.state.username })\n                        .then(res => {\n                            this.setState({\n                                message: res.data.msg,\n                                errors: false,\n                                isFetching: false,\n                                emailSent: true\n                            })\n                        })\n                        .catch(err => {\n                            this.setState({\n                                errors: err && err.response && err.response.data ? JSON.stringify(err.response.data.msg) : 'Erro desconhecido, tente mais tarde',\n                                isFetching: false\n                            })\n                        })\n\n        }else{\n            this.setState({\n                errors: 'email invalido',\n                isFetching: false\n            })\n        }\n    }\n    handleInputChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    render() {\n        return (\n                <Grid\n                container\n                spacing={0}\n                direction=\"column\"\n                alignItems=\"center\"\n                justify=\"center\"\n                style={{ minHeight: '100vh' }}\n            >\n            \n                <Grid item xs={6}>\n                        <Card  style={{width: '100%'}}>\n                        <CardContent>\n                        <Typography \n                               color=\"textSecondary\" gutterBottom>\n                            Vets\n                        </Typography>\n                        <Typography \n                                variant=\"h5\" component=\"h2\">\n                            Recuperar Senha\n                        </Typography>\n                        <form onSubmit={ this.handleSubmit }>\n                            <FormControl  fullWidth={true} >\n                                <InputLabel htmlFor=\"username\">E-mail</InputLabel>\n                                <Input\n                                type=\"username\"\n                                id=\"username\"\n                                value={ this.state.username }\n                                name=\"username\"\n                                onChange={this.handleInputChange}\n                                aria-describedby=\"username-text\"\n                                onChange={ this.handleInputChange }\n                                value={ this.state.username }\n                                />\n                                {this.state.errors && (<FormHelperText id=\"username-text\" style={{color: 'red'}}>{this.state.errors}</FormHelperText>)}\n                                {this.state.message && (<FormHelperText id=\"username-text\"  style={{color: 'green'}}>{this.state.message}</FormHelperText>)}\n                            </FormControl>\n                        <CardActions>\n                           {this.state.isFetching && (\n                            <Grid\n                                container\n                                spacing={0}\n                                direction=\"column\"\n                                alignItems=\"center\"\n                                justify=\"center\"\n                                style={{marginTop: 30}}\n                               fullWidth={true}\n                            >\n                                    <CircularProgress />\n                                </Grid>\n                           )}\n                           {!this.state.isFetching && (\n                            <Button \n                            disabled={this.state.emailSent}\n                            fullWidth={true} variant=\"contained\" color=\"primary\" type=\"submit\" >\n                                    Enviar E-mail de Recuperação de Senha\n                            </Button>\n                            )}\n                        </CardActions>\n                        </form>\n                        </CardContent>\n                        \n                    </Card>\n                </Grid>      \n            </Grid>\n        );\n    }\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../actions/authentication'\nimport { makeStyles } from '@material-ui/core/styles'\nimport FormControl   from '@material-ui/core/FormControl'\nimport InputLabel   from '@material-ui/core/InputLabel'\nimport Input   from '@material-ui/core/Input'\nimport FormHelperText   from '@material-ui/core/FormHelperText'\nimport Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Link from '@material-ui/core/Link'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport ResetPassword from './ForgotPassword'\n\nclass Login extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            username: '',\n            password: '',\n            errors: {}\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    \n    handleInputChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleSubmit(e) {\n        e.preventDefault()\n        console.log()\n        const user = {\n            username: this.state.username,\n            password: this.state.password,\n        }\n        this.props.loginUser(user);\n    }\n\n    componentDidMount() {\n        if(this.props.auth.isAuthenticated) {\n            this.props.history.push('/');\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.auth.isAuthenticated) {\n            this.props.history.push('/')\n        }\n        if(nextProps.errors) {\n            this.setState({\n                errors: nextProps.errors\n            });\n        }\n    }\n\n    render() {\n        \n\n        const {errors} = this.state\n\n    //    React.useEffect(() => {\n    //        setLabelWidth(labelRef.current.offsetWidth)\n    //      }, [])\n\n        return(\n            \n                <Grid\n                container\n                spacing={0}\n                direction=\"column\"\n                alignItems=\"center\"\n                justify=\"center\"\n                style={{ minHeight: '100vh' }}\n            >\n            \n                <Grid item xs={6}>\n                        <Card className={classes.card}>\n                        <CardContent>\n                        <Typography \n                                className={classes.title} color=\"textSecondary\" gutterBottom>\n                            Vets\n                        </Typography>\n                        <Typography \n                                variant=\"h5\" component=\"h2\">\n                            Login\n                        </Typography>\n                        <form onSubmit={ this.handleSubmit }>\n                            <FormControl className={classes.formControl} fullWidth={true} >\n                                <InputLabel htmlFor=\"username\">E-mail</InputLabel>\n                                <Input\n                                type=\"username\"\n                                id=\"username\"\n                                value={ this.state.username }\n                                name=\"username\"\n                                onChange={this.handleInputChange}\n                                aria-describedby=\"username-text\"\n                                onChange={ this.handleInputChange }\n                                value={ this.state.username }\n                                />\n                                {errors.username && (<FormHelperText id=\"username-text\" style={{color: 'red'}}>{errors.username}</FormHelperText>)}\n                            </FormControl>\n                            <FormControl  fullWidth={true} className={classes.formControl} >\n                                <InputLabel htmlFor=\"password\">Senha</InputLabel>\n                                <Input\n                                type=\"password\"\n                                id=\"password\"\n                                value={ this.state.password }\n                                name=\"password\"\n                                onChange={this.handleInputChange}\n                                aria-describedby=\"password-text\"\n                                onChange={ this.handleInputChange }\n                                value={ this.state.password }\n                                />\n                                {errors.password && (<FormHelperText id=\"password-text\" style={{color: 'red'}}>{errors.password}</FormHelperText>)}\n                            </FormControl>\n                            \n                            \n                        <CardActions>\n                            <Button fullWidth={true} variant=\"contained\" color=\"primary\" type=\"submit\" >\n                                Login\n                            </Button>\n                        </CardActions>\n                        </form>\n                        </CardContent>\n                        <CardActions>\n                                <Link component={ AdapterLink } to=\"/forgot_password\">\n                                    Esqueceu sua senha?\n                                </Link>\n                        </CardActions>\n\n                    </Card>\n                </Grid>      \n            </Grid>\n        )\n    }\n}\nconst AdapterLink = React.forwardRef((props, ref) => <RouterLink innerRef={ref} {...props} />);\n\nconst classes = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n      },\n      formControl: {\n        margin: theme.spacing(1),\n        width: '100%'\n      },\n    card: {\n        minWidth: 275,\n        maxWidth:400\n      },\n    button: {\n      margin: theme.spacing(1),\n      width: '100%'\n    },\n    input: {\n      display: 'none',\n      width: '100%'\n    },\n    title: {\n        alignItems: \"center\",\n        justify: \"center\"\n    }\n  }))\n\n//  const [labelWidth, setLabelWidth] = React.useState(0)\n//  const [name, setName] = React.useState('Composed TextField')\n// /  const labelRef = React.useRef(null)\n  \nLogin.propTypes = {\n    loginUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    errors: state.errors\n})\n\nexport  default connect(mapStateToProps, { loginUser })(Login)","import React, { Component } from 'react';\n\nexport default class Home extends Component {\n    render() {\n        return (\n            <div  style={{backgroundColor: 'red', marginTop:100}}>\n                Home Component 22222222\n            </div>\n        );\n    }\n}","import React, { Component } from 'react'\n\nimport FormControl   from '@material-ui/core/FormControl'\nimport InputLabel   from '@material-ui/core/InputLabel'\nimport Input   from '@material-ui/core/Input'\nimport FormHelperText   from '@material-ui/core/FormHelperText'\nimport Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport axios from  'axios'\nimport dotenv from 'dotenv'\ndotenv.config()\n\nexport default class ResetPassword extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            password: '',\n            confirmPassword: '',\n            message: false,\n            errors: false,\n            isFetching: false,\n            passwordReseted: false\n        }\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleInputChange = this.handleInputChange.bind(this)\n    }\n    handleSubmit(e){\n        e.preventDefault()\n        if(this.state.password && this.state.password.length < 6){\n            this.setState({\n                errors: 'A senha deve ter mínimo 6 carateres'\n            })\n        }else if(this.state.password != this.state.confirmPassword){\n            this.setState({\n                erros: 'A senhas digitadas não coincidem'\n            })\n        }else{\n                this.setState({\n                    isFetching: true\n                })\n                var url = process.env.REACT_APP_API_HOST + '/api/users/reset_password/'\n                if(this.props.location.search.split('=').length == 2){\n                    url += 'token/' + this.props.location.search.split('=')[1]\n                }\n                axios.post(url, {password: this.state.password, \n                                    confirmPassword : this.state.confirmPassword })\n                                    .then(res => {\n                                        this.setState({\n                                            message: res.data.msg,\n                                            errors: false,\n                                            isFetching: false,\n                                            passwordReseted: true\n                                        })\n                                    })\n                                    .catch(err => {\n                                        this.setState({\n                                            errors: JSON.stringify(err.response.data.msg),\n                                            isFetching: false\n                                        })\n                                    })\n\n        }\n    }\n    handleInputChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    render() {\n        return (\n                <Grid\n                container\n                spacing={0}\n                direction=\"column\"\n                alignItems=\"center\"\n                justify=\"center\"\n                style={{ minHeight: '100vh' }}\n            >\n            \n                <Grid item xs={6}>\n                        <Card  style={{width: '100%'}}>\n                        <CardContent>\n                        <Typography \n                               color=\"textSecondary\" gutterBottom>\n                            Vets\n                        </Typography>\n                        <Typography \n                                variant=\"h5\" component=\"h2\">\n                            Resetar Senha\n                        </Typography>\n                        <form onSubmit={ this.handleSubmit }>\n                            <FormControl  fullWidth={true} >\n                                <InputLabel htmlFor=\"password\">Senha</InputLabel>\n                                <Input\n                                type=\"password\"\n                                id=\"password\"\n                                value={ this.state.password }\n                                name=\"password\"\n                                onChange={this.handleInputChange}\n                                aria-describedby=\"password-text\"\n                                onChange={ this.handleInputChange }\n                                />\n                                \n                            </FormControl>\n                            <FormControl  fullWidth={true} >\n                                <InputLabel htmlFor=\"confirmPassword\">Confirmar Senha</InputLabel>\n                                <Input\n                                type=\"password\"\n                                id=\"confirmPassword\"\n                                value={ this.state.confirmPassword }\n                                name=\"confirmPassword\"\n                                onChange={this.handleInputChange}\n                                aria-describedby=\"confirmPassword-text\"\n                                onChange={ this.handleInputChange }\n                                />\n                                {this.state.errors && (<FormHelperText id=\"confirmPassword-text\" style={{color: 'red'}}>{this.state.errors}</FormHelperText>)}\n                                {this.state.message && (<FormHelperText id=\"confirmPassword-text\"  style={{color: 'green'}}>{this.state.message}</FormHelperText>)}\n                            </FormControl>\n                        <CardActions>\n                           {this.state.isFetching && (\n                            <Grid\n                                container\n                                spacing={0}\n                                direction=\"column\"\n                                alignItems=\"center\"\n                                justify=\"center\"\n                                style={{marginTop: 30}}\n                               fullWidth={true}\n                            >\n                                    <CircularProgress />\n                                </Grid>\n                           )}\n                           {!this.state.isFetching && (\n                            <Button fullWidth={true} \n                                    variant=\"contained\" color=\"primary\" type=\"submit\"\n                                     disabled={this.state.passwordReseted}>\n                                    Redefinir Senha\n                            </Button>\n                            )}\n                        </CardActions>\n                        </form>\n                        </CardContent>\n                        \n                    </Card>\n                </Grid>      \n            </Grid>\n        );\n    }\n}","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport jwt_decode from 'jwt-decode';\nimport setAuthToken from './setAuthToken'\nimport { setCurrentUser, logoutUser } from './actions/authentication';\n\nimport Navbar from './components/Navbar';\nimport Register from './components/Register';\nimport Login from './components/Login';\nimport Home from './components/Home';\nimport Users from './components/Users'\nimport Profile from './components/Profile'\nimport Exams from './components/Exams'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { makeStyles,createMuiTheme } from '@material-ui/core/styles'\nimport { ThemeProvider } from '@material-ui/styles'\nimport ForgotPassword from './components/ForgotPassword'\nimport ResetPassword from './components/ResetPassword'\n\nif(localStorage.jwtToken) {\n  setAuthToken(localStorage.jwtToken);\n  const decoded = jwt_decode(localStorage.jwtToken);\n  store.dispatch(setCurrentUser(decoded));\n\n  const currentTime = Date.now() / 1000;\n  if(decoded.exp < currentTime) {\n    store.dispatch(logoutUser());\n    window.location.href = '/login'\n  }\n}\n\nfunction App() {\n  const [theme, setTheme] = useState({\n    palette: {\n      type: \"light\",\n      primary: {\n        main: '#13aa52'\n      },\n      secondary: {\n        main: '#E33E7F'\n      },\n      accent: {\n        main: '#E33E7F'\n      },\n      background: {\n        default: \"#e6e6e6\"\n      }\n    }\n  })\n  const muiTheme = createMuiTheme(theme);\n\n    return (\n      <Provider store = { store }>\n        <ThemeProvider theme={muiTheme}>\n        <CssBaseline />\n        <Router>\n            <div>\n              <Navbar />\n                <Route exact path=\"/\" component={ Home } />\n                <div className=\"\">\n                  <Route exact path=\"/login\" component={ Login } />\n                  <Route exact path=\"/forgot_password\" component={ ForgotPassword } />\n                  <Route exact path=\"/reset_password\" component={ ResetPassword } />\n                </div>\n            </div>\n          </Router>\n          </ThemeProvider>\n        </Provider>\n    );\n  }\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}